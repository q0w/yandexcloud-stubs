"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import abc
import grpc
import yandex.cloud.serverless.apigateway.websocket.v1.connection_pb2
import yandex.cloud.serverless.apigateway.websocket.v1.connection_service_pb2

class ConnectionServiceStub:
    """A set of methods for managing API Gateway WebSocket connections."""

    def __init__(self, channel: grpc.Channel) -> None: ...
    Get: grpc.UnaryUnaryMultiCallable[
        yandex.cloud.serverless.apigateway.websocket.v1.connection_service_pb2.GetConnectionRequest,
        yandex.cloud.serverless.apigateway.websocket.v1.connection_pb2.Connection,
    ]
    """Returns the specified connection info."""
    Send: grpc.UnaryUnaryMultiCallable[
        yandex.cloud.serverless.apigateway.websocket.v1.connection_service_pb2.SendToConnectionRequest,
        yandex.cloud.serverless.apigateway.websocket.v1.connection_service_pb2.SendToConnectionResponse,
    ]
    """Sends data to the specified connection."""
    Disconnect: grpc.UnaryUnaryMultiCallable[
        yandex.cloud.serverless.apigateway.websocket.v1.connection_service_pb2.DisconnectRequest,
        yandex.cloud.serverless.apigateway.websocket.v1.connection_service_pb2.DisconnectResponse,
    ]
    """Disconnects the specified connection."""

class ConnectionServiceServicer(metaclass=abc.ABCMeta):
    """A set of methods for managing API Gateway WebSocket connections."""

    @abc.abstractmethod
    def Get(
        self,
        request: yandex.cloud.serverless.apigateway.websocket.v1.connection_service_pb2.GetConnectionRequest,
        context: grpc.ServicerContext,
    ) -> yandex.cloud.serverless.apigateway.websocket.v1.connection_pb2.Connection:
        """Returns the specified connection info."""
    @abc.abstractmethod
    def Send(
        self,
        request: yandex.cloud.serverless.apigateway.websocket.v1.connection_service_pb2.SendToConnectionRequest,
        context: grpc.ServicerContext,
    ) -> yandex.cloud.serverless.apigateway.websocket.v1.connection_service_pb2.SendToConnectionResponse:
        """Sends data to the specified connection."""
    @abc.abstractmethod
    def Disconnect(
        self,
        request: yandex.cloud.serverless.apigateway.websocket.v1.connection_service_pb2.DisconnectRequest,
        context: grpc.ServicerContext,
    ) -> yandex.cloud.serverless.apigateway.websocket.v1.connection_service_pb2.DisconnectResponse:
        """Disconnects the specified connection."""

def add_ConnectionServiceServicer_to_server(servicer: ConnectionServiceServicer, server: grpc.Server) -> None: ...
