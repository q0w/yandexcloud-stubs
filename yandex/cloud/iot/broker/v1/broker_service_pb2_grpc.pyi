"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import abc
import grpc
import yandex.cloud.iot.broker.v1.broker_pb2
import yandex.cloud.iot.broker.v1.broker_service_pb2
import yandex.cloud.operation.operation_pb2

class BrokerServiceStub:
    """A set of methods for managing broker."""

    def __init__(self, channel: grpc.Channel) -> None: ...
    Get: grpc.UnaryUnaryMultiCallable[
        yandex.cloud.iot.broker.v1.broker_service_pb2.GetBrokerRequest,
        yandex.cloud.iot.broker.v1.broker_pb2.Broker,
    ]
    """Returns the specified broker.

    To get the list of available brokers, make a [List] request.
    """
    List: grpc.UnaryUnaryMultiCallable[
        yandex.cloud.iot.broker.v1.broker_service_pb2.ListBrokersRequest,
        yandex.cloud.iot.broker.v1.broker_service_pb2.ListBrokersResponse,
    ]
    """Retrieves the list of brokers in the specified folder."""
    Create: grpc.UnaryUnaryMultiCallable[
        yandex.cloud.iot.broker.v1.broker_service_pb2.CreateBrokerRequest,
        yandex.cloud.operation.operation_pb2.Operation,
    ]
    """Creates a broker in the specified folder."""
    Update: grpc.UnaryUnaryMultiCallable[
        yandex.cloud.iot.broker.v1.broker_service_pb2.UpdateBrokerRequest,
        yandex.cloud.operation.operation_pb2.Operation,
    ]
    """Updates the specified broker."""
    Delete: grpc.UnaryUnaryMultiCallable[
        yandex.cloud.iot.broker.v1.broker_service_pb2.DeleteBrokerRequest,
        yandex.cloud.operation.operation_pb2.Operation,
    ]
    """Deletes the specified broker."""
    ListCertificates: grpc.UnaryUnaryMultiCallable[
        yandex.cloud.iot.broker.v1.broker_service_pb2.ListBrokerCertificatesRequest,
        yandex.cloud.iot.broker.v1.broker_service_pb2.ListBrokerCertificatesResponse,
    ]
    """Retrieves the list of broker certificates for the specified broker."""
    AddCertificate: grpc.UnaryUnaryMultiCallable[
        yandex.cloud.iot.broker.v1.broker_service_pb2.AddBrokerCertificateRequest,
        yandex.cloud.operation.operation_pb2.Operation,
    ]
    """Adds a certificate."""
    DeleteCertificate: grpc.UnaryUnaryMultiCallable[
        yandex.cloud.iot.broker.v1.broker_service_pb2.DeleteBrokerCertificateRequest,
        yandex.cloud.operation.operation_pb2.Operation,
    ]
    """Deletes the specified broker certificate."""
    ListPasswords: grpc.UnaryUnaryMultiCallable[
        yandex.cloud.iot.broker.v1.broker_service_pb2.ListBrokerPasswordsRequest,
        yandex.cloud.iot.broker.v1.broker_service_pb2.ListBrokerPasswordsResponse,
    ]
    """Retrieves the list of passwords for the specified broker."""
    AddPassword: grpc.UnaryUnaryMultiCallable[
        yandex.cloud.iot.broker.v1.broker_service_pb2.AddBrokerPasswordRequest,
        yandex.cloud.operation.operation_pb2.Operation,
    ]
    """Adds password for the specified broker."""
    DeletePassword: grpc.UnaryUnaryMultiCallable[
        yandex.cloud.iot.broker.v1.broker_service_pb2.DeleteBrokerPasswordRequest,
        yandex.cloud.operation.operation_pb2.Operation,
    ]
    """Deletes the specified password."""
    ListOperations: grpc.UnaryUnaryMultiCallable[
        yandex.cloud.iot.broker.v1.broker_service_pb2.ListBrokerOperationsRequest,
        yandex.cloud.iot.broker.v1.broker_service_pb2.ListBrokerOperationsResponse,
    ]
    """Lists operations for the specified broker."""

class BrokerServiceServicer(metaclass=abc.ABCMeta):
    """A set of methods for managing broker."""

    @abc.abstractmethod
    def Get(
        self,
        request: yandex.cloud.iot.broker.v1.broker_service_pb2.GetBrokerRequest,
        context: grpc.ServicerContext,
    ) -> yandex.cloud.iot.broker.v1.broker_pb2.Broker:
        """Returns the specified broker.

        To get the list of available brokers, make a [List] request.
        """
    @abc.abstractmethod
    def List(
        self,
        request: yandex.cloud.iot.broker.v1.broker_service_pb2.ListBrokersRequest,
        context: grpc.ServicerContext,
    ) -> yandex.cloud.iot.broker.v1.broker_service_pb2.ListBrokersResponse:
        """Retrieves the list of brokers in the specified folder."""
    @abc.abstractmethod
    def Create(
        self,
        request: yandex.cloud.iot.broker.v1.broker_service_pb2.CreateBrokerRequest,
        context: grpc.ServicerContext,
    ) -> yandex.cloud.operation.operation_pb2.Operation:
        """Creates a broker in the specified folder."""
    @abc.abstractmethod
    def Update(
        self,
        request: yandex.cloud.iot.broker.v1.broker_service_pb2.UpdateBrokerRequest,
        context: grpc.ServicerContext,
    ) -> yandex.cloud.operation.operation_pb2.Operation:
        """Updates the specified broker."""
    @abc.abstractmethod
    def Delete(
        self,
        request: yandex.cloud.iot.broker.v1.broker_service_pb2.DeleteBrokerRequest,
        context: grpc.ServicerContext,
    ) -> yandex.cloud.operation.operation_pb2.Operation:
        """Deletes the specified broker."""
    @abc.abstractmethod
    def ListCertificates(
        self,
        request: yandex.cloud.iot.broker.v1.broker_service_pb2.ListBrokerCertificatesRequest,
        context: grpc.ServicerContext,
    ) -> yandex.cloud.iot.broker.v1.broker_service_pb2.ListBrokerCertificatesResponse:
        """Retrieves the list of broker certificates for the specified broker."""
    @abc.abstractmethod
    def AddCertificate(
        self,
        request: yandex.cloud.iot.broker.v1.broker_service_pb2.AddBrokerCertificateRequest,
        context: grpc.ServicerContext,
    ) -> yandex.cloud.operation.operation_pb2.Operation:
        """Adds a certificate."""
    @abc.abstractmethod
    def DeleteCertificate(
        self,
        request: yandex.cloud.iot.broker.v1.broker_service_pb2.DeleteBrokerCertificateRequest,
        context: grpc.ServicerContext,
    ) -> yandex.cloud.operation.operation_pb2.Operation:
        """Deletes the specified broker certificate."""
    @abc.abstractmethod
    def ListPasswords(
        self,
        request: yandex.cloud.iot.broker.v1.broker_service_pb2.ListBrokerPasswordsRequest,
        context: grpc.ServicerContext,
    ) -> yandex.cloud.iot.broker.v1.broker_service_pb2.ListBrokerPasswordsResponse:
        """Retrieves the list of passwords for the specified broker."""
    @abc.abstractmethod
    def AddPassword(
        self,
        request: yandex.cloud.iot.broker.v1.broker_service_pb2.AddBrokerPasswordRequest,
        context: grpc.ServicerContext,
    ) -> yandex.cloud.operation.operation_pb2.Operation:
        """Adds password for the specified broker."""
    @abc.abstractmethod
    def DeletePassword(
        self,
        request: yandex.cloud.iot.broker.v1.broker_service_pb2.DeleteBrokerPasswordRequest,
        context: grpc.ServicerContext,
    ) -> yandex.cloud.operation.operation_pb2.Operation:
        """Deletes the specified password."""
    @abc.abstractmethod
    def ListOperations(
        self,
        request: yandex.cloud.iot.broker.v1.broker_service_pb2.ListBrokerOperationsRequest,
        context: grpc.ServicerContext,
    ) -> yandex.cloud.iot.broker.v1.broker_service_pb2.ListBrokerOperationsResponse:
        """Lists operations for the specified broker."""

def add_BrokerServiceServicer_to_server(servicer: BrokerServiceServicer, server: grpc.Server) -> None: ...
