"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.message
import google.protobuf.wrappers_pb2
import typing
import typing_extensions
import yandex.cloud.cdn.v1.origin_pb2
import yandex.cloud.cdn.v1.resource_pb2

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

class GetResourceRequest(google.protobuf.message.Message):
    """A request to get a resource."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    RESOURCE_ID_FIELD_NUMBER: builtins.int
    resource_id: typing.Text
    """ID of the requested resource."""

    def __init__(self,
        *,
        resource_id: typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["resource_id",b"resource_id"]) -> None: ...
global___GetResourceRequest = GetResourceRequest

class ListResourcesRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    FOLDER_ID_FIELD_NUMBER: builtins.int
    PAGE_SIZE_FIELD_NUMBER: builtins.int
    PAGE_TOKEN_FIELD_NUMBER: builtins.int
    folder_id: typing.Text
    """ID of the folder to request listing for."""

    page_size: builtins.int
    """The maximum number of results per page to return. If the number of available
    results is larger than [page_size],
    the service returns a [ListResourcesResponse.next_page_token]
    that can be used to get the next page of results in subsequent list requests.
    """

    page_token: typing.Text
    """Page token. To get the next page of results,
    set [page_token] to the [ListResourcesResponse.next_page_token]
    returned by a previous list request.
    """

    def __init__(self,
        *,
        folder_id: typing.Text = ...,
        page_size: builtins.int = ...,
        page_token: typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["folder_id",b"folder_id","page_size",b"page_size","page_token",b"page_token"]) -> None: ...
global___ListResourcesRequest = ListResourcesRequest

class ListResourcesResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    RESOURCES_FIELD_NUMBER: builtins.int
    NEXT_PAGE_TOKEN_FIELD_NUMBER: builtins.int
    @property
    def resources(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[yandex.cloud.cdn.v1.resource_pb2.Resource]:
        """List of the resources"""
        pass
    next_page_token: typing.Text
    """[next_page_token] token allows you to get the next page of results for list requests.
    If the number of results is larger than [ListResourcesRequest.page_size], use
    the [next_page_token] as the value for the [ListResourcesRequest.page_token] query parameter
    in the next list request. Each subsequent list request will have its own
    [next_page_token] to continue paging through the results.
    """

    def __init__(self,
        *,
        resources: typing.Optional[typing.Iterable[yandex.cloud.cdn.v1.resource_pb2.Resource]] = ...,
        next_page_token: typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["next_page_token",b"next_page_token","resources",b"resources"]) -> None: ...
global___ListResourcesResponse = ListResourcesResponse

class CreateResourceRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    class Origin(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor
        ORIGIN_GROUP_ID_FIELD_NUMBER: builtins.int
        ORIGIN_SOURCE_FIELD_NUMBER: builtins.int
        ORIGIN_SOURCE_PARAMS_FIELD_NUMBER: builtins.int
        origin_group_id: builtins.int
        """ID of pre-created origin group."""

        origin_source: typing.Text
        """Create new Origins group with single source, it's id will be
        returned in result.
        """

        @property
        def origin_source_params(self) -> global___ResourceOriginParams:
            """Set up resource origin parameters."""
            pass
        def __init__(self,
            *,
            origin_group_id: builtins.int = ...,
            origin_source: typing.Text = ...,
            origin_source_params: typing.Optional[global___ResourceOriginParams] = ...,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions.Literal["origin_group_id",b"origin_group_id","origin_source",b"origin_source","origin_source_params",b"origin_source_params","origin_variant",b"origin_variant"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing_extensions.Literal["origin_group_id",b"origin_group_id","origin_source",b"origin_source","origin_source_params",b"origin_source_params","origin_variant",b"origin_variant"]) -> None: ...
        def WhichOneof(self, oneof_group: typing_extensions.Literal["origin_variant",b"origin_variant"]) -> typing.Optional[typing_extensions.Literal["origin_group_id","origin_source","origin_source_params"]]: ...

    FOLDER_ID_FIELD_NUMBER: builtins.int
    CNAME_FIELD_NUMBER: builtins.int
    ORIGIN_FIELD_NUMBER: builtins.int
    SECONDARY_HOSTNAMES_FIELD_NUMBER: builtins.int
    ORIGIN_PROTOCOL_FIELD_NUMBER: builtins.int
    ACTIVE_FIELD_NUMBER: builtins.int
    OPTIONS_FIELD_NUMBER: builtins.int
    SSL_CERTIFICATE_FIELD_NUMBER: builtins.int
    folder_id: typing.Text
    """ID of the to bind with new resource."""

    cname: typing.Text
    """CDN endpoint CNAME, must be unique among clients's resources."""

    @property
    def origin(self) -> global___CreateResourceRequest.Origin:
        """Specify the origins to be used for CDN resources requests."""
        pass
    @property
    def secondary_hostnames(self) -> yandex.cloud.cdn.v1.resource_pb2.SecondaryHostnames:
        """List of additional CNAMEs."""
        pass
    origin_protocol: yandex.cloud.cdn.v1.resource_pb2.OriginProtocol.ValueType
    """Specify the protocol schema to be used in communication with origin."""

    @property
    def active(self) -> google.protobuf.wrappers_pb2.BoolValue:
        """Flag to create Resource either in active or disabled state.
        In active state Origins payload could be transmitted from CDN CNAME requests.
        Default value: true
        """
        pass
    @property
    def options(self) -> yandex.cloud.cdn.v1.resource_pb2.ResourceOptions:
        """Resource settings and options to tune CDN edge behavior. Most is unset."""
        pass
    @property
    def ssl_certificate(self) -> yandex.cloud.cdn.v1.resource_pb2.SSLTargetCertificate:
        """SSL Certificate options."""
        pass
    def __init__(self,
        *,
        folder_id: typing.Text = ...,
        cname: typing.Text = ...,
        origin: typing.Optional[global___CreateResourceRequest.Origin] = ...,
        secondary_hostnames: typing.Optional[yandex.cloud.cdn.v1.resource_pb2.SecondaryHostnames] = ...,
        origin_protocol: yandex.cloud.cdn.v1.resource_pb2.OriginProtocol.ValueType = ...,
        active: typing.Optional[google.protobuf.wrappers_pb2.BoolValue] = ...,
        options: typing.Optional[yandex.cloud.cdn.v1.resource_pb2.ResourceOptions] = ...,
        ssl_certificate: typing.Optional[yandex.cloud.cdn.v1.resource_pb2.SSLTargetCertificate] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["active",b"active","options",b"options","origin",b"origin","secondary_hostnames",b"secondary_hostnames","ssl_certificate",b"ssl_certificate"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["active",b"active","cname",b"cname","folder_id",b"folder_id","options",b"options","origin",b"origin","origin_protocol",b"origin_protocol","secondary_hostnames",b"secondary_hostnames","ssl_certificate",b"ssl_certificate"]) -> None: ...
global___CreateResourceRequest = CreateResourceRequest

class ResourceOriginParams(google.protobuf.message.Message):
    """A set of resource origin parameters."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    SOURCE_FIELD_NUMBER: builtins.int
    META_FIELD_NUMBER: builtins.int
    source: typing.Text
    """Source of the content."""

    @property
    def meta(self) -> yandex.cloud.cdn.v1.origin_pb2.OriginMeta:
        """Set up type of the origin."""
        pass
    def __init__(self,
        *,
        source: typing.Text = ...,
        meta: typing.Optional[yandex.cloud.cdn.v1.origin_pb2.OriginMeta] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["meta",b"meta"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["meta",b"meta","source",b"source"]) -> None: ...
global___ResourceOriginParams = ResourceOriginParams

class CreateResourceMetadata(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    RESOURCE_ID_FIELD_NUMBER: builtins.int
    resource_id: typing.Text
    """ID of created resource."""

    def __init__(self,
        *,
        resource_id: typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["resource_id",b"resource_id"]) -> None: ...
global___CreateResourceMetadata = CreateResourceMetadata

class UpdateResourceRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    RESOURCE_ID_FIELD_NUMBER: builtins.int
    ORIGIN_GROUP_ID_FIELD_NUMBER: builtins.int
    SECONDARY_HOSTNAMES_FIELD_NUMBER: builtins.int
    OPTIONS_FIELD_NUMBER: builtins.int
    ORIGIN_PROTOCOL_FIELD_NUMBER: builtins.int
    ACTIVE_FIELD_NUMBER: builtins.int
    SSL_CERTIFICATE_FIELD_NUMBER: builtins.int
    resource_id: typing.Text
    """ID of updated resource."""

    @property
    def origin_group_id(self) -> google.protobuf.wrappers_pb2.Int64Value:
        """ID of updated origin group."""
        pass
    @property
    def secondary_hostnames(self) -> yandex.cloud.cdn.v1.resource_pb2.SecondaryHostnames:
        """List of additional CNAMEs."""
        pass
    @property
    def options(self) -> yandex.cloud.cdn.v1.resource_pb2.ResourceOptions:
        """Resource settings and options to tune CDN edge behavior."""
        pass
    origin_protocol: yandex.cloud.cdn.v1.resource_pb2.OriginProtocol.ValueType
    """Specify the protocol schema to be used in communication with origin."""

    @property
    def active(self) -> google.protobuf.wrappers_pb2.BoolValue:
        """Flag to create Resource either in active or disabled state.
        In active state Origins payload could be transmitted from CDN CNAME requests.
        Default value: true
        """
        pass
    @property
    def ssl_certificate(self) -> yandex.cloud.cdn.v1.resource_pb2.SSLTargetCertificate:
        """SSL Certificate options."""
        pass
    def __init__(self,
        *,
        resource_id: typing.Text = ...,
        origin_group_id: typing.Optional[google.protobuf.wrappers_pb2.Int64Value] = ...,
        secondary_hostnames: typing.Optional[yandex.cloud.cdn.v1.resource_pb2.SecondaryHostnames] = ...,
        options: typing.Optional[yandex.cloud.cdn.v1.resource_pb2.ResourceOptions] = ...,
        origin_protocol: yandex.cloud.cdn.v1.resource_pb2.OriginProtocol.ValueType = ...,
        active: typing.Optional[google.protobuf.wrappers_pb2.BoolValue] = ...,
        ssl_certificate: typing.Optional[yandex.cloud.cdn.v1.resource_pb2.SSLTargetCertificate] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["active",b"active","options",b"options","origin_group_id",b"origin_group_id","secondary_hostnames",b"secondary_hostnames","ssl_certificate",b"ssl_certificate"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["active",b"active","options",b"options","origin_group_id",b"origin_group_id","origin_protocol",b"origin_protocol","resource_id",b"resource_id","secondary_hostnames",b"secondary_hostnames","ssl_certificate",b"ssl_certificate"]) -> None: ...
global___UpdateResourceRequest = UpdateResourceRequest

class UpdateResourceMetadata(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    RESOURCE_ID_FIELD_NUMBER: builtins.int
    resource_id: typing.Text
    """ID of updated resource."""

    def __init__(self,
        *,
        resource_id: typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["resource_id",b"resource_id"]) -> None: ...
global___UpdateResourceMetadata = UpdateResourceMetadata

class DeleteResourceRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    RESOURCE_ID_FIELD_NUMBER: builtins.int
    resource_id: typing.Text
    """ID of resource to delete."""

    def __init__(self,
        *,
        resource_id: typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["resource_id",b"resource_id"]) -> None: ...
global___DeleteResourceRequest = DeleteResourceRequest

class DeleteResourceMetadata(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    RESOURCE_ID_FIELD_NUMBER: builtins.int
    resource_id: typing.Text
    """ID of deleted resource."""

    def __init__(self,
        *,
        resource_id: typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["resource_id",b"resource_id"]) -> None: ...
global___DeleteResourceMetadata = DeleteResourceMetadata

class GetProviderCNameRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    FOLDER_ID_FIELD_NUMBER: builtins.int
    folder_id: typing.Text
    """Folder ID to get provider's CNAME."""

    def __init__(self,
        *,
        folder_id: typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["folder_id",b"folder_id"]) -> None: ...
global___GetProviderCNameRequest = GetProviderCNameRequest

class GetProviderCNameResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    CNAME_FIELD_NUMBER: builtins.int
    FOLDER_ID_FIELD_NUMBER: builtins.int
    cname: typing.Text
    """Provider's CNAME."""

    folder_id: typing.Text
    """ID of the folder that the provider belongs to."""

    def __init__(self,
        *,
        cname: typing.Text = ...,
        folder_id: typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["cname",b"cname","folder_id",b"folder_id"]) -> None: ...
global___GetProviderCNameResponse = GetProviderCNameResponse
