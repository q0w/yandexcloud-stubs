"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import google.protobuf.descriptor
import google.protobuf.message
import typing
import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

class Customer(google.protobuf.message.Message):
    """A Customer resource."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    ID_FIELD_NUMBER: builtins.int
    BILLING_ACCOUNT_ID_FIELD_NUMBER: builtins.int
    id: typing.Text
    """ID of the customer."""

    billing_account_id: typing.Text
    """ID of the [yandex.cloud.billing.v1.BillingAccount] assigned to the customer."""

    def __init__(self,
        *,
        id: typing.Text = ...,
        billing_account_id: typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["billing_account_id",b"billing_account_id","id",b"id"]) -> None: ...
global___Customer = Customer

class CustomerPerson(google.protobuf.message.Message):
    """Person of the customer. Contains legal information."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    NAME_FIELD_NUMBER: builtins.int
    LONGNAME_FIELD_NUMBER: builtins.int
    PHONE_FIELD_NUMBER: builtins.int
    EMAIL_FIELD_NUMBER: builtins.int
    POST_CODE_FIELD_NUMBER: builtins.int
    POST_ADDRESS_FIELD_NUMBER: builtins.int
    LEGAL_ADDRESS_FIELD_NUMBER: builtins.int
    TIN_FIELD_NUMBER: builtins.int
    name: typing.Text
    """Name of the person."""

    longname: typing.Text
    """Long name of the person."""

    phone: typing.Text
    """Phone of the person."""

    email: typing.Text
    """Email of the person."""

    post_code: typing.Text
    """Post code of the person."""

    post_address: typing.Text
    """Post address of the person."""

    legal_address: typing.Text
    """Legal address of the person."""

    tin: typing.Text
    """Tax identification number of the person."""

    def __init__(self,
        *,
        name: typing.Text = ...,
        longname: typing.Text = ...,
        phone: typing.Text = ...,
        email: typing.Text = ...,
        post_code: typing.Text = ...,
        post_address: typing.Text = ...,
        legal_address: typing.Text = ...,
        tin: typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["email",b"email","legal_address",b"legal_address","longname",b"longname","name",b"name","phone",b"phone","post_address",b"post_address","post_code",b"post_code","tin",b"tin"]) -> None: ...
global___CustomerPerson = CustomerPerson
