"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import abc
import grpc
import yandex.cloud.operation.operation_pb2
import yandex.cloud.organizationmanager.v1.saml.certificate_pb2
import yandex.cloud.organizationmanager.v1.saml.certificate_service_pb2

class CertificateServiceStub:
    """A set of methods for managing certificates."""
    def __init__(self, channel: grpc.Channel) -> None: ...
    Get: grpc.UnaryUnaryMultiCallable[
        yandex.cloud.organizationmanager.v1.saml.certificate_service_pb2.GetCertificateRequest,
        yandex.cloud.organizationmanager.v1.saml.certificate_pb2.Certificate]
    """Returns the specified certificate.

    To get the list of available certificates, make a [List] request.
    """

    List: grpc.UnaryUnaryMultiCallable[
        yandex.cloud.organizationmanager.v1.saml.certificate_service_pb2.ListCertificatesRequest,
        yandex.cloud.organizationmanager.v1.saml.certificate_service_pb2.ListCertificatesResponse]
    """Retrieves the list of certificates in the specified federation."""

    Create: grpc.UnaryUnaryMultiCallable[
        yandex.cloud.organizationmanager.v1.saml.certificate_service_pb2.CreateCertificateRequest,
        yandex.cloud.operation.operation_pb2.Operation]
    """Creates a certificate in the specified federation."""

    Update: grpc.UnaryUnaryMultiCallable[
        yandex.cloud.organizationmanager.v1.saml.certificate_service_pb2.UpdateCertificateRequest,
        yandex.cloud.operation.operation_pb2.Operation]
    """Updates the specified certificate."""

    Delete: grpc.UnaryUnaryMultiCallable[
        yandex.cloud.organizationmanager.v1.saml.certificate_service_pb2.DeleteCertificateRequest,
        yandex.cloud.operation.operation_pb2.Operation]
    """Deletes the specified certificate."""

    ListOperations: grpc.UnaryUnaryMultiCallable[
        yandex.cloud.organizationmanager.v1.saml.certificate_service_pb2.ListCertificateOperationsRequest,
        yandex.cloud.organizationmanager.v1.saml.certificate_service_pb2.ListCertificateOperationsResponse]
    """Lists operations for the specified certificate."""


class CertificateServiceServicer(metaclass=abc.ABCMeta):
    """A set of methods for managing certificates."""
    @abc.abstractmethod
    def Get(self,
        request: yandex.cloud.organizationmanager.v1.saml.certificate_service_pb2.GetCertificateRequest,
        context: grpc.ServicerContext,
    ) -> yandex.cloud.organizationmanager.v1.saml.certificate_pb2.Certificate:
        """Returns the specified certificate.

        To get the list of available certificates, make a [List] request.
        """
        pass

    @abc.abstractmethod
    def List(self,
        request: yandex.cloud.organizationmanager.v1.saml.certificate_service_pb2.ListCertificatesRequest,
        context: grpc.ServicerContext,
    ) -> yandex.cloud.organizationmanager.v1.saml.certificate_service_pb2.ListCertificatesResponse:
        """Retrieves the list of certificates in the specified federation."""
        pass

    @abc.abstractmethod
    def Create(self,
        request: yandex.cloud.organizationmanager.v1.saml.certificate_service_pb2.CreateCertificateRequest,
        context: grpc.ServicerContext,
    ) -> yandex.cloud.operation.operation_pb2.Operation:
        """Creates a certificate in the specified federation."""
        pass

    @abc.abstractmethod
    def Update(self,
        request: yandex.cloud.organizationmanager.v1.saml.certificate_service_pb2.UpdateCertificateRequest,
        context: grpc.ServicerContext,
    ) -> yandex.cloud.operation.operation_pb2.Operation:
        """Updates the specified certificate."""
        pass

    @abc.abstractmethod
    def Delete(self,
        request: yandex.cloud.organizationmanager.v1.saml.certificate_service_pb2.DeleteCertificateRequest,
        context: grpc.ServicerContext,
    ) -> yandex.cloud.operation.operation_pb2.Operation:
        """Deletes the specified certificate."""
        pass

    @abc.abstractmethod
    def ListOperations(self,
        request: yandex.cloud.organizationmanager.v1.saml.certificate_service_pb2.ListCertificateOperationsRequest,
        context: grpc.ServicerContext,
    ) -> yandex.cloud.organizationmanager.v1.saml.certificate_service_pb2.ListCertificateOperationsResponse:
        """Lists operations for the specified certificate."""
        pass


def add_CertificateServiceServicer_to_server(servicer: CertificateServiceServicer, server: grpc.Server) -> None: ...
