"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.message
import typing
import typing_extensions
import yandex.cloud.datatransfer.v1.endpoint.clickhouse_pb2
import yandex.cloud.datatransfer.v1.endpoint.mongo_pb2
import yandex.cloud.datatransfer.v1.endpoint.mysql_pb2
import yandex.cloud.datatransfer.v1.endpoint.postgres_pb2

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

class Endpoint(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    class LabelsEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor
        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: typing.Text
        value: typing.Text
        def __init__(self,
            *,
            key: typing.Text = ...,
            value: typing.Text = ...,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["key",b"key","value",b"value"]) -> None: ...

    ID_FIELD_NUMBER: builtins.int
    FOLDER_ID_FIELD_NUMBER: builtins.int
    NAME_FIELD_NUMBER: builtins.int
    DESCRIPTION_FIELD_NUMBER: builtins.int
    LABELS_FIELD_NUMBER: builtins.int
    SETTINGS_FIELD_NUMBER: builtins.int
    id: typing.Text
    folder_id: typing.Text
    name: typing.Text
    description: typing.Text
    @property
    def labels(self) -> google.protobuf.internal.containers.ScalarMap[typing.Text, typing.Text]: ...
    @property
    def settings(self) -> global___EndpointSettings: ...
    def __init__(self,
        *,
        id: typing.Text = ...,
        folder_id: typing.Text = ...,
        name: typing.Text = ...,
        description: typing.Text = ...,
        labels: typing.Optional[typing.Mapping[typing.Text, typing.Text]] = ...,
        settings: typing.Optional[global___EndpointSettings] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["settings",b"settings"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["description",b"description","folder_id",b"folder_id","id",b"id","labels",b"labels","name",b"name","settings",b"settings"]) -> None: ...
global___Endpoint = Endpoint

class EndpointSettings(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    MYSQL_SOURCE_FIELD_NUMBER: builtins.int
    POSTGRES_SOURCE_FIELD_NUMBER: builtins.int
    MONGO_SOURCE_FIELD_NUMBER: builtins.int
    CLICKHOUSE_SOURCE_FIELD_NUMBER: builtins.int
    MYSQL_TARGET_FIELD_NUMBER: builtins.int
    POSTGRES_TARGET_FIELD_NUMBER: builtins.int
    CLICKHOUSE_TARGET_FIELD_NUMBER: builtins.int
    MONGO_TARGET_FIELD_NUMBER: builtins.int
    @property
    def mysql_source(self) -> yandex.cloud.datatransfer.v1.endpoint.mysql_pb2.MysqlSource: ...
    @property
    def postgres_source(self) -> yandex.cloud.datatransfer.v1.endpoint.postgres_pb2.PostgresSource: ...
    @property
    def mongo_source(self) -> yandex.cloud.datatransfer.v1.endpoint.mongo_pb2.MongoSource: ...
    @property
    def clickhouse_source(self) -> yandex.cloud.datatransfer.v1.endpoint.clickhouse_pb2.ClickhouseSource: ...
    @property
    def mysql_target(self) -> yandex.cloud.datatransfer.v1.endpoint.mysql_pb2.MysqlTarget: ...
    @property
    def postgres_target(self) -> yandex.cloud.datatransfer.v1.endpoint.postgres_pb2.PostgresTarget: ...
    @property
    def clickhouse_target(self) -> yandex.cloud.datatransfer.v1.endpoint.clickhouse_pb2.ClickhouseTarget: ...
    @property
    def mongo_target(self) -> yandex.cloud.datatransfer.v1.endpoint.mongo_pb2.MongoTarget: ...
    def __init__(self,
        *,
        mysql_source: typing.Optional[yandex.cloud.datatransfer.v1.endpoint.mysql_pb2.MysqlSource] = ...,
        postgres_source: typing.Optional[yandex.cloud.datatransfer.v1.endpoint.postgres_pb2.PostgresSource] = ...,
        mongo_source: typing.Optional[yandex.cloud.datatransfer.v1.endpoint.mongo_pb2.MongoSource] = ...,
        clickhouse_source: typing.Optional[yandex.cloud.datatransfer.v1.endpoint.clickhouse_pb2.ClickhouseSource] = ...,
        mysql_target: typing.Optional[yandex.cloud.datatransfer.v1.endpoint.mysql_pb2.MysqlTarget] = ...,
        postgres_target: typing.Optional[yandex.cloud.datatransfer.v1.endpoint.postgres_pb2.PostgresTarget] = ...,
        clickhouse_target: typing.Optional[yandex.cloud.datatransfer.v1.endpoint.clickhouse_pb2.ClickhouseTarget] = ...,
        mongo_target: typing.Optional[yandex.cloud.datatransfer.v1.endpoint.mongo_pb2.MongoTarget] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["clickhouse_source",b"clickhouse_source","clickhouse_target",b"clickhouse_target","mongo_source",b"mongo_source","mongo_target",b"mongo_target","mysql_source",b"mysql_source","mysql_target",b"mysql_target","postgres_source",b"postgres_source","postgres_target",b"postgres_target","settings",b"settings"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["clickhouse_source",b"clickhouse_source","clickhouse_target",b"clickhouse_target","mongo_source",b"mongo_source","mongo_target",b"mongo_target","mysql_source",b"mysql_source","mysql_target",b"mysql_target","postgres_source",b"postgres_source","postgres_target",b"postgres_target","settings",b"settings"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["settings",b"settings"]) -> typing.Optional[typing_extensions.Literal["mysql_source","postgres_source","mongo_source","clickhouse_source","mysql_target","postgres_target","clickhouse_target","mongo_target"]]: ...
global___EndpointSettings = EndpointSettings
