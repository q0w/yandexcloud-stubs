"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.message
import typing
import typing_extensions
import yandex.cloud.datatransfer.v1.endpoint.common_pb2

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

class OnPremiseMongo(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    HOSTS_FIELD_NUMBER: builtins.int
    PORT_FIELD_NUMBER: builtins.int
    TLS_MODE_FIELD_NUMBER: builtins.int
    REPLICA_SET_FIELD_NUMBER: builtins.int
    @property
    def hosts(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]: ...
    port: builtins.int
    @property
    def tls_mode(self) -> yandex.cloud.datatransfer.v1.endpoint.common_pb2.TLSMode: ...
    replica_set: typing.Text
    def __init__(self,
        *,
        hosts: typing.Optional[typing.Iterable[typing.Text]] = ...,
        port: builtins.int = ...,
        tls_mode: typing.Optional[yandex.cloud.datatransfer.v1.endpoint.common_pb2.TLSMode] = ...,
        replica_set: typing.Text = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["tls_mode",b"tls_mode"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["hosts",b"hosts","port",b"port","replica_set",b"replica_set","tls_mode",b"tls_mode"]) -> None: ...
global___OnPremiseMongo = OnPremiseMongo

class MongoConnectionOptions(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    MDB_CLUSTER_ID_FIELD_NUMBER: builtins.int
    ON_PREMISE_FIELD_NUMBER: builtins.int
    USER_FIELD_NUMBER: builtins.int
    PASSWORD_FIELD_NUMBER: builtins.int
    AUTH_SOURCE_FIELD_NUMBER: builtins.int
    mdb_cluster_id: typing.Text
    @property
    def on_premise(self) -> global___OnPremiseMongo: ...
    user: typing.Text
    @property
    def password(self) -> yandex.cloud.datatransfer.v1.endpoint.common_pb2.Secret: ...
    auth_source: typing.Text
    def __init__(self,
        *,
        mdb_cluster_id: typing.Text = ...,
        on_premise: typing.Optional[global___OnPremiseMongo] = ...,
        user: typing.Text = ...,
        password: typing.Optional[yandex.cloud.datatransfer.v1.endpoint.common_pb2.Secret] = ...,
        auth_source: typing.Text = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["address",b"address","mdb_cluster_id",b"mdb_cluster_id","on_premise",b"on_premise","password",b"password"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["address",b"address","auth_source",b"auth_source","mdb_cluster_id",b"mdb_cluster_id","on_premise",b"on_premise","password",b"password","user",b"user"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["address",b"address"]) -> typing.Optional[typing_extensions.Literal["mdb_cluster_id","on_premise"]]: ...
global___MongoConnectionOptions = MongoConnectionOptions

class MongoConnection(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    CONNECTION_OPTIONS_FIELD_NUMBER: builtins.int
    @property
    def connection_options(self) -> global___MongoConnectionOptions: ...
    def __init__(self,
        *,
        connection_options: typing.Optional[global___MongoConnectionOptions] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["connection",b"connection","connection_options",b"connection_options"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["connection",b"connection","connection_options",b"connection_options"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["connection",b"connection"]) -> typing.Optional[typing_extensions.Literal["connection_options"]]: ...
global___MongoConnection = MongoConnection

class MongoCollection(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    DATABASE_NAME_FIELD_NUMBER: builtins.int
    COLLECTION_NAME_FIELD_NUMBER: builtins.int
    database_name: typing.Text
    collection_name: typing.Text
    def __init__(self,
        *,
        database_name: typing.Text = ...,
        collection_name: typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["collection_name",b"collection_name","database_name",b"database_name"]) -> None: ...
global___MongoCollection = MongoCollection

class MongoSource(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    CONNECTION_FIELD_NUMBER: builtins.int
    SUBNET_ID_FIELD_NUMBER: builtins.int
    SECURITY_GROUPS_FIELD_NUMBER: builtins.int
    COLLECTIONS_FIELD_NUMBER: builtins.int
    EXCLUDED_COLLECTIONS_FIELD_NUMBER: builtins.int
    SECONDARY_PREFERRED_MODE_FIELD_NUMBER: builtins.int
    @property
    def connection(self) -> global___MongoConnection: ...
    subnet_id: typing.Text
    @property
    def security_groups(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """Security groups"""
        pass
    @property
    def collections(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___MongoCollection]: ...
    @property
    def excluded_collections(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___MongoCollection]: ...
    secondary_preferred_mode: builtins.bool
    def __init__(self,
        *,
        connection: typing.Optional[global___MongoConnection] = ...,
        subnet_id: typing.Text = ...,
        security_groups: typing.Optional[typing.Iterable[typing.Text]] = ...,
        collections: typing.Optional[typing.Iterable[global___MongoCollection]] = ...,
        excluded_collections: typing.Optional[typing.Iterable[global___MongoCollection]] = ...,
        secondary_preferred_mode: builtins.bool = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["connection",b"connection"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["collections",b"collections","connection",b"connection","excluded_collections",b"excluded_collections","secondary_preferred_mode",b"secondary_preferred_mode","security_groups",b"security_groups","subnet_id",b"subnet_id"]) -> None: ...
global___MongoSource = MongoSource

class MongoTarget(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    CONNECTION_FIELD_NUMBER: builtins.int
    SUBNET_ID_FIELD_NUMBER: builtins.int
    SECURITY_GROUPS_FIELD_NUMBER: builtins.int
    DATABASE_FIELD_NUMBER: builtins.int
    CLEANUP_POLICY_FIELD_NUMBER: builtins.int
    @property
    def connection(self) -> global___MongoConnection: ...
    subnet_id: typing.Text
    @property
    def security_groups(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """Security groups"""
        pass
    database: typing.Text
    cleanup_policy: yandex.cloud.datatransfer.v1.endpoint.common_pb2.CleanupPolicy.ValueType
    def __init__(self,
        *,
        connection: typing.Optional[global___MongoConnection] = ...,
        subnet_id: typing.Text = ...,
        security_groups: typing.Optional[typing.Iterable[typing.Text]] = ...,
        database: typing.Text = ...,
        cleanup_policy: yandex.cloud.datatransfer.v1.endpoint.common_pb2.CleanupPolicy.ValueType = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["connection",b"connection"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["cleanup_policy",b"cleanup_policy","connection",b"connection","database",b"database","security_groups",b"security_groups","subnet_id",b"subnet_id"]) -> None: ...
global___MongoTarget = MongoTarget
