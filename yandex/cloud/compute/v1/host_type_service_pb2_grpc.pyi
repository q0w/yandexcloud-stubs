"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import abc
import grpc
import yandex.cloud.compute.v1.host_type_pb2
import yandex.cloud.compute.v1.host_type_service_pb2

class HostTypeServiceStub:
    """Set of methods to view possible host configurations."""

    def __init__(self, channel: grpc.Channel) -> None: ...
    Get: grpc.UnaryUnaryMultiCallable[
        yandex.cloud.compute.v1.host_type_service_pb2.GetHostTypeRequest,
        yandex.cloud.compute.v1.host_type_pb2.HostType,
    ]
    """Returns information about specified host type."""
    List: grpc.UnaryUnaryMultiCallable[
        yandex.cloud.compute.v1.host_type_service_pb2.ListHostTypesRequest,
        yandex.cloud.compute.v1.host_type_service_pb2.ListHostTypesResponse,
    ]
    """List avaliable host types."""

class HostTypeServiceServicer(metaclass=abc.ABCMeta):
    """Set of methods to view possible host configurations."""

    @abc.abstractmethod
    def Get(
        self,
        request: yandex.cloud.compute.v1.host_type_service_pb2.GetHostTypeRequest,
        context: grpc.ServicerContext,
    ) -> yandex.cloud.compute.v1.host_type_pb2.HostType:
        """Returns information about specified host type."""
    @abc.abstractmethod
    def List(
        self,
        request: yandex.cloud.compute.v1.host_type_service_pb2.ListHostTypesRequest,
        context: grpc.ServicerContext,
    ) -> yandex.cloud.compute.v1.host_type_service_pb2.ListHostTypesResponse:
        """List avaliable host types."""

def add_HostTypeServiceServicer_to_server(servicer: HostTypeServiceServicer, server: grpc.Server) -> None: ...
