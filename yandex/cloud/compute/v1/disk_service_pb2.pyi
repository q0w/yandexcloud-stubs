"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import google.protobuf.descriptor
import google.protobuf.field_mask_pb2
import google.protobuf.internal.containers
import google.protobuf.message
import typing
import typing_extensions
import yandex.cloud.compute.v1.disk_pb2
import yandex.cloud.compute.v1.snapshot_schedule_pb2
import yandex.cloud.operation.operation_pb2

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

class GetDiskRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    DISK_ID_FIELD_NUMBER: builtins.int
    disk_id: typing.Text
    """ID of the Disk resource to return.
    To get the disk ID use a [DiskService.List] request.
    """

    def __init__(self,
        *,
        disk_id: typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["disk_id",b"disk_id"]) -> None: ...
global___GetDiskRequest = GetDiskRequest

class ListDisksRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    FOLDER_ID_FIELD_NUMBER: builtins.int
    PAGE_SIZE_FIELD_NUMBER: builtins.int
    PAGE_TOKEN_FIELD_NUMBER: builtins.int
    FILTER_FIELD_NUMBER: builtins.int
    folder_id: typing.Text
    """ID of the folder to list disks in.
    To get the folder ID use a [yandex.cloud.resourcemanager.v1.FolderService.List] request.
    """

    page_size: builtins.int
    """The maximum number of results per page to return. If the number of available
    results is larger than [page_size],
    the service returns a [ListDisksResponse.next_page_token]
    that can be used to get the next page of results in subsequent list requests.
    """

    page_token: typing.Text
    """Page token. To get the next page of results, set [page_token] to the
    [ListDisksResponse.next_page_token] returned by a previous list request.
    """

    filter: typing.Text
    """A filter expression that filters resources listed in the response.
    The expression must specify:
    1. The field name. Currently you can use filtering only on the [Disk.name] field.
    2. An `=` operator.
    3. The value in double quotes (`"`). Must be 3-63 characters long and match the regular expression `[a-z]([-a-z0-9]{,61}[a-z0-9])?`.
    """

    def __init__(self,
        *,
        folder_id: typing.Text = ...,
        page_size: builtins.int = ...,
        page_token: typing.Text = ...,
        filter: typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["filter",b"filter","folder_id",b"folder_id","page_size",b"page_size","page_token",b"page_token"]) -> None: ...
global___ListDisksRequest = ListDisksRequest

class ListDisksResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    DISKS_FIELD_NUMBER: builtins.int
    NEXT_PAGE_TOKEN_FIELD_NUMBER: builtins.int
    @property
    def disks(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[yandex.cloud.compute.v1.disk_pb2.Disk]:
        """List of Disk resources."""
        pass
    next_page_token: typing.Text
    """This token allows you to get the next page of results for list requests. If the number of results
    is larger than [ListDisksRequest.page_size], use
    the [next_page_token] as the value
    for the [ListDisksRequest.page_token] query parameter
    in the next list request. Each subsequent list request will have its own
    [next_page_token] to continue paging through the results.
    """

    def __init__(self,
        *,
        disks: typing.Optional[typing.Iterable[yandex.cloud.compute.v1.disk_pb2.Disk]] = ...,
        next_page_token: typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["disks",b"disks","next_page_token",b"next_page_token"]) -> None: ...
global___ListDisksResponse = ListDisksResponse

class CreateDiskRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    class LabelsEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor
        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: typing.Text
        value: typing.Text
        def __init__(self,
            *,
            key: typing.Text = ...,
            value: typing.Text = ...,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["key",b"key","value",b"value"]) -> None: ...

    FOLDER_ID_FIELD_NUMBER: builtins.int
    NAME_FIELD_NUMBER: builtins.int
    DESCRIPTION_FIELD_NUMBER: builtins.int
    LABELS_FIELD_NUMBER: builtins.int
    TYPE_ID_FIELD_NUMBER: builtins.int
    ZONE_ID_FIELD_NUMBER: builtins.int
    SIZE_FIELD_NUMBER: builtins.int
    IMAGE_ID_FIELD_NUMBER: builtins.int
    SNAPSHOT_ID_FIELD_NUMBER: builtins.int
    BLOCK_SIZE_FIELD_NUMBER: builtins.int
    DISK_PLACEMENT_POLICY_FIELD_NUMBER: builtins.int
    SNAPSHOT_SCHEDULE_IDS_FIELD_NUMBER: builtins.int
    folder_id: typing.Text
    """ID of the folder to create a disk in.
    To get the folder ID use a [yandex.cloud.resourcemanager.v1.FolderService.List] request.
    """

    name: typing.Text
    """Name of the disk."""

    description: typing.Text
    """Description of the disk."""

    @property
    def labels(self) -> google.protobuf.internal.containers.ScalarMap[typing.Text, typing.Text]:
        """Resource labels as `key:value` pairs."""
        pass
    type_id: typing.Text
    """ID of the disk type.
    To get a list of available disk types use the [yandex.cloud.compute.v1.DiskTypeService.List] request.
    """

    zone_id: typing.Text
    """ID of the availability zone where the disk resides.
    To get a list of available zones use the [yandex.cloud.compute.v1.ZoneService.List] request.
    """

    size: builtins.int
    """Size of the disk, specified in bytes.
    If the disk was created from a image, this value should be more than the
    [yandex.cloud.compute.v1.Image.min_disk_size] value.
    """

    image_id: typing.Text
    """ID of the image to create the disk from."""

    snapshot_id: typing.Text
    """ID of the snapshot to restore the disk from."""

    block_size: builtins.int
    """Block size used for disk, specified in bytes. The default is 4096."""

    @property
    def disk_placement_policy(self) -> yandex.cloud.compute.v1.disk_pb2.DiskPlacementPolicy:
        """Placement policy configuration."""
        pass
    @property
    def snapshot_schedule_ids(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """Snapshot schedules"""
        pass
    def __init__(self,
        *,
        folder_id: typing.Text = ...,
        name: typing.Text = ...,
        description: typing.Text = ...,
        labels: typing.Optional[typing.Mapping[typing.Text, typing.Text]] = ...,
        type_id: typing.Text = ...,
        zone_id: typing.Text = ...,
        size: builtins.int = ...,
        image_id: typing.Text = ...,
        snapshot_id: typing.Text = ...,
        block_size: builtins.int = ...,
        disk_placement_policy: typing.Optional[yandex.cloud.compute.v1.disk_pb2.DiskPlacementPolicy] = ...,
        snapshot_schedule_ids: typing.Optional[typing.Iterable[typing.Text]] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["disk_placement_policy",b"disk_placement_policy","image_id",b"image_id","snapshot_id",b"snapshot_id","source",b"source"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["block_size",b"block_size","description",b"description","disk_placement_policy",b"disk_placement_policy","folder_id",b"folder_id","image_id",b"image_id","labels",b"labels","name",b"name","size",b"size","snapshot_id",b"snapshot_id","snapshot_schedule_ids",b"snapshot_schedule_ids","source",b"source","type_id",b"type_id","zone_id",b"zone_id"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["source",b"source"]) -> typing.Optional[typing_extensions.Literal["image_id","snapshot_id"]]: ...
global___CreateDiskRequest = CreateDiskRequest

class CreateDiskMetadata(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    DISK_ID_FIELD_NUMBER: builtins.int
    disk_id: typing.Text
    """ID of the disk that is being created."""

    def __init__(self,
        *,
        disk_id: typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["disk_id",b"disk_id"]) -> None: ...
global___CreateDiskMetadata = CreateDiskMetadata

class UpdateDiskRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    class LabelsEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor
        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: typing.Text
        value: typing.Text
        def __init__(self,
            *,
            key: typing.Text = ...,
            value: typing.Text = ...,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["key",b"key","value",b"value"]) -> None: ...

    DISK_ID_FIELD_NUMBER: builtins.int
    UPDATE_MASK_FIELD_NUMBER: builtins.int
    NAME_FIELD_NUMBER: builtins.int
    DESCRIPTION_FIELD_NUMBER: builtins.int
    LABELS_FIELD_NUMBER: builtins.int
    SIZE_FIELD_NUMBER: builtins.int
    DISK_PLACEMENT_POLICY_FIELD_NUMBER: builtins.int
    disk_id: typing.Text
    """ID of the Disk resource to update.
    To get the disk ID use a [DiskService.List] request.
    """

    @property
    def update_mask(self) -> google.protobuf.field_mask_pb2.FieldMask:
        """Field mask that specifies which fields of the Disk resource are going to be updated."""
        pass
    name: typing.Text
    """Name of the disk."""

    description: typing.Text
    """Description of the disk."""

    @property
    def labels(self) -> google.protobuf.internal.containers.ScalarMap[typing.Text, typing.Text]:
        """Resource labels as `key:value` pairs.

        Existing set of `labels` is completely replaced by the provided set.
        """
        pass
    size: builtins.int
    """Size of the disk, specified in bytes."""

    @property
    def disk_placement_policy(self) -> yandex.cloud.compute.v1.disk_pb2.DiskPlacementPolicy:
        """Placement policy configuration."""
        pass
    def __init__(self,
        *,
        disk_id: typing.Text = ...,
        update_mask: typing.Optional[google.protobuf.field_mask_pb2.FieldMask] = ...,
        name: typing.Text = ...,
        description: typing.Text = ...,
        labels: typing.Optional[typing.Mapping[typing.Text, typing.Text]] = ...,
        size: builtins.int = ...,
        disk_placement_policy: typing.Optional[yandex.cloud.compute.v1.disk_pb2.DiskPlacementPolicy] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["disk_placement_policy",b"disk_placement_policy","update_mask",b"update_mask"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["description",b"description","disk_id",b"disk_id","disk_placement_policy",b"disk_placement_policy","labels",b"labels","name",b"name","size",b"size","update_mask",b"update_mask"]) -> None: ...
global___UpdateDiskRequest = UpdateDiskRequest

class UpdateDiskMetadata(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    DISK_ID_FIELD_NUMBER: builtins.int
    disk_id: typing.Text
    """ID of the Disk resource that is being updated."""

    def __init__(self,
        *,
        disk_id: typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["disk_id",b"disk_id"]) -> None: ...
global___UpdateDiskMetadata = UpdateDiskMetadata

class DeleteDiskRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    DISK_ID_FIELD_NUMBER: builtins.int
    disk_id: typing.Text
    """ID of the disk to delete.
    To get the disk ID use a [DiskService.List] request.
    """

    def __init__(self,
        *,
        disk_id: typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["disk_id",b"disk_id"]) -> None: ...
global___DeleteDiskRequest = DeleteDiskRequest

class DeleteDiskMetadata(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    DISK_ID_FIELD_NUMBER: builtins.int
    disk_id: typing.Text
    """ID of the disk that is being deleted."""

    def __init__(self,
        *,
        disk_id: typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["disk_id",b"disk_id"]) -> None: ...
global___DeleteDiskMetadata = DeleteDiskMetadata

class ListDiskOperationsRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    DISK_ID_FIELD_NUMBER: builtins.int
    PAGE_SIZE_FIELD_NUMBER: builtins.int
    PAGE_TOKEN_FIELD_NUMBER: builtins.int
    disk_id: typing.Text
    """ID of the Disk resource to list operations for."""

    page_size: builtins.int
    """The maximum number of results per page to return. If the number of available
    results is larger than [page_size], the service returns a [ListDiskOperationsResponse.next_page_token]
    that can be used to get the next page of results in subsequent list requests.
    """

    page_token: typing.Text
    """Page token. To get the next page of results, set [page_token] to the
    [ListDiskOperationsResponse.next_page_token] returned by a previous list request.
    """

    def __init__(self,
        *,
        disk_id: typing.Text = ...,
        page_size: builtins.int = ...,
        page_token: typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["disk_id",b"disk_id","page_size",b"page_size","page_token",b"page_token"]) -> None: ...
global___ListDiskOperationsRequest = ListDiskOperationsRequest

class ListDiskOperationsResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    OPERATIONS_FIELD_NUMBER: builtins.int
    NEXT_PAGE_TOKEN_FIELD_NUMBER: builtins.int
    @property
    def operations(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[yandex.cloud.operation.operation_pb2.Operation]:
        """List of operations for the specified disk."""
        pass
    next_page_token: typing.Text
    """This token allows you to get the next page of results for list requests. If the number of results
    is larger than [ListDiskOperationsRequest.page_size], use the [next_page_token] as the value
    for the [ListDiskOperationsRequest.page_token] query parameter in the next list request.
    Each subsequent list request will have its own [next_page_token] to continue paging through the results.
    """

    def __init__(self,
        *,
        operations: typing.Optional[typing.Iterable[yandex.cloud.operation.operation_pb2.Operation]] = ...,
        next_page_token: typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["next_page_token",b"next_page_token","operations",b"operations"]) -> None: ...
global___ListDiskOperationsResponse = ListDiskOperationsResponse

class MoveDiskRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    DISK_ID_FIELD_NUMBER: builtins.int
    DESTINATION_FOLDER_ID_FIELD_NUMBER: builtins.int
    disk_id: typing.Text
    """ID of the disk to move.

    To get the disk ID, make a [DiskService.List] request.
    """

    destination_folder_id: typing.Text
    """ID of the folder to move the disk to.

    To get the folder ID, make a [yandex.cloud.resourcemanager.v1.FolderService.List] request.
    """

    def __init__(self,
        *,
        disk_id: typing.Text = ...,
        destination_folder_id: typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["destination_folder_id",b"destination_folder_id","disk_id",b"disk_id"]) -> None: ...
global___MoveDiskRequest = MoveDiskRequest

class MoveDiskMetadata(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    DISK_ID_FIELD_NUMBER: builtins.int
    SOURCE_FOLDER_ID_FIELD_NUMBER: builtins.int
    DESTINATION_FOLDER_ID_FIELD_NUMBER: builtins.int
    disk_id: typing.Text
    """ID of the disk that is being moved."""

    source_folder_id: typing.Text
    """ID of the folder that the disk is being moved from."""

    destination_folder_id: typing.Text
    """ID of the folder that the disk is being moved to."""

    def __init__(self,
        *,
        disk_id: typing.Text = ...,
        source_folder_id: typing.Text = ...,
        destination_folder_id: typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["destination_folder_id",b"destination_folder_id","disk_id",b"disk_id","source_folder_id",b"source_folder_id"]) -> None: ...
global___MoveDiskMetadata = MoveDiskMetadata

class ListDiskSnapshotSchedulesRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    DISK_ID_FIELD_NUMBER: builtins.int
    PAGE_SIZE_FIELD_NUMBER: builtins.int
    PAGE_TOKEN_FIELD_NUMBER: builtins.int
    disk_id: typing.Text
    """ID of the Disk resource to list snapshot schedules for."""

    page_size: builtins.int
    """The maximum number of results per page to return. If the number of available
    results is larger than [page_size], the service returns a [ListDiskOperationsResponse.next_page_token]
    that can be used to get the next page of results in subsequent list requests.
    """

    page_token: typing.Text
    """Page token. To get the next page of results, set [page_token] to the
    [ListDiskSnapshotSchedulesResponse.next_page_token] returned by a previous list request.
    """

    def __init__(self,
        *,
        disk_id: typing.Text = ...,
        page_size: builtins.int = ...,
        page_token: typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["disk_id",b"disk_id","page_size",b"page_size","page_token",b"page_token"]) -> None: ...
global___ListDiskSnapshotSchedulesRequest = ListDiskSnapshotSchedulesRequest

class ListDiskSnapshotSchedulesResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    SNAPSHOT_SCHEDULES_FIELD_NUMBER: builtins.int
    NEXT_PAGE_TOKEN_FIELD_NUMBER: builtins.int
    @property
    def snapshot_schedules(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[yandex.cloud.compute.v1.snapshot_schedule_pb2.SnapshotSchedule]:
        """List of snapshot schedules for the specified disk."""
        pass
    next_page_token: typing.Text
    """This token allows you to get the next page of results for list requests. If the number of results
    is larger than [ListDiskSnapshotSchedulesRequest.page_size], use the [next_page_token] as the value
    for the [ListDiskSnapshotSchedulesRequest.page_token] query parameter in the next list request.
    Each subsequent list request will have its own [next_page_token] to continue paging through the results.
    """

    def __init__(self,
        *,
        snapshot_schedules: typing.Optional[typing.Iterable[yandex.cloud.compute.v1.snapshot_schedule_pb2.SnapshotSchedule]] = ...,
        next_page_token: typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["next_page_token",b"next_page_token","snapshot_schedules",b"snapshot_schedules"]) -> None: ...
global___ListDiskSnapshotSchedulesResponse = ListDiskSnapshotSchedulesResponse
