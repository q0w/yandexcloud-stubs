"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import google.protobuf.descriptor
import google.protobuf.field_mask_pb2
import google.protobuf.internal.containers
import google.protobuf.internal.enum_type_wrapper
import google.protobuf.message
import typing
import typing_extensions
import yandex.cloud.compute.v1.disk_pb2
import yandex.cloud.compute.v1.instance_pb2
import yandex.cloud.operation.operation_pb2

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

class _InstanceView:
    ValueType = typing.NewType('ValueType', builtins.int)
    V: typing_extensions.TypeAlias = ValueType
class _InstanceViewEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_InstanceView.ValueType], builtins.type):
    DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
    BASIC: _InstanceView.ValueType  # 0
    """Doesn't include the metadata of the instance in the server response."""

    FULL: _InstanceView.ValueType  # 1
    """Returns the metadata of the instance in the server response."""

class InstanceView(_InstanceView, metaclass=_InstanceViewEnumTypeWrapper):
    pass

BASIC: InstanceView.ValueType  # 0
"""Doesn't include the metadata of the instance in the server response."""

FULL: InstanceView.ValueType  # 1
"""Returns the metadata of the instance in the server response."""

global___InstanceView = InstanceView


class GetInstanceRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    INSTANCE_ID_FIELD_NUMBER: builtins.int
    VIEW_FIELD_NUMBER: builtins.int
    instance_id: typing.Text
    """ID of the Instance resource to return.
    To get the instance ID, use a [InstanceService.List] request.
    """

    view: global___InstanceView.ValueType
    """Defines which information about the Instance resource should be returned in the server response."""

    def __init__(self,
        *,
        instance_id: typing.Text = ...,
        view: global___InstanceView.ValueType = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["instance_id",b"instance_id","view",b"view"]) -> None: ...
global___GetInstanceRequest = GetInstanceRequest

class ListInstancesRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    FOLDER_ID_FIELD_NUMBER: builtins.int
    PAGE_SIZE_FIELD_NUMBER: builtins.int
    PAGE_TOKEN_FIELD_NUMBER: builtins.int
    FILTER_FIELD_NUMBER: builtins.int
    folder_id: typing.Text
    """ID of the Folder to list instances in.
    To get the folder ID, use a [yandex.cloud.resourcemanager.v1.FolderService.List] request.
    """

    page_size: builtins.int
    """The maximum number of results per page to return. If the number of available
    results is larger than [page_size],
    the service returns a [ListInstancesResponse.next_page_token]
    that can be used to get the next page of results in subsequent list requests.
    """

    page_token: typing.Text
    """Page token. To get the next page of results,
    set [page_token] to the [ListInstancesResponse.next_page_token]
    returned by a previous list request.
    """

    filter: typing.Text
    """A filter expression that filters resources listed in the response.
    The expression must specify:
    1. The field name. Currently you can use filtering only on the [Instance.name] field.
    2. An `=` operator.
    3. The value in double quotes (`"`). Must be 3-63 characters long and match the regular expression `[a-z]([-a-z0-9]{,61}[a-z0-9])?`.
    """

    def __init__(self,
        *,
        folder_id: typing.Text = ...,
        page_size: builtins.int = ...,
        page_token: typing.Text = ...,
        filter: typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["filter",b"filter","folder_id",b"folder_id","page_size",b"page_size","page_token",b"page_token"]) -> None: ...
global___ListInstancesRequest = ListInstancesRequest

class ListInstancesResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    INSTANCES_FIELD_NUMBER: builtins.int
    NEXT_PAGE_TOKEN_FIELD_NUMBER: builtins.int
    @property
    def instances(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[yandex.cloud.compute.v1.instance_pb2.Instance]:
        """List of Instance resources."""
        pass
    next_page_token: typing.Text
    """This token allows you to get the next page of results for list requests. If the number of results
    is larger than [ListInstancesRequest.page_size], use
    the [next_page_token] as the value
    for the [ListInstancesRequest.page_token] query parameter
    in the next list request. Each subsequent list request will have its own
    [next_page_token] to continue paging through the results.
    """

    def __init__(self,
        *,
        instances: typing.Optional[typing.Iterable[yandex.cloud.compute.v1.instance_pb2.Instance]] = ...,
        next_page_token: typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["instances",b"instances","next_page_token",b"next_page_token"]) -> None: ...
global___ListInstancesResponse = ListInstancesResponse

class CreateInstanceRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    class LabelsEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor
        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: typing.Text
        value: typing.Text
        def __init__(self,
            *,
            key: typing.Text = ...,
            value: typing.Text = ...,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["key",b"key","value",b"value"]) -> None: ...

    class MetadataEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor
        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: typing.Text
        value: typing.Text
        def __init__(self,
            *,
            key: typing.Text = ...,
            value: typing.Text = ...,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["key",b"key","value",b"value"]) -> None: ...

    FOLDER_ID_FIELD_NUMBER: builtins.int
    NAME_FIELD_NUMBER: builtins.int
    DESCRIPTION_FIELD_NUMBER: builtins.int
    LABELS_FIELD_NUMBER: builtins.int
    ZONE_ID_FIELD_NUMBER: builtins.int
    PLATFORM_ID_FIELD_NUMBER: builtins.int
    RESOURCES_SPEC_FIELD_NUMBER: builtins.int
    METADATA_FIELD_NUMBER: builtins.int
    METADATA_OPTIONS_FIELD_NUMBER: builtins.int
    BOOT_DISK_SPEC_FIELD_NUMBER: builtins.int
    SECONDARY_DISK_SPECS_FIELD_NUMBER: builtins.int
    LOCAL_DISK_SPECS_FIELD_NUMBER: builtins.int
    FILESYSTEM_SPECS_FIELD_NUMBER: builtins.int
    NETWORK_INTERFACE_SPECS_FIELD_NUMBER: builtins.int
    HOSTNAME_FIELD_NUMBER: builtins.int
    SCHEDULING_POLICY_FIELD_NUMBER: builtins.int
    SERVICE_ACCOUNT_ID_FIELD_NUMBER: builtins.int
    NETWORK_SETTINGS_FIELD_NUMBER: builtins.int
    PLACEMENT_POLICY_FIELD_NUMBER: builtins.int
    folder_id: typing.Text
    """ID of the folder to create an instance in.
    To get the folder ID, use a [yandex.cloud.resourcemanager.v1.FolderService.List] request.
    """

    name: typing.Text
    """Name of the instance."""

    description: typing.Text
    """Description of the instance."""

    @property
    def labels(self) -> google.protobuf.internal.containers.ScalarMap[typing.Text, typing.Text]:
        """Resource labels as `key:value` pairs."""
        pass
    zone_id: typing.Text
    """ID of the availability zone where the instance resides.
    To get a list of available zones, use the [yandex.cloud.compute.v1.ZoneService.List] request
    """

    platform_id: typing.Text
    """ID of the hardware platform configuration for the instance.
    This field affects the available values in [resources_spec] field.

    Platforms allows you to create various types of instances: with a large amount of memory,
    with a large number of cores, with a burstable performance.
    For more information, see [Platforms](/docs/compute/concepts/vm-platforms).
    """

    @property
    def resources_spec(self) -> global___ResourcesSpec:
        """Computing resources of the instance, such as the amount of memory and number of cores.
        To get a list of available values, see [Levels of core performance](/docs/compute/concepts/performance-levels).
        """
        pass
    @property
    def metadata(self) -> google.protobuf.internal.containers.ScalarMap[typing.Text, typing.Text]:
        """The metadata `key:value` pairs that will be assigned to this instance. This includes custom metadata and predefined keys.
        The total size of all keys and values must be less than 512 KB.

        Values are free-form strings, and only have meaning as interpreted by the programs which configure the instance.
        The values must be 256 KB or less.

        For example, you may use the metadata in order to provide your public SSH key to the instance.
        For more information, see [Metadata](/docs/compute/concepts/vm-metadata).
        """
        pass
    @property
    def metadata_options(self) -> yandex.cloud.compute.v1.instance_pb2.MetadataOptions:
        """Options allow user to configure access to instance's metadata"""
        pass
    @property
    def boot_disk_spec(self) -> global___AttachedDiskSpec:
        """Boot disk to attach to the instance."""
        pass
    @property
    def secondary_disk_specs(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___AttachedDiskSpec]:
        """Array of secondary disks to attach to the instance."""
        pass
    @property
    def local_disk_specs(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___AttachedLocalDiskSpec]:
        """Array of local disks to attach to the instance."""
        pass
    @property
    def filesystem_specs(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___AttachedFilesystemSpec]:
        """Array of filesystems to attach to the instance.

        The filesystems must reside in the same availability zone as the instance.

        To use the instance with an attached filesystem, the latter must be mounted.
        For details, see [documentation](/docs/compute/operations/filesystem/attach-to-vm).
        """
        pass
    @property
    def network_interface_specs(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___NetworkInterfaceSpec]:
        """Network configuration for the instance. Specifies how the network interface is configured
        to interact with other services on the internal network and on the internet.
        Currently only one network interface is supported per instance.
        """
        pass
    hostname: typing.Text
    """Host name for the instance.
    This field is used to generate the [yandex.cloud.compute.v1.Instance.fqdn] value.
    The host name must be unique within the network and region.
    If not specified, the host name will be equal to [yandex.cloud.compute.v1.Instance.id] of the instance
    and FQDN will be `<id>.auto.internal`. Otherwise FQDN will be `<hostname>.<region_id>.internal`.
    """

    @property
    def scheduling_policy(self) -> yandex.cloud.compute.v1.instance_pb2.SchedulingPolicy:
        """Scheduling policy configuration."""
        pass
    service_account_id: typing.Text
    """ID of the service account to use for [authentication inside the instance](/docs/compute/operations/vm-connect/auth-inside-vm).
    To get the service account ID, use a [yandex.cloud.iam.v1.ServiceAccountService.List] request.
    """

    @property
    def network_settings(self) -> yandex.cloud.compute.v1.instance_pb2.NetworkSettings:
        """Network settings."""
        pass
    @property
    def placement_policy(self) -> yandex.cloud.compute.v1.instance_pb2.PlacementPolicy:
        """Placement policy configuration."""
        pass
    def __init__(self,
        *,
        folder_id: typing.Text = ...,
        name: typing.Text = ...,
        description: typing.Text = ...,
        labels: typing.Optional[typing.Mapping[typing.Text, typing.Text]] = ...,
        zone_id: typing.Text = ...,
        platform_id: typing.Text = ...,
        resources_spec: typing.Optional[global___ResourcesSpec] = ...,
        metadata: typing.Optional[typing.Mapping[typing.Text, typing.Text]] = ...,
        metadata_options: typing.Optional[yandex.cloud.compute.v1.instance_pb2.MetadataOptions] = ...,
        boot_disk_spec: typing.Optional[global___AttachedDiskSpec] = ...,
        secondary_disk_specs: typing.Optional[typing.Iterable[global___AttachedDiskSpec]] = ...,
        local_disk_specs: typing.Optional[typing.Iterable[global___AttachedLocalDiskSpec]] = ...,
        filesystem_specs: typing.Optional[typing.Iterable[global___AttachedFilesystemSpec]] = ...,
        network_interface_specs: typing.Optional[typing.Iterable[global___NetworkInterfaceSpec]] = ...,
        hostname: typing.Text = ...,
        scheduling_policy: typing.Optional[yandex.cloud.compute.v1.instance_pb2.SchedulingPolicy] = ...,
        service_account_id: typing.Text = ...,
        network_settings: typing.Optional[yandex.cloud.compute.v1.instance_pb2.NetworkSettings] = ...,
        placement_policy: typing.Optional[yandex.cloud.compute.v1.instance_pb2.PlacementPolicy] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["boot_disk_spec",b"boot_disk_spec","metadata_options",b"metadata_options","network_settings",b"network_settings","placement_policy",b"placement_policy","resources_spec",b"resources_spec","scheduling_policy",b"scheduling_policy"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["boot_disk_spec",b"boot_disk_spec","description",b"description","filesystem_specs",b"filesystem_specs","folder_id",b"folder_id","hostname",b"hostname","labels",b"labels","local_disk_specs",b"local_disk_specs","metadata",b"metadata","metadata_options",b"metadata_options","name",b"name","network_interface_specs",b"network_interface_specs","network_settings",b"network_settings","placement_policy",b"placement_policy","platform_id",b"platform_id","resources_spec",b"resources_spec","scheduling_policy",b"scheduling_policy","secondary_disk_specs",b"secondary_disk_specs","service_account_id",b"service_account_id","zone_id",b"zone_id"]) -> None: ...
global___CreateInstanceRequest = CreateInstanceRequest

class CreateInstanceMetadata(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    INSTANCE_ID_FIELD_NUMBER: builtins.int
    instance_id: typing.Text
    """ID of the instance that is being created."""

    def __init__(self,
        *,
        instance_id: typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["instance_id",b"instance_id"]) -> None: ...
global___CreateInstanceMetadata = CreateInstanceMetadata

class UpdateInstanceRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    class LabelsEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor
        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: typing.Text
        value: typing.Text
        def __init__(self,
            *,
            key: typing.Text = ...,
            value: typing.Text = ...,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["key",b"key","value",b"value"]) -> None: ...

    class MetadataEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor
        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: typing.Text
        value: typing.Text
        def __init__(self,
            *,
            key: typing.Text = ...,
            value: typing.Text = ...,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["key",b"key","value",b"value"]) -> None: ...

    INSTANCE_ID_FIELD_NUMBER: builtins.int
    UPDATE_MASK_FIELD_NUMBER: builtins.int
    NAME_FIELD_NUMBER: builtins.int
    DESCRIPTION_FIELD_NUMBER: builtins.int
    LABELS_FIELD_NUMBER: builtins.int
    PLATFORM_ID_FIELD_NUMBER: builtins.int
    RESOURCES_SPEC_FIELD_NUMBER: builtins.int
    METADATA_FIELD_NUMBER: builtins.int
    METADATA_OPTIONS_FIELD_NUMBER: builtins.int
    SERVICE_ACCOUNT_ID_FIELD_NUMBER: builtins.int
    NETWORK_SETTINGS_FIELD_NUMBER: builtins.int
    PLACEMENT_POLICY_FIELD_NUMBER: builtins.int
    SCHEDULING_POLICY_FIELD_NUMBER: builtins.int
    instance_id: typing.Text
    """ID of the Instance resource to update.
    To get the instance ID, use a [InstanceService.List] request.
    """

    @property
    def update_mask(self) -> google.protobuf.field_mask_pb2.FieldMask:
        """Field mask that specifies which fields of the Instance resource are going to be updated."""
        pass
    name: typing.Text
    """Name of the instance."""

    description: typing.Text
    """Description of the instance."""

    @property
    def labels(self) -> google.protobuf.internal.containers.ScalarMap[typing.Text, typing.Text]:
        """Resource labels as `key:value` pairs.

        Existing set of `labels` is completely replaced by the provided set.
        """
        pass
    platform_id: typing.Text
    """ID of the hardware platform configuration for the instance.
    This field affects the available values in [resources_spec] field.

    Platforms allows you to create various types of instances: with a large amount of memory,
    with a large number of cores, with a burstable performance.
    For more information, see [Platforms](/docs/compute/concepts/vm-platforms).
    """

    @property
    def resources_spec(self) -> global___ResourcesSpec:
        """Computing resources of the instance, such as the amount of memory and number of cores.
        To get a list of available values, see [Levels of core performance](/docs/compute/concepts/performance-levels).
        """
        pass
    @property
    def metadata(self) -> google.protobuf.internal.containers.ScalarMap[typing.Text, typing.Text]:
        """The metadata `key:value` pairs that will be assigned to this instance. This includes custom metadata and predefined keys.
        The total size of all keys and values must be less than 512 KB.

        Existing set of `metadata` is completely replaced by the provided set.

        Values are free-form strings, and only have meaning as interpreted by the programs which configure the instance.
        The values must be 256 KB or less.

        For example, you may use the metadata in order to provide your public SSH key to the instance.
        For more information, see [Metadata](/docs/compute/concepts/vm-metadata).
        """
        pass
    @property
    def metadata_options(self) -> yandex.cloud.compute.v1.instance_pb2.MetadataOptions:
        """Options allow user to configure access to instance's metadata"""
        pass
    service_account_id: typing.Text
    """ID of the service account to use for [authentication inside the instance](/docs/compute/operations/vm-connect/auth-inside-vm).
    To get the service account ID, use a [yandex.cloud.iam.v1.ServiceAccountService.List] request.
    """

    @property
    def network_settings(self) -> yandex.cloud.compute.v1.instance_pb2.NetworkSettings:
        """Network settings."""
        pass
    @property
    def placement_policy(self) -> yandex.cloud.compute.v1.instance_pb2.PlacementPolicy:
        """Placement policy configuration."""
        pass
    @property
    def scheduling_policy(self) -> yandex.cloud.compute.v1.instance_pb2.SchedulingPolicy:
        """Scheduling policy configuration."""
        pass
    def __init__(self,
        *,
        instance_id: typing.Text = ...,
        update_mask: typing.Optional[google.protobuf.field_mask_pb2.FieldMask] = ...,
        name: typing.Text = ...,
        description: typing.Text = ...,
        labels: typing.Optional[typing.Mapping[typing.Text, typing.Text]] = ...,
        platform_id: typing.Text = ...,
        resources_spec: typing.Optional[global___ResourcesSpec] = ...,
        metadata: typing.Optional[typing.Mapping[typing.Text, typing.Text]] = ...,
        metadata_options: typing.Optional[yandex.cloud.compute.v1.instance_pb2.MetadataOptions] = ...,
        service_account_id: typing.Text = ...,
        network_settings: typing.Optional[yandex.cloud.compute.v1.instance_pb2.NetworkSettings] = ...,
        placement_policy: typing.Optional[yandex.cloud.compute.v1.instance_pb2.PlacementPolicy] = ...,
        scheduling_policy: typing.Optional[yandex.cloud.compute.v1.instance_pb2.SchedulingPolicy] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["metadata_options",b"metadata_options","network_settings",b"network_settings","placement_policy",b"placement_policy","resources_spec",b"resources_spec","scheduling_policy",b"scheduling_policy","update_mask",b"update_mask"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["description",b"description","instance_id",b"instance_id","labels",b"labels","metadata",b"metadata","metadata_options",b"metadata_options","name",b"name","network_settings",b"network_settings","placement_policy",b"placement_policy","platform_id",b"platform_id","resources_spec",b"resources_spec","scheduling_policy",b"scheduling_policy","service_account_id",b"service_account_id","update_mask",b"update_mask"]) -> None: ...
global___UpdateInstanceRequest = UpdateInstanceRequest

class UpdateInstanceMetadata(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    INSTANCE_ID_FIELD_NUMBER: builtins.int
    instance_id: typing.Text
    """ID of the Instance resource that is being updated."""

    def __init__(self,
        *,
        instance_id: typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["instance_id",b"instance_id"]) -> None: ...
global___UpdateInstanceMetadata = UpdateInstanceMetadata

class DeleteInstanceRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    INSTANCE_ID_FIELD_NUMBER: builtins.int
    instance_id: typing.Text
    """ID of the instance to delete.
    To get the instance ID, use a [InstanceService.List] request.
    """

    def __init__(self,
        *,
        instance_id: typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["instance_id",b"instance_id"]) -> None: ...
global___DeleteInstanceRequest = DeleteInstanceRequest

class DeleteInstanceMetadata(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    INSTANCE_ID_FIELD_NUMBER: builtins.int
    instance_id: typing.Text
    """ID of the instance that is being deleted."""

    def __init__(self,
        *,
        instance_id: typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["instance_id",b"instance_id"]) -> None: ...
global___DeleteInstanceMetadata = DeleteInstanceMetadata

class UpdateInstanceMetadataRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    class UpsertEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor
        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: typing.Text
        value: typing.Text
        def __init__(self,
            *,
            key: typing.Text = ...,
            value: typing.Text = ...,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["key",b"key","value",b"value"]) -> None: ...

    INSTANCE_ID_FIELD_NUMBER: builtins.int
    DELETE_FIELD_NUMBER: builtins.int
    UPSERT_FIELD_NUMBER: builtins.int
    instance_id: typing.Text
    """ID of the instance that is being updated."""

    @property
    def delete(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """List of keys to be deleted."""
        pass
    @property
    def upsert(self) -> google.protobuf.internal.containers.ScalarMap[typing.Text, typing.Text]:
        """The metadata `key:value` pairs that will be added or updated to this instance."""
        pass
    def __init__(self,
        *,
        instance_id: typing.Text = ...,
        delete: typing.Optional[typing.Iterable[typing.Text]] = ...,
        upsert: typing.Optional[typing.Mapping[typing.Text, typing.Text]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["delete",b"delete","instance_id",b"instance_id","upsert",b"upsert"]) -> None: ...
global___UpdateInstanceMetadataRequest = UpdateInstanceMetadataRequest

class UpdateInstanceMetadataMetadata(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    INSTANCE_ID_FIELD_NUMBER: builtins.int
    instance_id: typing.Text
    """ID of the instance that is being updated."""

    def __init__(self,
        *,
        instance_id: typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["instance_id",b"instance_id"]) -> None: ...
global___UpdateInstanceMetadataMetadata = UpdateInstanceMetadataMetadata

class GetInstanceSerialPortOutputRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    INSTANCE_ID_FIELD_NUMBER: builtins.int
    PORT_FIELD_NUMBER: builtins.int
    instance_id: typing.Text
    """ID of the instance to return the serial port output for."""

    port: builtins.int
    """Serial port to retrieve data from. The default is 1."""

    def __init__(self,
        *,
        instance_id: typing.Text = ...,
        port: builtins.int = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["instance_id",b"instance_id","port",b"port"]) -> None: ...
global___GetInstanceSerialPortOutputRequest = GetInstanceSerialPortOutputRequest

class GetInstanceSerialPortOutputResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    CONTENTS_FIELD_NUMBER: builtins.int
    contents: typing.Text
    """The contents of the serial port output, starting from the time when the instance
    started to boot.
    """

    def __init__(self,
        *,
        contents: typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["contents",b"contents"]) -> None: ...
global___GetInstanceSerialPortOutputResponse = GetInstanceSerialPortOutputResponse

class StopInstanceRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    INSTANCE_ID_FIELD_NUMBER: builtins.int
    instance_id: typing.Text
    """ID of the instance to stop.
    To get the instance ID, use a [InstanceService.List] request.
    """

    def __init__(self,
        *,
        instance_id: typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["instance_id",b"instance_id"]) -> None: ...
global___StopInstanceRequest = StopInstanceRequest

class StopInstanceMetadata(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    INSTANCE_ID_FIELD_NUMBER: builtins.int
    instance_id: typing.Text
    """ID of the instance that is being deleted."""

    def __init__(self,
        *,
        instance_id: typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["instance_id",b"instance_id"]) -> None: ...
global___StopInstanceMetadata = StopInstanceMetadata

class StartInstanceRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    INSTANCE_ID_FIELD_NUMBER: builtins.int
    instance_id: typing.Text
    """ID of the instance to start.
    To get the instance ID, use a [InstanceService.List] request.
    """

    def __init__(self,
        *,
        instance_id: typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["instance_id",b"instance_id"]) -> None: ...
global___StartInstanceRequest = StartInstanceRequest

class StartInstanceMetadata(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    INSTANCE_ID_FIELD_NUMBER: builtins.int
    instance_id: typing.Text
    """ID of the instance."""

    def __init__(self,
        *,
        instance_id: typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["instance_id",b"instance_id"]) -> None: ...
global___StartInstanceMetadata = StartInstanceMetadata

class RestartInstanceRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    INSTANCE_ID_FIELD_NUMBER: builtins.int
    instance_id: typing.Text
    """ID of the instance to restart.
    To get the instance ID, use a [InstanceService.List] request.
    """

    def __init__(self,
        *,
        instance_id: typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["instance_id",b"instance_id"]) -> None: ...
global___RestartInstanceRequest = RestartInstanceRequest

class RestartInstanceMetadata(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    INSTANCE_ID_FIELD_NUMBER: builtins.int
    instance_id: typing.Text
    """ID of the instance."""

    def __init__(self,
        *,
        instance_id: typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["instance_id",b"instance_id"]) -> None: ...
global___RestartInstanceMetadata = RestartInstanceMetadata

class AttachInstanceDiskRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    INSTANCE_ID_FIELD_NUMBER: builtins.int
    ATTACHED_DISK_SPEC_FIELD_NUMBER: builtins.int
    instance_id: typing.Text
    """ID of the instance to attach the disk to.
    To get the instance ID, use a [InstanceService.List] request.
    """

    @property
    def attached_disk_spec(self) -> global___AttachedDiskSpec:
        """Disk that should be attached."""
        pass
    def __init__(self,
        *,
        instance_id: typing.Text = ...,
        attached_disk_spec: typing.Optional[global___AttachedDiskSpec] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["attached_disk_spec",b"attached_disk_spec"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["attached_disk_spec",b"attached_disk_spec","instance_id",b"instance_id"]) -> None: ...
global___AttachInstanceDiskRequest = AttachInstanceDiskRequest

class AttachInstanceDiskMetadata(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    INSTANCE_ID_FIELD_NUMBER: builtins.int
    DISK_ID_FIELD_NUMBER: builtins.int
    instance_id: typing.Text
    """ID of the instance."""

    disk_id: typing.Text
    """ID of the disk."""

    def __init__(self,
        *,
        instance_id: typing.Text = ...,
        disk_id: typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["disk_id",b"disk_id","instance_id",b"instance_id"]) -> None: ...
global___AttachInstanceDiskMetadata = AttachInstanceDiskMetadata

class DetachInstanceDiskRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    INSTANCE_ID_FIELD_NUMBER: builtins.int
    DISK_ID_FIELD_NUMBER: builtins.int
    DEVICE_NAME_FIELD_NUMBER: builtins.int
    instance_id: typing.Text
    """ID of the instance to detach the disk from.
    To get the instance ID, use a [InstanceService.List] request.
    """

    disk_id: typing.Text
    """ID of the disk that should be detached."""

    device_name: typing.Text
    """Serial number of the disk that should be detached. This value is reflected into the /dev/disk/by-id/ tree
    of a Linux operating system running within the instance.
    """

    def __init__(self,
        *,
        instance_id: typing.Text = ...,
        disk_id: typing.Text = ...,
        device_name: typing.Text = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["device_name",b"device_name","disk",b"disk","disk_id",b"disk_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["device_name",b"device_name","disk",b"disk","disk_id",b"disk_id","instance_id",b"instance_id"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["disk",b"disk"]) -> typing.Optional[typing_extensions.Literal["disk_id","device_name"]]: ...
global___DetachInstanceDiskRequest = DetachInstanceDiskRequest

class DetachInstanceDiskMetadata(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    INSTANCE_ID_FIELD_NUMBER: builtins.int
    DISK_ID_FIELD_NUMBER: builtins.int
    instance_id: typing.Text
    """ID of the instance."""

    disk_id: typing.Text
    """ID of the disk."""

    def __init__(self,
        *,
        instance_id: typing.Text = ...,
        disk_id: typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["disk_id",b"disk_id","instance_id",b"instance_id"]) -> None: ...
global___DetachInstanceDiskMetadata = DetachInstanceDiskMetadata

class AttachInstanceFilesystemRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    INSTANCE_ID_FIELD_NUMBER: builtins.int
    ATTACHED_FILESYSTEM_SPEC_FIELD_NUMBER: builtins.int
    instance_id: typing.Text
    """ID of the instance to attach the filesystem to.

    To get the instance ID, make a [InstanceService.List] request.
    """

    @property
    def attached_filesystem_spec(self) -> global___AttachedFilesystemSpec:
        """Filesystem to attach to the instance."""
        pass
    def __init__(self,
        *,
        instance_id: typing.Text = ...,
        attached_filesystem_spec: typing.Optional[global___AttachedFilesystemSpec] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["attached_filesystem_spec",b"attached_filesystem_spec"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["attached_filesystem_spec",b"attached_filesystem_spec","instance_id",b"instance_id"]) -> None: ...
global___AttachInstanceFilesystemRequest = AttachInstanceFilesystemRequest

class AttachInstanceFilesystemMetadata(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    INSTANCE_ID_FIELD_NUMBER: builtins.int
    FILESYSTEM_ID_FIELD_NUMBER: builtins.int
    instance_id: typing.Text
    """ID of the instance that the filesystem is being attached to."""

    filesystem_id: typing.Text
    """ID of the filesystem that is being attached to the instance."""

    def __init__(self,
        *,
        instance_id: typing.Text = ...,
        filesystem_id: typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["filesystem_id",b"filesystem_id","instance_id",b"instance_id"]) -> None: ...
global___AttachInstanceFilesystemMetadata = AttachInstanceFilesystemMetadata

class DetachInstanceFilesystemRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    INSTANCE_ID_FIELD_NUMBER: builtins.int
    FILESYSTEM_ID_FIELD_NUMBER: builtins.int
    DEVICE_NAME_FIELD_NUMBER: builtins.int
    instance_id: typing.Text
    """ID of the instance to detach the filesystem from.

    To get the instance ID, make a [InstanceService.List] request.
    """

    filesystem_id: typing.Text
    """ID of the filesystem that should be detached."""

    device_name: typing.Text
    """Name of the device used for mounting the filesystem that should be detached."""

    def __init__(self,
        *,
        instance_id: typing.Text = ...,
        filesystem_id: typing.Text = ...,
        device_name: typing.Text = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["device_name",b"device_name","filesystem",b"filesystem","filesystem_id",b"filesystem_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["device_name",b"device_name","filesystem",b"filesystem","filesystem_id",b"filesystem_id","instance_id",b"instance_id"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["filesystem",b"filesystem"]) -> typing.Optional[typing_extensions.Literal["filesystem_id","device_name"]]: ...
global___DetachInstanceFilesystemRequest = DetachInstanceFilesystemRequest

class DetachInstanceFilesystemMetadata(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    INSTANCE_ID_FIELD_NUMBER: builtins.int
    FILESYSTEM_ID_FIELD_NUMBER: builtins.int
    instance_id: typing.Text
    """ID of the instance that the filesystem is being detached from."""

    filesystem_id: typing.Text
    """ID of the filesystem that is being detached from the instance."""

    def __init__(self,
        *,
        instance_id: typing.Text = ...,
        filesystem_id: typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["filesystem_id",b"filesystem_id","instance_id",b"instance_id"]) -> None: ...
global___DetachInstanceFilesystemMetadata = DetachInstanceFilesystemMetadata

class AddInstanceOneToOneNatRequest(google.protobuf.message.Message):
    """Enables One-to-one NAT on the network interface."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    INSTANCE_ID_FIELD_NUMBER: builtins.int
    NETWORK_INTERFACE_INDEX_FIELD_NUMBER: builtins.int
    INTERNAL_ADDRESS_FIELD_NUMBER: builtins.int
    ONE_TO_ONE_NAT_SPEC_FIELD_NUMBER: builtins.int
    instance_id: typing.Text
    """ID of the instance to enable One-to-One NAT on."""

    network_interface_index: typing.Text
    """The index of the network interface to enable One-to-One NAT on."""

    internal_address: typing.Text
    """The network address that is assigned to the instance for this network interface.
    optional
    """

    @property
    def one_to_one_nat_spec(self) -> global___OneToOneNatSpec:
        """An external IP address configuration.
        If not specified, then this instance will have no external internet access.
        """
        pass
    def __init__(self,
        *,
        instance_id: typing.Text = ...,
        network_interface_index: typing.Text = ...,
        internal_address: typing.Text = ...,
        one_to_one_nat_spec: typing.Optional[global___OneToOneNatSpec] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["one_to_one_nat_spec",b"one_to_one_nat_spec"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["instance_id",b"instance_id","internal_address",b"internal_address","network_interface_index",b"network_interface_index","one_to_one_nat_spec",b"one_to_one_nat_spec"]) -> None: ...
global___AddInstanceOneToOneNatRequest = AddInstanceOneToOneNatRequest

class AddInstanceOneToOneNatMetadata(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    INSTANCE_ID_FIELD_NUMBER: builtins.int
    instance_id: typing.Text
    """ID of the instance."""

    def __init__(self,
        *,
        instance_id: typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["instance_id",b"instance_id"]) -> None: ...
global___AddInstanceOneToOneNatMetadata = AddInstanceOneToOneNatMetadata

class RemoveInstanceOneToOneNatRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    INSTANCE_ID_FIELD_NUMBER: builtins.int
    NETWORK_INTERFACE_INDEX_FIELD_NUMBER: builtins.int
    INTERNAL_ADDRESS_FIELD_NUMBER: builtins.int
    instance_id: typing.Text
    """ID of the instance to remove One-to-one NAT."""

    network_interface_index: typing.Text
    """The index of the network interface to remove One-to-One NAT from."""

    internal_address: typing.Text
    """The network address that is assigned to the instance for this network interface.
    optional
    """

    def __init__(self,
        *,
        instance_id: typing.Text = ...,
        network_interface_index: typing.Text = ...,
        internal_address: typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["instance_id",b"instance_id","internal_address",b"internal_address","network_interface_index",b"network_interface_index"]) -> None: ...
global___RemoveInstanceOneToOneNatRequest = RemoveInstanceOneToOneNatRequest

class RemoveInstanceOneToOneNatMetadata(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    INSTANCE_ID_FIELD_NUMBER: builtins.int
    instance_id: typing.Text
    """ID of the instance."""

    def __init__(self,
        *,
        instance_id: typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["instance_id",b"instance_id"]) -> None: ...
global___RemoveInstanceOneToOneNatMetadata = RemoveInstanceOneToOneNatMetadata

class UpdateInstanceNetworkInterfaceRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    INSTANCE_ID_FIELD_NUMBER: builtins.int
    NETWORK_INTERFACE_INDEX_FIELD_NUMBER: builtins.int
    UPDATE_MASK_FIELD_NUMBER: builtins.int
    SUBNET_ID_FIELD_NUMBER: builtins.int
    PRIMARY_V4_ADDRESS_SPEC_FIELD_NUMBER: builtins.int
    PRIMARY_V6_ADDRESS_SPEC_FIELD_NUMBER: builtins.int
    SECURITY_GROUP_IDS_FIELD_NUMBER: builtins.int
    instance_id: typing.Text
    """ID of the network interface that is being updated."""

    network_interface_index: typing.Text
    """The index of the network interface to be updated."""

    @property
    def update_mask(self) -> google.protobuf.field_mask_pb2.FieldMask:
        """Field mask that specifies which attributes of the instance should be updated."""
        pass
    subnet_id: typing.Text
    """ID of the subnet."""

    @property
    def primary_v4_address_spec(self) -> global___PrimaryAddressSpec:
        """Primary IPv4 address that will be assigned to the instance for this network interface."""
        pass
    @property
    def primary_v6_address_spec(self) -> global___PrimaryAddressSpec:
        """Primary IPv6 address that will be assigned to the instance for this network interface. IPv6 not available yet."""
        pass
    @property
    def security_group_ids(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """ID's of security groups attached to the interface."""
        pass
    def __init__(self,
        *,
        instance_id: typing.Text = ...,
        network_interface_index: typing.Text = ...,
        update_mask: typing.Optional[google.protobuf.field_mask_pb2.FieldMask] = ...,
        subnet_id: typing.Text = ...,
        primary_v4_address_spec: typing.Optional[global___PrimaryAddressSpec] = ...,
        primary_v6_address_spec: typing.Optional[global___PrimaryAddressSpec] = ...,
        security_group_ids: typing.Optional[typing.Iterable[typing.Text]] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["primary_v4_address_spec",b"primary_v4_address_spec","primary_v6_address_spec",b"primary_v6_address_spec","update_mask",b"update_mask"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["instance_id",b"instance_id","network_interface_index",b"network_interface_index","primary_v4_address_spec",b"primary_v4_address_spec","primary_v6_address_spec",b"primary_v6_address_spec","security_group_ids",b"security_group_ids","subnet_id",b"subnet_id","update_mask",b"update_mask"]) -> None: ...
global___UpdateInstanceNetworkInterfaceRequest = UpdateInstanceNetworkInterfaceRequest

class UpdateInstanceNetworkInterfaceMetadata(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    INSTANCE_ID_FIELD_NUMBER: builtins.int
    NETWORK_INTERFACE_INDEX_FIELD_NUMBER: builtins.int
    instance_id: typing.Text
    """ID of the instant network interface that is being updated."""

    network_interface_index: typing.Text
    """The index of the network interface."""

    def __init__(self,
        *,
        instance_id: typing.Text = ...,
        network_interface_index: typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["instance_id",b"instance_id","network_interface_index",b"network_interface_index"]) -> None: ...
global___UpdateInstanceNetworkInterfaceMetadata = UpdateInstanceNetworkInterfaceMetadata

class ListInstanceOperationsRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    INSTANCE_ID_FIELD_NUMBER: builtins.int
    PAGE_SIZE_FIELD_NUMBER: builtins.int
    PAGE_TOKEN_FIELD_NUMBER: builtins.int
    instance_id: typing.Text
    """ID of the Instance resource to list operations for."""

    page_size: builtins.int
    """The maximum number of results per page to return. If the number of available
    results is larger than [page_size], the service returns a [ListInstanceOperationsResponse.next_page_token]
    that can be used to get the next page of results in subsequent list requests.
    """

    page_token: typing.Text
    """Page token. To get the next page of results, set [page_token] to the
    [ListInstanceOperationsResponse.next_page_token] returned by a previous list request.
    """

    def __init__(self,
        *,
        instance_id: typing.Text = ...,
        page_size: builtins.int = ...,
        page_token: typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["instance_id",b"instance_id","page_size",b"page_size","page_token",b"page_token"]) -> None: ...
global___ListInstanceOperationsRequest = ListInstanceOperationsRequest

class ListInstanceOperationsResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    OPERATIONS_FIELD_NUMBER: builtins.int
    NEXT_PAGE_TOKEN_FIELD_NUMBER: builtins.int
    @property
    def operations(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[yandex.cloud.operation.operation_pb2.Operation]:
        """List of operations for the specified instance."""
        pass
    next_page_token: typing.Text
    """This token allows you to get the next page of results for list requests. If the number of results
    is larger than [ListInstanceOperationsRequest.page_size], use the [next_page_token] as the value
    for the [ListInstanceOperationsRequest.page_token] query parameter in the next list request.
    Each subsequent list request will have its own [next_page_token] to continue paging through the results.
    """

    def __init__(self,
        *,
        operations: typing.Optional[typing.Iterable[yandex.cloud.operation.operation_pb2.Operation]] = ...,
        next_page_token: typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["next_page_token",b"next_page_token","operations",b"operations"]) -> None: ...
global___ListInstanceOperationsResponse = ListInstanceOperationsResponse

class ResourcesSpec(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    MEMORY_FIELD_NUMBER: builtins.int
    CORES_FIELD_NUMBER: builtins.int
    CORE_FRACTION_FIELD_NUMBER: builtins.int
    GPUS_FIELD_NUMBER: builtins.int
    memory: builtins.int
    """The amount of memory available to the instance, specified in bytes."""

    cores: builtins.int
    """The number of cores available to the instance."""

    core_fraction: builtins.int
    """Baseline level of CPU performance with the ability to burst performance above that baseline level.
    This field sets baseline performance for each core.

    For example, if you need only 5% of the CPU performance, you can set core_fraction=5.
    For more information, see [Levels of core performance](/docs/compute/concepts/performance-levels).
    """

    gpus: builtins.int
    """The number of GPUs available to the instance."""

    def __init__(self,
        *,
        memory: builtins.int = ...,
        cores: builtins.int = ...,
        core_fraction: builtins.int = ...,
        gpus: builtins.int = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["core_fraction",b"core_fraction","cores",b"cores","gpus",b"gpus","memory",b"memory"]) -> None: ...
global___ResourcesSpec = ResourcesSpec

class AttachedDiskSpec(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    class _Mode:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _ModeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[AttachedDiskSpec._Mode.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
        MODE_UNSPECIFIED: AttachedDiskSpec._Mode.ValueType  # 0
        READ_ONLY: AttachedDiskSpec._Mode.ValueType  # 1
        """Read-only access."""

        READ_WRITE: AttachedDiskSpec._Mode.ValueType  # 2
        """Read/Write access. Default value."""

    class Mode(_Mode, metaclass=_ModeEnumTypeWrapper):
        pass

    MODE_UNSPECIFIED: AttachedDiskSpec.Mode.ValueType  # 0
    READ_ONLY: AttachedDiskSpec.Mode.ValueType  # 1
    """Read-only access."""

    READ_WRITE: AttachedDiskSpec.Mode.ValueType  # 2
    """Read/Write access. Default value."""


    class DiskSpec(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor
        NAME_FIELD_NUMBER: builtins.int
        DESCRIPTION_FIELD_NUMBER: builtins.int
        TYPE_ID_FIELD_NUMBER: builtins.int
        SIZE_FIELD_NUMBER: builtins.int
        BLOCK_SIZE_FIELD_NUMBER: builtins.int
        DISK_PLACEMENT_POLICY_FIELD_NUMBER: builtins.int
        IMAGE_ID_FIELD_NUMBER: builtins.int
        SNAPSHOT_ID_FIELD_NUMBER: builtins.int
        name: typing.Text
        """Name of the disk."""

        description: typing.Text
        """Description of the disk."""

        type_id: typing.Text
        """ID of the disk type.
        To get a list of available disk types, use the [yandex.cloud.compute.v1.DiskTypeService.List] request.
        """

        size: builtins.int
        """Size of the disk, specified in bytes."""

        block_size: builtins.int
        """Block size of the disk, specified in bytes. The default is 4096."""

        @property
        def disk_placement_policy(self) -> yandex.cloud.compute.v1.disk_pb2.DiskPlacementPolicy:
            """Placement policy configuration."""
            pass
        image_id: typing.Text
        """ID of the image to create the disk from."""

        snapshot_id: typing.Text
        """ID of the snapshot to restore the disk from."""

        def __init__(self,
            *,
            name: typing.Text = ...,
            description: typing.Text = ...,
            type_id: typing.Text = ...,
            size: builtins.int = ...,
            block_size: builtins.int = ...,
            disk_placement_policy: typing.Optional[yandex.cloud.compute.v1.disk_pb2.DiskPlacementPolicy] = ...,
            image_id: typing.Text = ...,
            snapshot_id: typing.Text = ...,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions.Literal["disk_placement_policy",b"disk_placement_policy","image_id",b"image_id","snapshot_id",b"snapshot_id","source",b"source"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing_extensions.Literal["block_size",b"block_size","description",b"description","disk_placement_policy",b"disk_placement_policy","image_id",b"image_id","name",b"name","size",b"size","snapshot_id",b"snapshot_id","source",b"source","type_id",b"type_id"]) -> None: ...
        def WhichOneof(self, oneof_group: typing_extensions.Literal["source",b"source"]) -> typing.Optional[typing_extensions.Literal["image_id","snapshot_id"]]: ...

    MODE_FIELD_NUMBER: builtins.int
    DEVICE_NAME_FIELD_NUMBER: builtins.int
    AUTO_DELETE_FIELD_NUMBER: builtins.int
    DISK_SPEC_FIELD_NUMBER: builtins.int
    DISK_ID_FIELD_NUMBER: builtins.int
    mode: global___AttachedDiskSpec.Mode.ValueType
    """The mode in which to attach this disk."""

    device_name: typing.Text
    """Specifies a unique serial number of your choice that is reflected into the /dev/disk/by-id/ tree
    of a Linux operating system running within the instance.

    This value can be used to reference the device for mounting, resizing, and so on, from within the instance.
    If not specified, a random value will be generated.
    """

    auto_delete: builtins.bool
    """Specifies whether the disk will be auto-deleted when the instance is deleted."""

    @property
    def disk_spec(self) -> global___AttachedDiskSpec.DiskSpec:
        """Disk specification."""
        pass
    disk_id: typing.Text
    """ID of the disk that should be attached."""

    def __init__(self,
        *,
        mode: global___AttachedDiskSpec.Mode.ValueType = ...,
        device_name: typing.Text = ...,
        auto_delete: builtins.bool = ...,
        disk_spec: typing.Optional[global___AttachedDiskSpec.DiskSpec] = ...,
        disk_id: typing.Text = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["disk",b"disk","disk_id",b"disk_id","disk_spec",b"disk_spec"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["auto_delete",b"auto_delete","device_name",b"device_name","disk",b"disk","disk_id",b"disk_id","disk_spec",b"disk_spec","mode",b"mode"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["disk",b"disk"]) -> typing.Optional[typing_extensions.Literal["disk_spec","disk_id"]]: ...
global___AttachedDiskSpec = AttachedDiskSpec

class AttachedLocalDiskSpec(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    SIZE_FIELD_NUMBER: builtins.int
    size: builtins.int
    """Size of the disk, specified in bytes."""

    def __init__(self,
        *,
        size: builtins.int = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["size",b"size"]) -> None: ...
global___AttachedLocalDiskSpec = AttachedLocalDiskSpec

class AttachedFilesystemSpec(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    class _Mode:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _ModeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[AttachedFilesystemSpec._Mode.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
        MODE_UNSPECIFIED: AttachedFilesystemSpec._Mode.ValueType  # 0
        READ_ONLY: AttachedFilesystemSpec._Mode.ValueType  # 1
        """Read-only access."""

        READ_WRITE: AttachedFilesystemSpec._Mode.ValueType  # 2
        """Read/Write access. Default value."""

    class Mode(_Mode, metaclass=_ModeEnumTypeWrapper):
        pass

    MODE_UNSPECIFIED: AttachedFilesystemSpec.Mode.ValueType  # 0
    READ_ONLY: AttachedFilesystemSpec.Mode.ValueType  # 1
    """Read-only access."""

    READ_WRITE: AttachedFilesystemSpec.Mode.ValueType  # 2
    """Read/Write access. Default value."""


    MODE_FIELD_NUMBER: builtins.int
    DEVICE_NAME_FIELD_NUMBER: builtins.int
    FILESYSTEM_ID_FIELD_NUMBER: builtins.int
    mode: global___AttachedFilesystemSpec.Mode.ValueType
    """Mode of access to the filesystem that should be attached."""

    device_name: typing.Text
    """Name of the device representing the filesystem on the instance.

    The name should be used for referencing the filesystem from within the instance
    when it's being mounted, resized etc.

    If not specified, a random value will be generated.
    """

    filesystem_id: typing.Text
    """ID of the filesystem that should be attached."""

    def __init__(self,
        *,
        mode: global___AttachedFilesystemSpec.Mode.ValueType = ...,
        device_name: typing.Text = ...,
        filesystem_id: typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["device_name",b"device_name","filesystem_id",b"filesystem_id","mode",b"mode"]) -> None: ...
global___AttachedFilesystemSpec = AttachedFilesystemSpec

class NetworkInterfaceSpec(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    SUBNET_ID_FIELD_NUMBER: builtins.int
    PRIMARY_V4_ADDRESS_SPEC_FIELD_NUMBER: builtins.int
    PRIMARY_V6_ADDRESS_SPEC_FIELD_NUMBER: builtins.int
    SECURITY_GROUP_IDS_FIELD_NUMBER: builtins.int
    subnet_id: typing.Text
    """ID of the subnet."""

    @property
    def primary_v4_address_spec(self) -> global___PrimaryAddressSpec:
        """Primary IPv4 address that will be assigned to the instance for this network interface."""
        pass
    @property
    def primary_v6_address_spec(self) -> global___PrimaryAddressSpec:
        """Primary IPv6 address that will be assigned to the instance for this network interface. IPv6 not available yet."""
        pass
    @property
    def security_group_ids(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """ID's of security groups attached to the interface"""
        pass
    def __init__(self,
        *,
        subnet_id: typing.Text = ...,
        primary_v4_address_spec: typing.Optional[global___PrimaryAddressSpec] = ...,
        primary_v6_address_spec: typing.Optional[global___PrimaryAddressSpec] = ...,
        security_group_ids: typing.Optional[typing.Iterable[typing.Text]] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["primary_v4_address_spec",b"primary_v4_address_spec","primary_v6_address_spec",b"primary_v6_address_spec"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["primary_v4_address_spec",b"primary_v4_address_spec","primary_v6_address_spec",b"primary_v6_address_spec","security_group_ids",b"security_group_ids","subnet_id",b"subnet_id"]) -> None: ...
global___NetworkInterfaceSpec = NetworkInterfaceSpec

class PrimaryAddressSpec(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    ADDRESS_FIELD_NUMBER: builtins.int
    ONE_TO_ONE_NAT_SPEC_FIELD_NUMBER: builtins.int
    DNS_RECORD_SPECS_FIELD_NUMBER: builtins.int
    address: typing.Text
    """An IPv4 internal network address that is assigned to the instance for this network interface.
    If not specified by the user, an unused internal IP is assigned by the system.
    optional, manual set static internal IP
    """

    @property
    def one_to_one_nat_spec(self) -> global___OneToOneNatSpec:
        """An external IP address configuration.
        If not specified, then this instance will have no external internet access.
        """
        pass
    @property
    def dns_record_specs(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___DnsRecordSpec]:
        """Internal DNS configuration"""
        pass
    def __init__(self,
        *,
        address: typing.Text = ...,
        one_to_one_nat_spec: typing.Optional[global___OneToOneNatSpec] = ...,
        dns_record_specs: typing.Optional[typing.Iterable[global___DnsRecordSpec]] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["one_to_one_nat_spec",b"one_to_one_nat_spec"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["address",b"address","dns_record_specs",b"dns_record_specs","one_to_one_nat_spec",b"one_to_one_nat_spec"]) -> None: ...
global___PrimaryAddressSpec = PrimaryAddressSpec

class OneToOneNatSpec(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    IP_VERSION_FIELD_NUMBER: builtins.int
    ADDRESS_FIELD_NUMBER: builtins.int
    DNS_RECORD_SPECS_FIELD_NUMBER: builtins.int
    ip_version: yandex.cloud.compute.v1.instance_pb2.IpVersion.ValueType
    """External IP address version.
    only if address unspecified
    """

    address: typing.Text
    """set static IP by value"""

    @property
    def dns_record_specs(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___DnsRecordSpec]:
        """External DNS configuration"""
        pass
    def __init__(self,
        *,
        ip_version: yandex.cloud.compute.v1.instance_pb2.IpVersion.ValueType = ...,
        address: typing.Text = ...,
        dns_record_specs: typing.Optional[typing.Iterable[global___DnsRecordSpec]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["address",b"address","dns_record_specs",b"dns_record_specs","ip_version",b"ip_version"]) -> None: ...
global___OneToOneNatSpec = OneToOneNatSpec

class DnsRecordSpec(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    FQDN_FIELD_NUMBER: builtins.int
    DNS_ZONE_ID_FIELD_NUMBER: builtins.int
    TTL_FIELD_NUMBER: builtins.int
    PTR_FIELD_NUMBER: builtins.int
    fqdn: typing.Text
    """FQDN (required)"""

    dns_zone_id: typing.Text
    """DNS zone id (optional, if not set, private zone used)"""

    ttl: builtins.int
    """DNS record ttl, values in 0-86400 (optional)"""

    ptr: builtins.bool
    """When set to true, also create PTR DNS record (optional)"""

    def __init__(self,
        *,
        fqdn: typing.Text = ...,
        dns_zone_id: typing.Text = ...,
        ttl: builtins.int = ...,
        ptr: builtins.bool = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["dns_zone_id",b"dns_zone_id","fqdn",b"fqdn","ptr",b"ptr","ttl",b"ttl"]) -> None: ...
global___DnsRecordSpec = DnsRecordSpec

class MoveInstanceRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    INSTANCE_ID_FIELD_NUMBER: builtins.int
    DESTINATION_FOLDER_ID_FIELD_NUMBER: builtins.int
    instance_id: typing.Text
    """ID of the instance to move.

    To get the instance ID, make a [InstanceService.List] request.
    """

    destination_folder_id: typing.Text
    """ID of the folder to move the instance to.

    To get the folder ID, make a [yandex.cloud.resourcemanager.v1.FolderService.List] request.
    """

    def __init__(self,
        *,
        instance_id: typing.Text = ...,
        destination_folder_id: typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["destination_folder_id",b"destination_folder_id","instance_id",b"instance_id"]) -> None: ...
global___MoveInstanceRequest = MoveInstanceRequest

class MoveInstanceMetadata(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    INSTANCE_ID_FIELD_NUMBER: builtins.int
    SOURCE_FOLDER_ID_FIELD_NUMBER: builtins.int
    DESTINATION_FOLDER_ID_FIELD_NUMBER: builtins.int
    instance_id: typing.Text
    """ID of the instance that is being moved."""

    source_folder_id: typing.Text
    """ID of the folder that the instance is being moved from."""

    destination_folder_id: typing.Text
    """ID of the folder that the instance is being moved to."""

    def __init__(self,
        *,
        instance_id: typing.Text = ...,
        source_folder_id: typing.Text = ...,
        destination_folder_id: typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["destination_folder_id",b"destination_folder_id","instance_id",b"instance_id","source_folder_id",b"source_folder_id"]) -> None: ...
global___MoveInstanceMetadata = MoveInstanceMetadata

class GuestStopInstanceMetadata(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    INSTANCE_ID_FIELD_NUMBER: builtins.int
    instance_id: typing.Text
    """ID of the instance that was stopped from guest OS."""

    def __init__(self,
        *,
        instance_id: typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["instance_id",b"instance_id"]) -> None: ...
global___GuestStopInstanceMetadata = GuestStopInstanceMetadata

class PreemptInstanceMetadata(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    INSTANCE_ID_FIELD_NUMBER: builtins.int
    instance_id: typing.Text
    """ID of the instance that is being preempted."""

    def __init__(self,
        *,
        instance_id: typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["instance_id",b"instance_id"]) -> None: ...
global___PreemptInstanceMetadata = PreemptInstanceMetadata

class CrashInstanceMetadata(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    INSTANCE_ID_FIELD_NUMBER: builtins.int
    instance_id: typing.Text
    """ID of the instance that was crashed."""

    def __init__(self,
        *,
        instance_id: typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["instance_id",b"instance_id"]) -> None: ...
global___CrashInstanceMetadata = CrashInstanceMetadata
