"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import abc
import grpc
import yandex.cloud.compute.v1.disk_placement_group_pb2
import yandex.cloud.compute.v1.disk_placement_group_service_pb2
import yandex.cloud.operation.operation_pb2

class DiskPlacementGroupServiceStub:
    """A set of methods for managing DiskPlacementGroup resources."""
    def __init__(self, channel: grpc.Channel) -> None: ...
    Get: grpc.UnaryUnaryMultiCallable[
        yandex.cloud.compute.v1.disk_placement_group_service_pb2.GetDiskPlacementGroupRequest,
        yandex.cloud.compute.v1.disk_placement_group_pb2.DiskPlacementGroup]
    """Returns the specified placement group."""

    List: grpc.UnaryUnaryMultiCallable[
        yandex.cloud.compute.v1.disk_placement_group_service_pb2.ListDiskPlacementGroupsRequest,
        yandex.cloud.compute.v1.disk_placement_group_service_pb2.ListDiskPlacementGroupsResponse]
    """Retrieves the list of placement groups in the specified folder."""

    Create: grpc.UnaryUnaryMultiCallable[
        yandex.cloud.compute.v1.disk_placement_group_service_pb2.CreateDiskPlacementGroupRequest,
        yandex.cloud.operation.operation_pb2.Operation]
    """Creates a placement group in the specified folder."""

    Update: grpc.UnaryUnaryMultiCallable[
        yandex.cloud.compute.v1.disk_placement_group_service_pb2.UpdateDiskPlacementGroupRequest,
        yandex.cloud.operation.operation_pb2.Operation]
    """Updates the specified placement group."""

    Delete: grpc.UnaryUnaryMultiCallable[
        yandex.cloud.compute.v1.disk_placement_group_service_pb2.DeleteDiskPlacementGroupRequest,
        yandex.cloud.operation.operation_pb2.Operation]
    """Deletes the specified placement group."""

    ListDisks: grpc.UnaryUnaryMultiCallable[
        yandex.cloud.compute.v1.disk_placement_group_service_pb2.ListDiskPlacementGroupDisksRequest,
        yandex.cloud.compute.v1.disk_placement_group_service_pb2.ListDiskPlacementGroupDisksResponse]
    """Lists disks for the specified placement group."""

    ListOperations: grpc.UnaryUnaryMultiCallable[
        yandex.cloud.compute.v1.disk_placement_group_service_pb2.ListDiskPlacementGroupOperationsRequest,
        yandex.cloud.compute.v1.disk_placement_group_service_pb2.ListDiskPlacementGroupOperationsResponse]
    """Lists operations for the specified placement group."""


class DiskPlacementGroupServiceServicer(metaclass=abc.ABCMeta):
    """A set of methods for managing DiskPlacementGroup resources."""
    @abc.abstractmethod
    def Get(self,
        request: yandex.cloud.compute.v1.disk_placement_group_service_pb2.GetDiskPlacementGroupRequest,
        context: grpc.ServicerContext,
    ) -> yandex.cloud.compute.v1.disk_placement_group_pb2.DiskPlacementGroup:
        """Returns the specified placement group."""
        pass

    @abc.abstractmethod
    def List(self,
        request: yandex.cloud.compute.v1.disk_placement_group_service_pb2.ListDiskPlacementGroupsRequest,
        context: grpc.ServicerContext,
    ) -> yandex.cloud.compute.v1.disk_placement_group_service_pb2.ListDiskPlacementGroupsResponse:
        """Retrieves the list of placement groups in the specified folder."""
        pass

    @abc.abstractmethod
    def Create(self,
        request: yandex.cloud.compute.v1.disk_placement_group_service_pb2.CreateDiskPlacementGroupRequest,
        context: grpc.ServicerContext,
    ) -> yandex.cloud.operation.operation_pb2.Operation:
        """Creates a placement group in the specified folder."""
        pass

    @abc.abstractmethod
    def Update(self,
        request: yandex.cloud.compute.v1.disk_placement_group_service_pb2.UpdateDiskPlacementGroupRequest,
        context: grpc.ServicerContext,
    ) -> yandex.cloud.operation.operation_pb2.Operation:
        """Updates the specified placement group."""
        pass

    @abc.abstractmethod
    def Delete(self,
        request: yandex.cloud.compute.v1.disk_placement_group_service_pb2.DeleteDiskPlacementGroupRequest,
        context: grpc.ServicerContext,
    ) -> yandex.cloud.operation.operation_pb2.Operation:
        """Deletes the specified placement group."""
        pass

    @abc.abstractmethod
    def ListDisks(self,
        request: yandex.cloud.compute.v1.disk_placement_group_service_pb2.ListDiskPlacementGroupDisksRequest,
        context: grpc.ServicerContext,
    ) -> yandex.cloud.compute.v1.disk_placement_group_service_pb2.ListDiskPlacementGroupDisksResponse:
        """Lists disks for the specified placement group."""
        pass

    @abc.abstractmethod
    def ListOperations(self,
        request: yandex.cloud.compute.v1.disk_placement_group_service_pb2.ListDiskPlacementGroupOperationsRequest,
        context: grpc.ServicerContext,
    ) -> yandex.cloud.compute.v1.disk_placement_group_service_pb2.ListDiskPlacementGroupOperationsResponse:
        """Lists operations for the specified placement group."""
        pass


def add_DiskPlacementGroupServiceServicer_to_server(servicer: DiskPlacementGroupServiceServicer, server: grpc.Server) -> None: ...
