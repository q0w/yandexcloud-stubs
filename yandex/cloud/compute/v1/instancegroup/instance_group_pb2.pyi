"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import google.protobuf.descriptor
import google.protobuf.duration_pb2
import google.protobuf.internal.containers
import google.protobuf.internal.enum_type_wrapper
import google.protobuf.message
import google.protobuf.timestamp_pb2
import typing
import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

class _IpVersion:
    ValueType = typing.NewType('ValueType', builtins.int)
    V: typing_extensions.TypeAlias = ValueType
class _IpVersionEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_IpVersion.ValueType], builtins.type):
    DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
    IP_VERSION_UNSPECIFIED: _IpVersion.ValueType  # 0
    IPV4: _IpVersion.ValueType  # 1
    """IPv4 address, for example 192.168.0.0."""

    IPV6: _IpVersion.ValueType  # 2
    """IPv6 address, not available yet."""

class IpVersion(_IpVersion, metaclass=_IpVersionEnumTypeWrapper):
    pass

IP_VERSION_UNSPECIFIED: IpVersion.ValueType  # 0
IPV4: IpVersion.ValueType  # 1
"""IPv4 address, for example 192.168.0.0."""

IPV6: IpVersion.ValueType  # 2
"""IPv6 address, not available yet."""

global___IpVersion = IpVersion


class InstanceGroup(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    class _Status:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _StatusEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[InstanceGroup._Status.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
        STATUS_UNSPECIFIED: InstanceGroup._Status.ValueType  # 0
        STARTING: InstanceGroup._Status.ValueType  # 1
        """Instance group is being started and will become active soon."""

        ACTIVE: InstanceGroup._Status.ValueType  # 2
        """Instance group is active.
        In this state the group manages its instances and monitors their health,
        creating, deleting, stopping, updating and starting instances as needed.

        To stop the instance group, call [yandex.cloud.compute.v1.instancegroup.InstanceGroupService.Stop].
        To pause the processes in the instance group, i.e. scaling, checking instances' health,
        auto-healing and updating them, without stopping the instances,
        call [yandex.cloud.compute.v1.instancegroup.InstanceGroupService.PauseProcesses].
        """

        STOPPING: InstanceGroup._Status.ValueType  # 3
        """Instance group is being stopped.
        Group's instances stop receiving traffic from the load balancer (if any) and are then stopped.
        """

        STOPPED: InstanceGroup._Status.ValueType  # 4
        """Instance group is stopped.
        In this state the group cannot be updated and does not react to any changes made to its instances.
        To start the instance group, call [yandex.cloud.compute.v1.instancegroup.InstanceGroupService.Start].
        """

        DELETING: InstanceGroup._Status.ValueType  # 5
        """Instance group is being deleted."""

        PAUSED: InstanceGroup._Status.ValueType  # 6
        """Instance group is paused.
        In this state all the processes regarding the group management, i.e. scaling, checking instances' health,
        auto-healing and updating them, are paused. The instances that were running prior to pausing the group, however,
        may still be running.

        To resume the processes in the instance group,
        call [yandex.cloud.compute.v1.instancegroup.InstanceGroupService.ResumeProcesses].
        The group status will change to `ACTIVE`.
        """

    class Status(_Status, metaclass=_StatusEnumTypeWrapper):
        pass

    STATUS_UNSPECIFIED: InstanceGroup.Status.ValueType  # 0
    STARTING: InstanceGroup.Status.ValueType  # 1
    """Instance group is being started and will become active soon."""

    ACTIVE: InstanceGroup.Status.ValueType  # 2
    """Instance group is active.
    In this state the group manages its instances and monitors their health,
    creating, deleting, stopping, updating and starting instances as needed.

    To stop the instance group, call [yandex.cloud.compute.v1.instancegroup.InstanceGroupService.Stop].
    To pause the processes in the instance group, i.e. scaling, checking instances' health,
    auto-healing and updating them, without stopping the instances,
    call [yandex.cloud.compute.v1.instancegroup.InstanceGroupService.PauseProcesses].
    """

    STOPPING: InstanceGroup.Status.ValueType  # 3
    """Instance group is being stopped.
    Group's instances stop receiving traffic from the load balancer (if any) and are then stopped.
    """

    STOPPED: InstanceGroup.Status.ValueType  # 4
    """Instance group is stopped.
    In this state the group cannot be updated and does not react to any changes made to its instances.
    To start the instance group, call [yandex.cloud.compute.v1.instancegroup.InstanceGroupService.Start].
    """

    DELETING: InstanceGroup.Status.ValueType  # 5
    """Instance group is being deleted."""

    PAUSED: InstanceGroup.Status.ValueType  # 6
    """Instance group is paused.
    In this state all the processes regarding the group management, i.e. scaling, checking instances' health,
    auto-healing and updating them, are paused. The instances that were running prior to pausing the group, however,
    may still be running.

    To resume the processes in the instance group,
    call [yandex.cloud.compute.v1.instancegroup.InstanceGroupService.ResumeProcesses].
    The group status will change to `ACTIVE`.
    """


    class LabelsEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor
        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: typing.Text
        value: typing.Text
        def __init__(self,
            *,
            key: typing.Text = ...,
            value: typing.Text = ...,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["key",b"key","value",b"value"]) -> None: ...

    ID_FIELD_NUMBER: builtins.int
    FOLDER_ID_FIELD_NUMBER: builtins.int
    CREATED_AT_FIELD_NUMBER: builtins.int
    NAME_FIELD_NUMBER: builtins.int
    DESCRIPTION_FIELD_NUMBER: builtins.int
    LABELS_FIELD_NUMBER: builtins.int
    INSTANCE_TEMPLATE_FIELD_NUMBER: builtins.int
    SCALE_POLICY_FIELD_NUMBER: builtins.int
    DEPLOY_POLICY_FIELD_NUMBER: builtins.int
    ALLOCATION_POLICY_FIELD_NUMBER: builtins.int
    LOAD_BALANCER_STATE_FIELD_NUMBER: builtins.int
    MANAGED_INSTANCES_STATE_FIELD_NUMBER: builtins.int
    LOAD_BALANCER_SPEC_FIELD_NUMBER: builtins.int
    HEALTH_CHECKS_SPEC_FIELD_NUMBER: builtins.int
    SERVICE_ACCOUNT_ID_FIELD_NUMBER: builtins.int
    STATUS_FIELD_NUMBER: builtins.int
    VARIABLES_FIELD_NUMBER: builtins.int
    DELETION_PROTECTION_FIELD_NUMBER: builtins.int
    APPLICATION_LOAD_BALANCER_SPEC_FIELD_NUMBER: builtins.int
    APPLICATION_LOAD_BALANCER_STATE_FIELD_NUMBER: builtins.int
    id: typing.Text
    """ID of the instance group."""

    folder_id: typing.Text
    """ID of the folder that the instance group belongs to."""

    @property
    def created_at(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """Creation timestamp in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) text format."""
        pass
    name: typing.Text
    """Name of the instance group.
    The name is unique within the folder.
    """

    description: typing.Text
    """Description of the instance group."""

    @property
    def labels(self) -> google.protobuf.internal.containers.ScalarMap[typing.Text, typing.Text]:
        """Resource labels as `key:value` pairs."""
        pass
    @property
    def instance_template(self) -> global___InstanceTemplate:
        """Instance template for creating the instance group.
        For more information, see [Instance Templates](/docs/compute/concepts/instance-groups/instance-template).
        """
        pass
    @property
    def scale_policy(self) -> global___ScalePolicy:
        """[Scaling policy](/docs/compute/concepts/instance-groups/scale) of the instance group."""
        pass
    @property
    def deploy_policy(self) -> global___DeployPolicy:
        """Deployment policy of the instance group."""
        pass
    @property
    def allocation_policy(self) -> global___AllocationPolicy:
        """Allocation policy of the instance group by zones and regions."""
        pass
    @property
    def load_balancer_state(self) -> global___LoadBalancerState:
        """Status of the Network Load Balancer target group attributed to the instance group."""
        pass
    @property
    def managed_instances_state(self) -> global___ManagedInstancesState:
        """States of instances for this instance group."""
        pass
    @property
    def load_balancer_spec(self) -> global___LoadBalancerSpec:
        """Settings for balancing load between instances via [Network Load Balancer](/docs/network-load-balancer/concepts)
        (OSI model layer 3).
        """
        pass
    @property
    def health_checks_spec(self) -> global___HealthChecksSpec:
        """Health checking specification. For more information, see [Health check](/docs/network-load-balancer/concepts/health-check)."""
        pass
    service_account_id: typing.Text
    """ID of the service account. The service account will be used for all API calls
    made by the Instance Groups component on behalf of the user (for example, creating instances, adding them to load balancer target group, etc.). For more information, see [Service accounts](/docs/iam/concepts/users/service-accounts).
    To get the service account ID, use a [yandex.cloud.iam.v1.ServiceAccountService.List] request.
    """

    status: global___InstanceGroup.Status.ValueType
    """Status of the instance group."""

    @property
    def variables(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Variable]: ...
    deletion_protection: builtins.bool
    """Flag prohibiting deletion of the instance group.

    Allowed values:</br>- `false`: The instance group can be deleted.</br>- `true`: The instance group cannot be deleted.

    The default is `false`.
    """

    @property
    def application_load_balancer_spec(self) -> global___ApplicationLoadBalancerSpec:
        """Settings for balancing load between instances via [Application Load Balancer](/docs/application-load-balancer/concepts)
        (OSI model layer 7).
        """
        pass
    @property
    def application_load_balancer_state(self) -> global___ApplicationLoadBalancerState:
        """Status of the Application Load Balancer target group attributed to the instance group.

        Returned if there is a working load balancer that the target group is connected to.
        """
        pass
    def __init__(self,
        *,
        id: typing.Text = ...,
        folder_id: typing.Text = ...,
        created_at: typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        name: typing.Text = ...,
        description: typing.Text = ...,
        labels: typing.Optional[typing.Mapping[typing.Text, typing.Text]] = ...,
        instance_template: typing.Optional[global___InstanceTemplate] = ...,
        scale_policy: typing.Optional[global___ScalePolicy] = ...,
        deploy_policy: typing.Optional[global___DeployPolicy] = ...,
        allocation_policy: typing.Optional[global___AllocationPolicy] = ...,
        load_balancer_state: typing.Optional[global___LoadBalancerState] = ...,
        managed_instances_state: typing.Optional[global___ManagedInstancesState] = ...,
        load_balancer_spec: typing.Optional[global___LoadBalancerSpec] = ...,
        health_checks_spec: typing.Optional[global___HealthChecksSpec] = ...,
        service_account_id: typing.Text = ...,
        status: global___InstanceGroup.Status.ValueType = ...,
        variables: typing.Optional[typing.Iterable[global___Variable]] = ...,
        deletion_protection: builtins.bool = ...,
        application_load_balancer_spec: typing.Optional[global___ApplicationLoadBalancerSpec] = ...,
        application_load_balancer_state: typing.Optional[global___ApplicationLoadBalancerState] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["allocation_policy",b"allocation_policy","application_load_balancer_spec",b"application_load_balancer_spec","application_load_balancer_state",b"application_load_balancer_state","created_at",b"created_at","deploy_policy",b"deploy_policy","health_checks_spec",b"health_checks_spec","instance_template",b"instance_template","load_balancer_spec",b"load_balancer_spec","load_balancer_state",b"load_balancer_state","managed_instances_state",b"managed_instances_state","scale_policy",b"scale_policy"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["allocation_policy",b"allocation_policy","application_load_balancer_spec",b"application_load_balancer_spec","application_load_balancer_state",b"application_load_balancer_state","created_at",b"created_at","deletion_protection",b"deletion_protection","deploy_policy",b"deploy_policy","description",b"description","folder_id",b"folder_id","health_checks_spec",b"health_checks_spec","id",b"id","instance_template",b"instance_template","labels",b"labels","load_balancer_spec",b"load_balancer_spec","load_balancer_state",b"load_balancer_state","managed_instances_state",b"managed_instances_state","name",b"name","scale_policy",b"scale_policy","service_account_id",b"service_account_id","status",b"status","variables",b"variables"]) -> None: ...
global___InstanceGroup = InstanceGroup

class ApplicationLoadBalancerState(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    TARGET_GROUP_ID_FIELD_NUMBER: builtins.int
    STATUS_MESSAGE_FIELD_NUMBER: builtins.int
    target_group_id: typing.Text
    """ID of the Application Load Balancer target group attributed to the instance group."""

    status_message: typing.Text
    """Status message of the target group."""

    def __init__(self,
        *,
        target_group_id: typing.Text = ...,
        status_message: typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["status_message",b"status_message","target_group_id",b"target_group_id"]) -> None: ...
global___ApplicationLoadBalancerState = ApplicationLoadBalancerState

class Variable(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    KEY_FIELD_NUMBER: builtins.int
    VALUE_FIELD_NUMBER: builtins.int
    key: typing.Text
    value: typing.Text
    def __init__(self,
        *,
        key: typing.Text = ...,
        value: typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["key",b"key","value",b"value"]) -> None: ...
global___Variable = Variable

class LoadBalancerState(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    TARGET_GROUP_ID_FIELD_NUMBER: builtins.int
    STATUS_MESSAGE_FIELD_NUMBER: builtins.int
    target_group_id: typing.Text
    """ID of the Network Load Balancer target group attributed to the instance group."""

    status_message: typing.Text
    """Status message of the target group."""

    def __init__(self,
        *,
        target_group_id: typing.Text = ...,
        status_message: typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["status_message",b"status_message","target_group_id",b"target_group_id"]) -> None: ...
global___LoadBalancerState = LoadBalancerState

class ManagedInstancesState(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    class Statuses(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor
        CREATING_FIELD_NUMBER: builtins.int
        STARTING_FIELD_NUMBER: builtins.int
        OPENING_FIELD_NUMBER: builtins.int
        WARMING_FIELD_NUMBER: builtins.int
        RUNNING_FIELD_NUMBER: builtins.int
        CLOSING_FIELD_NUMBER: builtins.int
        STOPPING_FIELD_NUMBER: builtins.int
        UPDATING_FIELD_NUMBER: builtins.int
        DELETING_FIELD_NUMBER: builtins.int
        FAILED_FIELD_NUMBER: builtins.int
        creating: builtins.int
        """Instance is being created."""

        starting: builtins.int
        """Instance is being started."""

        opening: builtins.int
        """Instance is being opened to receive traffic."""

        warming: builtins.int
        """Instance is being warmed."""

        running: builtins.int
        """Instance is running normally."""

        closing: builtins.int
        """Instance is being closed to traffic."""

        stopping: builtins.int
        """Instance is being stopped."""

        updating: builtins.int
        """Instance is being updated."""

        deleting: builtins.int
        """Instance is being deleted."""

        failed: builtins.int
        """Instance failed and needs to be recreated."""

        def __init__(self,
            *,
            creating: builtins.int = ...,
            starting: builtins.int = ...,
            opening: builtins.int = ...,
            warming: builtins.int = ...,
            running: builtins.int = ...,
            closing: builtins.int = ...,
            stopping: builtins.int = ...,
            updating: builtins.int = ...,
            deleting: builtins.int = ...,
            failed: builtins.int = ...,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["closing",b"closing","creating",b"creating","deleting",b"deleting","failed",b"failed","opening",b"opening","running",b"running","starting",b"starting","stopping",b"stopping","updating",b"updating","warming",b"warming"]) -> None: ...

    TARGET_SIZE_FIELD_NUMBER: builtins.int
    RUNNING_ACTUAL_COUNT_FIELD_NUMBER: builtins.int
    RUNNING_OUTDATED_COUNT_FIELD_NUMBER: builtins.int
    PROCESSING_COUNT_FIELD_NUMBER: builtins.int
    target_size: builtins.int
    """Target number of instances for this instance group."""

    running_actual_count: builtins.int
    """The number of running instances that match the current instance template. For more information, see [ManagedInstance.Status.RUNNING_ACTUAL]."""

    running_outdated_count: builtins.int
    """The number of running instances that does not match the current instance template. For more information, see [ManagedInstance.Status.RUNNING_OUTDATED]."""

    processing_count: builtins.int
    """The number of instances in flight (for example, updating, starting, deleting). For more information, see [ManagedInstance.Status]."""

    def __init__(self,
        *,
        target_size: builtins.int = ...,
        running_actual_count: builtins.int = ...,
        running_outdated_count: builtins.int = ...,
        processing_count: builtins.int = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["processing_count",b"processing_count","running_actual_count",b"running_actual_count","running_outdated_count",b"running_outdated_count","target_size",b"target_size"]) -> None: ...
global___ManagedInstancesState = ManagedInstancesState

class ScalePolicy(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    class AutoScale(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor
        class _AutoScaleType:
            ValueType = typing.NewType('ValueType', builtins.int)
            V: typing_extensions.TypeAlias = ValueType
        class _AutoScaleTypeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[ScalePolicy.AutoScale._AutoScaleType.ValueType], builtins.type):
            DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
            AUTO_SCALE_TYPE_UNSPECIFIED: ScalePolicy.AutoScale._AutoScaleType.ValueType  # 0
            ZONAL: ScalePolicy.AutoScale._AutoScaleType.ValueType  # 1
            """Scale each zone independently. This is the default."""

            REGIONAL: ScalePolicy.AutoScale._AutoScaleType.ValueType  # 2
            """Scale group as a whole."""

        class AutoScaleType(_AutoScaleType, metaclass=_AutoScaleTypeEnumTypeWrapper):
            pass

        AUTO_SCALE_TYPE_UNSPECIFIED: ScalePolicy.AutoScale.AutoScaleType.ValueType  # 0
        ZONAL: ScalePolicy.AutoScale.AutoScaleType.ValueType  # 1
        """Scale each zone independently. This is the default."""

        REGIONAL: ScalePolicy.AutoScale.AutoScaleType.ValueType  # 2
        """Scale group as a whole."""


        MIN_ZONE_SIZE_FIELD_NUMBER: builtins.int
        MAX_SIZE_FIELD_NUMBER: builtins.int
        MEASUREMENT_DURATION_FIELD_NUMBER: builtins.int
        WARMUP_DURATION_FIELD_NUMBER: builtins.int
        STABILIZATION_DURATION_FIELD_NUMBER: builtins.int
        INITIAL_SIZE_FIELD_NUMBER: builtins.int
        CPU_UTILIZATION_RULE_FIELD_NUMBER: builtins.int
        CUSTOM_RULES_FIELD_NUMBER: builtins.int
        AUTO_SCALE_TYPE_FIELD_NUMBER: builtins.int
        min_zone_size: builtins.int
        """Lower limit for instance count in each zone."""

        max_size: builtins.int
        """Upper limit for total instance count (across all zones).
        0 means maximum limit = 100.
        """

        @property
        def measurement_duration(self) -> google.protobuf.duration_pb2.Duration:
            """Time in seconds allotted for averaging metrics.
            1 minute by default.
            """
            pass
        @property
        def warmup_duration(self) -> google.protobuf.duration_pb2.Duration:
            """The warmup time of the instance in seconds. During this time,
            traffic is sent to the instance, but instance metrics are not collected.
            """
            pass
        @property
        def stabilization_duration(self) -> google.protobuf.duration_pb2.Duration:
            """Minimum amount of time in seconds allotted for monitoring before
            Instance Groups can reduce the number of instances in the group.
            During this time, the group size doesn't decrease, even if the new metric values
            indicate that it should.
            """
            pass
        initial_size: builtins.int
        """Target group size."""

        @property
        def cpu_utilization_rule(self) -> global___ScalePolicy.CpuUtilizationRule:
            """Defines an autoscaling rule based on the average CPU utilization of the instance group.

            If more than one rule is specified, e.g. CPU utilization and one or more Monitoring metrics ([custom_rules]),
            the size of the instance group will be equal to the maximum of sizes calculated according to each metric.
            """
            pass
        @property
        def custom_rules(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___ScalePolicy.CustomRule]:
            """Defines an autoscaling rule based on a [custom metric](/docs/monitoring/operations/metric/add) from Monitoring.

            If more than one rule is specified, e.g. CPU utilization ([cpu_utilization_rule]) and one or more Monitoring
            metrics, the size of the instance group will be equal to the maximum of sizes calculated according to each metric.
            """
            pass
        auto_scale_type: global___ScalePolicy.AutoScale.AutoScaleType.ValueType
        """Autoscaling type."""

        def __init__(self,
            *,
            min_zone_size: builtins.int = ...,
            max_size: builtins.int = ...,
            measurement_duration: typing.Optional[google.protobuf.duration_pb2.Duration] = ...,
            warmup_duration: typing.Optional[google.protobuf.duration_pb2.Duration] = ...,
            stabilization_duration: typing.Optional[google.protobuf.duration_pb2.Duration] = ...,
            initial_size: builtins.int = ...,
            cpu_utilization_rule: typing.Optional[global___ScalePolicy.CpuUtilizationRule] = ...,
            custom_rules: typing.Optional[typing.Iterable[global___ScalePolicy.CustomRule]] = ...,
            auto_scale_type: global___ScalePolicy.AutoScale.AutoScaleType.ValueType = ...,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions.Literal["cpu_utilization_rule",b"cpu_utilization_rule","measurement_duration",b"measurement_duration","stabilization_duration",b"stabilization_duration","warmup_duration",b"warmup_duration"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing_extensions.Literal["auto_scale_type",b"auto_scale_type","cpu_utilization_rule",b"cpu_utilization_rule","custom_rules",b"custom_rules","initial_size",b"initial_size","max_size",b"max_size","measurement_duration",b"measurement_duration","min_zone_size",b"min_zone_size","stabilization_duration",b"stabilization_duration","warmup_duration",b"warmup_duration"]) -> None: ...

    class CpuUtilizationRule(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor
        UTILIZATION_TARGET_FIELD_NUMBER: builtins.int
        utilization_target: builtins.float
        """Target CPU utilization level. Instance Groups maintains this level for each availability zone."""

        def __init__(self,
            *,
            utilization_target: builtins.float = ...,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["utilization_target",b"utilization_target"]) -> None: ...

    class CustomRule(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor
        class _RuleType:
            ValueType = typing.NewType('ValueType', builtins.int)
            V: typing_extensions.TypeAlias = ValueType
        class _RuleTypeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[ScalePolicy.CustomRule._RuleType.ValueType], builtins.type):
            DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
            RULE_TYPE_UNSPECIFIED: ScalePolicy.CustomRule._RuleType.ValueType  # 0
            UTILIZATION: ScalePolicy.CustomRule._RuleType.ValueType  # 1
            """This type means that the metric applies to one instance.
            First, Instance Groups calculates the average metric value for each instance,
            then averages the values for instances in one availability zone or in whole group depends on autoscaling type.
            This type of metric must have the `instance_id` label.
            """

            WORKLOAD: ScalePolicy.CustomRule._RuleType.ValueType  # 2
            """This type means that the metric applies to instances in one availability zone or to whole group depends on autoscaling type.
            This type of metric must have the `zone_id` label if ZONAL autoscaling type is chosen.
            """

        class RuleType(_RuleType, metaclass=_RuleTypeEnumTypeWrapper):
            pass

        RULE_TYPE_UNSPECIFIED: ScalePolicy.CustomRule.RuleType.ValueType  # 0
        UTILIZATION: ScalePolicy.CustomRule.RuleType.ValueType  # 1
        """This type means that the metric applies to one instance.
        First, Instance Groups calculates the average metric value for each instance,
        then averages the values for instances in one availability zone or in whole group depends on autoscaling type.
        This type of metric must have the `instance_id` label.
        """

        WORKLOAD: ScalePolicy.CustomRule.RuleType.ValueType  # 2
        """This type means that the metric applies to instances in one availability zone or to whole group depends on autoscaling type.
        This type of metric must have the `zone_id` label if ZONAL autoscaling type is chosen.
        """


        class _MetricType:
            ValueType = typing.NewType('ValueType', builtins.int)
            V: typing_extensions.TypeAlias = ValueType
        class _MetricTypeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[ScalePolicy.CustomRule._MetricType.ValueType], builtins.type):
            DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
            METRIC_TYPE_UNSPECIFIED: ScalePolicy.CustomRule._MetricType.ValueType  # 0
            GAUGE: ScalePolicy.CustomRule._MetricType.ValueType  # 1
            """This type is used for metrics that show the metric value at a certain point in time,
            such as requests per second to the server on an instance.

            Instance Groups calculates the average metric value for the period
            specified in the [AutoScale.measurement_duration] field.
            """

            COUNTER: ScalePolicy.CustomRule._MetricType.ValueType  # 2
            """This type is used for metrics that monotonically increase over time,
            such as the total number of requests to the server on an instance.

            Instance Groups calculates the average value increase for the period
            specified in the [AutoScale.measurement_duration] field.
            """

        class MetricType(_MetricType, metaclass=_MetricTypeEnumTypeWrapper):
            pass

        METRIC_TYPE_UNSPECIFIED: ScalePolicy.CustomRule.MetricType.ValueType  # 0
        GAUGE: ScalePolicy.CustomRule.MetricType.ValueType  # 1
        """This type is used for metrics that show the metric value at a certain point in time,
        such as requests per second to the server on an instance.

        Instance Groups calculates the average metric value for the period
        specified in the [AutoScale.measurement_duration] field.
        """

        COUNTER: ScalePolicy.CustomRule.MetricType.ValueType  # 2
        """This type is used for metrics that monotonically increase over time,
        such as the total number of requests to the server on an instance.

        Instance Groups calculates the average value increase for the period
        specified in the [AutoScale.measurement_duration] field.
        """


        class LabelsEntry(google.protobuf.message.Message):
            DESCRIPTOR: google.protobuf.descriptor.Descriptor
            KEY_FIELD_NUMBER: builtins.int
            VALUE_FIELD_NUMBER: builtins.int
            key: typing.Text
            value: typing.Text
            def __init__(self,
                *,
                key: typing.Text = ...,
                value: typing.Text = ...,
                ) -> None: ...
            def ClearField(self, field_name: typing_extensions.Literal["key",b"key","value",b"value"]) -> None: ...

        RULE_TYPE_FIELD_NUMBER: builtins.int
        METRIC_TYPE_FIELD_NUMBER: builtins.int
        METRIC_NAME_FIELD_NUMBER: builtins.int
        LABELS_FIELD_NUMBER: builtins.int
        TARGET_FIELD_NUMBER: builtins.int
        FOLDER_ID_FIELD_NUMBER: builtins.int
        SERVICE_FIELD_NUMBER: builtins.int
        rule_type: global___ScalePolicy.CustomRule.RuleType.ValueType
        """Custom metric rule type. This field affects which label from
        the custom metric should be used: `zone_id` or `instance_id`.
        """

        metric_type: global___ScalePolicy.CustomRule.MetricType.ValueType
        """Type of custom metric. This field affects how Instance Groups calculates the average metric value."""

        metric_name: typing.Text
        """Name of custom metric in Monitoring that should be used for scaling."""

        @property
        def labels(self) -> google.protobuf.internal.containers.ScalarMap[typing.Text, typing.Text]:
            """Labels of custom metric in Monitoring that should be used for scaling."""
            pass
        target: builtins.float
        """Target value for the custom metric. Instance Groups maintains this level for each availability zone."""

        folder_id: typing.Text
        """Folder id of custom metric in Monitoring that should be used for scaling."""

        service: typing.Text
        """Service of custom metric in Monitoring that should be used for scaling."""

        def __init__(self,
            *,
            rule_type: global___ScalePolicy.CustomRule.RuleType.ValueType = ...,
            metric_type: global___ScalePolicy.CustomRule.MetricType.ValueType = ...,
            metric_name: typing.Text = ...,
            labels: typing.Optional[typing.Mapping[typing.Text, typing.Text]] = ...,
            target: builtins.float = ...,
            folder_id: typing.Text = ...,
            service: typing.Text = ...,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["folder_id",b"folder_id","labels",b"labels","metric_name",b"metric_name","metric_type",b"metric_type","rule_type",b"rule_type","service",b"service","target",b"target"]) -> None: ...

    class FixedScale(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor
        SIZE_FIELD_NUMBER: builtins.int
        size: builtins.int
        """Number of instances in the instance group."""

        def __init__(self,
            *,
            size: builtins.int = ...,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["size",b"size"]) -> None: ...

    FIXED_SCALE_FIELD_NUMBER: builtins.int
    AUTO_SCALE_FIELD_NUMBER: builtins.int
    TEST_AUTO_SCALE_FIELD_NUMBER: builtins.int
    @property
    def fixed_scale(self) -> global___ScalePolicy.FixedScale:
        """[Manual scaling policy](/docs/compute/concepts/instance-groups/scale#fixed-policy) of the instance group."""
        pass
    @property
    def auto_scale(self) -> global___ScalePolicy.AutoScale:
        """[Automatic scaling policy](/docs/compute/concepts/instance-groups/scale#auto-scale) of the instance group."""
        pass
    @property
    def test_auto_scale(self) -> global___ScalePolicy.AutoScale:
        """Test spec for [automatic scaling policy](/docs/compute/concepts/instance-groups/scale#auto-scale) of the instance group."""
        pass
    def __init__(self,
        *,
        fixed_scale: typing.Optional[global___ScalePolicy.FixedScale] = ...,
        auto_scale: typing.Optional[global___ScalePolicy.AutoScale] = ...,
        test_auto_scale: typing.Optional[global___ScalePolicy.AutoScale] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["auto_scale",b"auto_scale","fixed_scale",b"fixed_scale","scale_type",b"scale_type","test_auto_scale",b"test_auto_scale"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["auto_scale",b"auto_scale","fixed_scale",b"fixed_scale","scale_type",b"scale_type","test_auto_scale",b"test_auto_scale"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["scale_type",b"scale_type"]) -> typing.Optional[typing_extensions.Literal["fixed_scale","auto_scale"]]: ...
global___ScalePolicy = ScalePolicy

class DeployPolicy(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    class _Strategy:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _StrategyEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[DeployPolicy._Strategy.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
        STRATEGY_UNSPECIFIED: DeployPolicy._Strategy.ValueType  # 0
        PROACTIVE: DeployPolicy._Strategy.ValueType  # 1
        """Instance Groups can forcefully stop a running instance. This is the default."""

        OPPORTUNISTIC: DeployPolicy._Strategy.ValueType  # 2
        """Instance Groups does not stop a running instance.
        Instead, it will wait until the instance stops itself or becomes unhealthy.
        """

    class Strategy(_Strategy, metaclass=_StrategyEnumTypeWrapper):
        pass

    STRATEGY_UNSPECIFIED: DeployPolicy.Strategy.ValueType  # 0
    PROACTIVE: DeployPolicy.Strategy.ValueType  # 1
    """Instance Groups can forcefully stop a running instance. This is the default."""

    OPPORTUNISTIC: DeployPolicy.Strategy.ValueType  # 2
    """Instance Groups does not stop a running instance.
    Instead, it will wait until the instance stops itself or becomes unhealthy.
    """


    MAX_UNAVAILABLE_FIELD_NUMBER: builtins.int
    MAX_DELETING_FIELD_NUMBER: builtins.int
    MAX_CREATING_FIELD_NUMBER: builtins.int
    MAX_EXPANSION_FIELD_NUMBER: builtins.int
    STARTUP_DURATION_FIELD_NUMBER: builtins.int
    STRATEGY_FIELD_NUMBER: builtins.int
    max_unavailable: builtins.int
    """The maximum number of running instances that can be taken offline (i.e., stopped or deleted) at the same time
    during the update process.
    If [max_expansion] is not specified or set to zero, [max_unavailable] must be set to a non-zero value.
    """

    max_deleting: builtins.int
    """The maximum number of instances that can be deleted at the same time.

    The value 0 is any number of virtual machines within the allowed values.
    """

    max_creating: builtins.int
    """The maximum number of instances that can be created at the same time.

    The value 0 is any number of virtual machines within the allowed values.
    """

    max_expansion: builtins.int
    """The maximum number of instances that can be temporarily allocated above the group's target size
    during the update process.
    If [max_unavailable] is not specified or set to zero, [max_expansion] must be set to a non-zero value.
    """

    @property
    def startup_duration(self) -> google.protobuf.duration_pb2.Duration:
        """Instance startup duration.
        Instance will be considered up and running (and start receiving traffic) only after startup_duration
        has elapsed and all health checks are passed.
        See [yandex.cloud.compute.v1.instancegroup.ManagedInstance.Status] for more information.
        """
        pass
    strategy: global___DeployPolicy.Strategy.ValueType
    """Affects the lifecycle of the instance during deployment."""

    def __init__(self,
        *,
        max_unavailable: builtins.int = ...,
        max_deleting: builtins.int = ...,
        max_creating: builtins.int = ...,
        max_expansion: builtins.int = ...,
        startup_duration: typing.Optional[google.protobuf.duration_pb2.Duration] = ...,
        strategy: global___DeployPolicy.Strategy.ValueType = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["startup_duration",b"startup_duration"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["max_creating",b"max_creating","max_deleting",b"max_deleting","max_expansion",b"max_expansion","max_unavailable",b"max_unavailable","startup_duration",b"startup_duration","strategy",b"strategy"]) -> None: ...
global___DeployPolicy = DeployPolicy

class AllocationPolicy(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    class Zone(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor
        ZONE_ID_FIELD_NUMBER: builtins.int
        zone_id: typing.Text
        """ID of the availability zone where the instance resides."""

        def __init__(self,
            *,
            zone_id: typing.Text = ...,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["zone_id",b"zone_id"]) -> None: ...

    ZONES_FIELD_NUMBER: builtins.int
    @property
    def zones(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___AllocationPolicy.Zone]:
        """List of availability zones."""
        pass
    def __init__(self,
        *,
        zones: typing.Optional[typing.Iterable[global___AllocationPolicy.Zone]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["zones",b"zones"]) -> None: ...
global___AllocationPolicy = AllocationPolicy

class InstanceTemplate(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    class LabelsEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor
        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: typing.Text
        value: typing.Text
        def __init__(self,
            *,
            key: typing.Text = ...,
            value: typing.Text = ...,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["key",b"key","value",b"value"]) -> None: ...

    class MetadataEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor
        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: typing.Text
        value: typing.Text
        def __init__(self,
            *,
            key: typing.Text = ...,
            value: typing.Text = ...,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["key",b"key","value",b"value"]) -> None: ...

    DESCRIPTION_FIELD_NUMBER: builtins.int
    LABELS_FIELD_NUMBER: builtins.int
    PLATFORM_ID_FIELD_NUMBER: builtins.int
    RESOURCES_SPEC_FIELD_NUMBER: builtins.int
    METADATA_FIELD_NUMBER: builtins.int
    BOOT_DISK_SPEC_FIELD_NUMBER: builtins.int
    SECONDARY_DISK_SPECS_FIELD_NUMBER: builtins.int
    NETWORK_INTERFACE_SPECS_FIELD_NUMBER: builtins.int
    SCHEDULING_POLICY_FIELD_NUMBER: builtins.int
    SERVICE_ACCOUNT_ID_FIELD_NUMBER: builtins.int
    NETWORK_SETTINGS_FIELD_NUMBER: builtins.int
    NAME_FIELD_NUMBER: builtins.int
    HOSTNAME_FIELD_NUMBER: builtins.int
    PLACEMENT_POLICY_FIELD_NUMBER: builtins.int
    description: typing.Text
    """Description of the instance template."""

    @property
    def labels(self) -> google.protobuf.internal.containers.ScalarMap[typing.Text, typing.Text]:
        """Resource labels as `key:value` pairs."""
        pass
    platform_id: typing.Text
    """ID of the hardware platform configuration for the instance.
    Platforms allows you to create various types of instances: with a large amount of memory,
    with a large number of cores, with a burstable performance.
    For more information, see [Platforms](/docs/compute/concepts/vm-platforms).
    """

    @property
    def resources_spec(self) -> global___ResourcesSpec:
        """Computing resources of the instance such as the amount of memory and number of cores."""
        pass
    @property
    def metadata(self) -> google.protobuf.internal.containers.ScalarMap[typing.Text, typing.Text]:
        """The metadata `key:value` pairs assigned to this instance template. This includes custom metadata and predefined keys.

        Metadata values may contain one of the supported placeholders:
          {instance_group.id}
          {instance.short_id}
          {instance.index}
          {instance.index_in_zone}
          {instance.zone_id}
        InstanceGroup and Instance labels may be copied to metadata following way:
          {instance_group.labels.some_label_key}
          {instance.labels.another_label_key}
        These placeholders will be substituted for each created instance anywhere in the value text.
        In the rare case the value requires to contain this placeholder explicitly,
        it must be escaped with double brackets, in example {instance.index}.

        For example, you may use the metadata in order to provide your public SSH key to the instance.
        For more information, see [Metadata](/docs/compute/concepts/vm-metadata).
        """
        pass
    @property
    def boot_disk_spec(self) -> global___AttachedDiskSpec:
        """Boot disk specification that will be attached to the instance."""
        pass
    @property
    def secondary_disk_specs(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___AttachedDiskSpec]:
        """Array of secondary disks that will be attached to the instance."""
        pass
    @property
    def network_interface_specs(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___NetworkInterfaceSpec]:
        """Array of network interfaces that will be attached to the instance."""
        pass
    @property
    def scheduling_policy(self) -> global___SchedulingPolicy:
        """Scheduling policy for the instance."""
        pass
    service_account_id: typing.Text
    """Service account ID for the instance."""

    @property
    def network_settings(self) -> global___NetworkSettings:
        """Network settings for the instance."""
        pass
    name: typing.Text
    """Name of the instance.
    In order to be unique it must contain at least on of instance unique placeholders:
      {instance.short_id}
      {instance.index}
      combination of {instance.zone_id} and {instance.index_in_zone}
    Example: my-instance-{instance.index}
    If not set, default is used: {instance_group.id}-{instance.short_id}
    It may also contain another placeholders, see metadata doc for full list.
    """

    hostname: typing.Text
    """Host name for the instance.
    This field is used to generate the [yandex.cloud.compute.v1.Instance.fqdn] value.
    The host name must be unique within the network and region.
    If not specified, the host name will be equal to [yandex.cloud.compute.v1.Instance.id] of the instance
    and FQDN will be `<id>.auto.internal`. Otherwise FQDN will be `<hostname>.<region_id>.internal`.

    In order to be unique it must contain at least on of instance unique placeholders:
      {instance.short_id}
      {instance.index}
      combination of {instance.zone_id} and {instance.index_in_zone}
    Example: my-instance-{instance.index}
    If not set, `name` value will be used
    It may also contain another placeholders, see metadata doc for full list.
    """

    @property
    def placement_policy(self) -> global___PlacementPolicy:
        """Placement Group"""
        pass
    def __init__(self,
        *,
        description: typing.Text = ...,
        labels: typing.Optional[typing.Mapping[typing.Text, typing.Text]] = ...,
        platform_id: typing.Text = ...,
        resources_spec: typing.Optional[global___ResourcesSpec] = ...,
        metadata: typing.Optional[typing.Mapping[typing.Text, typing.Text]] = ...,
        boot_disk_spec: typing.Optional[global___AttachedDiskSpec] = ...,
        secondary_disk_specs: typing.Optional[typing.Iterable[global___AttachedDiskSpec]] = ...,
        network_interface_specs: typing.Optional[typing.Iterable[global___NetworkInterfaceSpec]] = ...,
        scheduling_policy: typing.Optional[global___SchedulingPolicy] = ...,
        service_account_id: typing.Text = ...,
        network_settings: typing.Optional[global___NetworkSettings] = ...,
        name: typing.Text = ...,
        hostname: typing.Text = ...,
        placement_policy: typing.Optional[global___PlacementPolicy] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["boot_disk_spec",b"boot_disk_spec","network_settings",b"network_settings","placement_policy",b"placement_policy","resources_spec",b"resources_spec","scheduling_policy",b"scheduling_policy"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["boot_disk_spec",b"boot_disk_spec","description",b"description","hostname",b"hostname","labels",b"labels","metadata",b"metadata","name",b"name","network_interface_specs",b"network_interface_specs","network_settings",b"network_settings","placement_policy",b"placement_policy","platform_id",b"platform_id","resources_spec",b"resources_spec","scheduling_policy",b"scheduling_policy","secondary_disk_specs",b"secondary_disk_specs","service_account_id",b"service_account_id"]) -> None: ...
global___InstanceTemplate = InstanceTemplate

class PlacementPolicy(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    class HostAffinityRule(google.protobuf.message.Message):
        """Affinitity definition"""
        DESCRIPTOR: google.protobuf.descriptor.Descriptor
        class _Operator:
            ValueType = typing.NewType('ValueType', builtins.int)
            V: typing_extensions.TypeAlias = ValueType
        class _OperatorEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[PlacementPolicy.HostAffinityRule._Operator.ValueType], builtins.type):
            DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
            OPERATOR_UNSPECIFIED: PlacementPolicy.HostAffinityRule._Operator.ValueType  # 0
            IN: PlacementPolicy.HostAffinityRule._Operator.ValueType  # 1
            NOT_IN: PlacementPolicy.HostAffinityRule._Operator.ValueType  # 2
        class Operator(_Operator, metaclass=_OperatorEnumTypeWrapper):
            pass

        OPERATOR_UNSPECIFIED: PlacementPolicy.HostAffinityRule.Operator.ValueType  # 0
        IN: PlacementPolicy.HostAffinityRule.Operator.ValueType  # 1
        NOT_IN: PlacementPolicy.HostAffinityRule.Operator.ValueType  # 2

        KEY_FIELD_NUMBER: builtins.int
        OP_FIELD_NUMBER: builtins.int
        VALUES_FIELD_NUMBER: builtins.int
        key: typing.Text
        """Affinity label or one of reserved values - 'yc.hostId', 'yc.hostGroupId'"""

        op: global___PlacementPolicy.HostAffinityRule.Operator.ValueType
        """Include or exclude action"""

        @property
        def values(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
            """Affinity value or host ID or host group ID"""
            pass
        def __init__(self,
            *,
            key: typing.Text = ...,
            op: global___PlacementPolicy.HostAffinityRule.Operator.ValueType = ...,
            values: typing.Optional[typing.Iterable[typing.Text]] = ...,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["key",b"key","op",b"op","values",b"values"]) -> None: ...

    PLACEMENT_GROUP_ID_FIELD_NUMBER: builtins.int
    HOST_AFFINITY_RULES_FIELD_NUMBER: builtins.int
    placement_group_id: typing.Text
    """Identifier of placement group"""

    @property
    def host_affinity_rules(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___PlacementPolicy.HostAffinityRule]:
        """List of affinity rules. Scheduler will attempt to allocate instances according to order of rules."""
        pass
    def __init__(self,
        *,
        placement_group_id: typing.Text = ...,
        host_affinity_rules: typing.Optional[typing.Iterable[global___PlacementPolicy.HostAffinityRule]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["host_affinity_rules",b"host_affinity_rules","placement_group_id",b"placement_group_id"]) -> None: ...
global___PlacementPolicy = PlacementPolicy

class ResourcesSpec(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    MEMORY_FIELD_NUMBER: builtins.int
    CORES_FIELD_NUMBER: builtins.int
    CORE_FRACTION_FIELD_NUMBER: builtins.int
    GPUS_FIELD_NUMBER: builtins.int
    memory: builtins.int
    """The amount of memory available to the instance, specified in bytes."""

    cores: builtins.int
    """The number of cores available to the instance."""

    core_fraction: builtins.int
    """Baseline level of CPU performance with the ability to burst performance above that baseline level.
    This field sets baseline performance for each core.
    """

    gpus: builtins.int
    """The number of GPUs available to the instance."""

    def __init__(self,
        *,
        memory: builtins.int = ...,
        cores: builtins.int = ...,
        core_fraction: builtins.int = ...,
        gpus: builtins.int = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["core_fraction",b"core_fraction","cores",b"cores","gpus",b"gpus","memory",b"memory"]) -> None: ...
global___ResourcesSpec = ResourcesSpec

class AttachedDiskSpec(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    class _Mode:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _ModeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[AttachedDiskSpec._Mode.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
        MODE_UNSPECIFIED: AttachedDiskSpec._Mode.ValueType  # 0
        READ_ONLY: AttachedDiskSpec._Mode.ValueType  # 1
        """Read-only access."""

        READ_WRITE: AttachedDiskSpec._Mode.ValueType  # 2
        """Read/Write access."""

    class Mode(_Mode, metaclass=_ModeEnumTypeWrapper):
        pass

    MODE_UNSPECIFIED: AttachedDiskSpec.Mode.ValueType  # 0
    READ_ONLY: AttachedDiskSpec.Mode.ValueType  # 1
    """Read-only access."""

    READ_WRITE: AttachedDiskSpec.Mode.ValueType  # 2
    """Read/Write access."""


    class DiskSpec(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor
        DESCRIPTION_FIELD_NUMBER: builtins.int
        TYPE_ID_FIELD_NUMBER: builtins.int
        SIZE_FIELD_NUMBER: builtins.int
        IMAGE_ID_FIELD_NUMBER: builtins.int
        SNAPSHOT_ID_FIELD_NUMBER: builtins.int
        PRESERVE_AFTER_INSTANCE_DELETE_FIELD_NUMBER: builtins.int
        description: typing.Text
        """Description of the disk."""

        type_id: typing.Text
        """ID of the disk type."""

        size: builtins.int
        """Size of the disk, specified in bytes."""

        image_id: typing.Text
        """ID of the image that will be used for disk creation."""

        snapshot_id: typing.Text
        """ID of the snapshot that will be used for disk creation."""

        preserve_after_instance_delete: builtins.bool
        """When set to true, disk will not be deleted even after managed instance is deleted.
        It will be a user's responsibility to delete such disks.
        """

        def __init__(self,
            *,
            description: typing.Text = ...,
            type_id: typing.Text = ...,
            size: builtins.int = ...,
            image_id: typing.Text = ...,
            snapshot_id: typing.Text = ...,
            preserve_after_instance_delete: builtins.bool = ...,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions.Literal["image_id",b"image_id","snapshot_id",b"snapshot_id","source_oneof",b"source_oneof"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing_extensions.Literal["description",b"description","image_id",b"image_id","preserve_after_instance_delete",b"preserve_after_instance_delete","size",b"size","snapshot_id",b"snapshot_id","source_oneof",b"source_oneof","type_id",b"type_id"]) -> None: ...
        def WhichOneof(self, oneof_group: typing_extensions.Literal["source_oneof",b"source_oneof"]) -> typing.Optional[typing_extensions.Literal["image_id","snapshot_id"]]: ...

    MODE_FIELD_NUMBER: builtins.int
    DEVICE_NAME_FIELD_NUMBER: builtins.int
    DISK_SPEC_FIELD_NUMBER: builtins.int
    DISK_ID_FIELD_NUMBER: builtins.int
    mode: global___AttachedDiskSpec.Mode.ValueType
    """Access mode to the Disk resource."""

    device_name: typing.Text
    """Serial number that is reflected in the /dev/disk/by-id/ tree
    of a Linux operating system running within the instance.

    This value can be used to reference the device for mounting, resizing, and so on, from within the instance.
    """

    @property
    def disk_spec(self) -> global___AttachedDiskSpec.DiskSpec:
        """oneof disk_spec or disk_id
        Disk specification that is attached to the instance. For more information, see [Disks](/docs/compute/concepts/disk).
        """
        pass
    disk_id: typing.Text
    """Set to use an existing disk. To set use variables."""

    def __init__(self,
        *,
        mode: global___AttachedDiskSpec.Mode.ValueType = ...,
        device_name: typing.Text = ...,
        disk_spec: typing.Optional[global___AttachedDiskSpec.DiskSpec] = ...,
        disk_id: typing.Text = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["disk_spec",b"disk_spec"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["device_name",b"device_name","disk_id",b"disk_id","disk_spec",b"disk_spec","mode",b"mode"]) -> None: ...
global___AttachedDiskSpec = AttachedDiskSpec

class NetworkInterfaceSpec(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    NETWORK_ID_FIELD_NUMBER: builtins.int
    SUBNET_IDS_FIELD_NUMBER: builtins.int
    PRIMARY_V4_ADDRESS_SPEC_FIELD_NUMBER: builtins.int
    PRIMARY_V6_ADDRESS_SPEC_FIELD_NUMBER: builtins.int
    SECURITY_GROUP_IDS_FIELD_NUMBER: builtins.int
    network_id: typing.Text
    """ID of the network."""

    @property
    def subnet_ids(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """IDs of the subnets."""
        pass
    @property
    def primary_v4_address_spec(self) -> global___PrimaryAddressSpec:
        """Primary IPv4 address that is assigned to the instance for this network interface."""
        pass
    @property
    def primary_v6_address_spec(self) -> global___PrimaryAddressSpec:
        """Primary IPv6 address that is assigned to the instance for this network interface. IPv6 not available yet."""
        pass
    @property
    def security_group_ids(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """IDs of security groups."""
        pass
    def __init__(self,
        *,
        network_id: typing.Text = ...,
        subnet_ids: typing.Optional[typing.Iterable[typing.Text]] = ...,
        primary_v4_address_spec: typing.Optional[global___PrimaryAddressSpec] = ...,
        primary_v6_address_spec: typing.Optional[global___PrimaryAddressSpec] = ...,
        security_group_ids: typing.Optional[typing.Iterable[typing.Text]] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["primary_v4_address_spec",b"primary_v4_address_spec","primary_v6_address_spec",b"primary_v6_address_spec"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["network_id",b"network_id","primary_v4_address_spec",b"primary_v4_address_spec","primary_v6_address_spec",b"primary_v6_address_spec","security_group_ids",b"security_group_ids","subnet_ids",b"subnet_ids"]) -> None: ...
global___NetworkInterfaceSpec = NetworkInterfaceSpec

class PrimaryAddressSpec(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    ONE_TO_ONE_NAT_SPEC_FIELD_NUMBER: builtins.int
    DNS_RECORD_SPECS_FIELD_NUMBER: builtins.int
    ADDRESS_FIELD_NUMBER: builtins.int
    @property
    def one_to_one_nat_spec(self) -> global___OneToOneNatSpec:
        """An external IP address configuration.
        If not specified, then this managed instance will have no external internet access.
        """
        pass
    @property
    def dns_record_specs(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___DnsRecordSpec]:
        """Internal DNS configuration"""
        pass
    address: typing.Text
    """Optional. Manual set static internal IP. To set use variables."""

    def __init__(self,
        *,
        one_to_one_nat_spec: typing.Optional[global___OneToOneNatSpec] = ...,
        dns_record_specs: typing.Optional[typing.Iterable[global___DnsRecordSpec]] = ...,
        address: typing.Text = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["one_to_one_nat_spec",b"one_to_one_nat_spec"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["address",b"address","dns_record_specs",b"dns_record_specs","one_to_one_nat_spec",b"one_to_one_nat_spec"]) -> None: ...
global___PrimaryAddressSpec = PrimaryAddressSpec

class OneToOneNatSpec(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    IP_VERSION_FIELD_NUMBER: builtins.int
    ADDRESS_FIELD_NUMBER: builtins.int
    DNS_RECORD_SPECS_FIELD_NUMBER: builtins.int
    ip_version: global___IpVersion.ValueType
    """IP version for the public IP address."""

    address: typing.Text
    """Manual set static public IP. To set use variables. (optional)"""

    @property
    def dns_record_specs(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___DnsRecordSpec]:
        """External DNS configuration"""
        pass
    def __init__(self,
        *,
        ip_version: global___IpVersion.ValueType = ...,
        address: typing.Text = ...,
        dns_record_specs: typing.Optional[typing.Iterable[global___DnsRecordSpec]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["address",b"address","dns_record_specs",b"dns_record_specs","ip_version",b"ip_version"]) -> None: ...
global___OneToOneNatSpec = OneToOneNatSpec

class DnsRecordSpec(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    FQDN_FIELD_NUMBER: builtins.int
    DNS_ZONE_ID_FIELD_NUMBER: builtins.int
    TTL_FIELD_NUMBER: builtins.int
    PTR_FIELD_NUMBER: builtins.int
    fqdn: typing.Text
    """FQDN (required)"""

    dns_zone_id: typing.Text
    """DNS zone id (optional, if not set, private zone used)"""

    ttl: builtins.int
    """DNS record ttl, values in 0-86400 (optional)"""

    ptr: builtins.bool
    """When set to true, also create PTR DNS record (optional)"""

    def __init__(self,
        *,
        fqdn: typing.Text = ...,
        dns_zone_id: typing.Text = ...,
        ttl: builtins.int = ...,
        ptr: builtins.bool = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["dns_zone_id",b"dns_zone_id","fqdn",b"fqdn","ptr",b"ptr","ttl",b"ttl"]) -> None: ...
global___DnsRecordSpec = DnsRecordSpec

class SchedulingPolicy(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    PREEMPTIBLE_FIELD_NUMBER: builtins.int
    preemptible: builtins.bool
    """Preemptible instances are stopped at least once every 24 hours, and can be stopped at any time
    if their resources are needed by Compute.
    For more information, see [Preemptible Virtual Machines](/docs/compute/concepts/preemptible-vm).
    """

    def __init__(self,
        *,
        preemptible: builtins.bool = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["preemptible",b"preemptible"]) -> None: ...
global___SchedulingPolicy = SchedulingPolicy

class NetworkSettings(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    class _Type:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _TypeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[NetworkSettings._Type.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
        TYPE_UNSPECIFIED: NetworkSettings._Type.ValueType  # 0
        STANDARD: NetworkSettings._Type.ValueType  # 1
        SOFTWARE_ACCELERATED: NetworkSettings._Type.ValueType  # 2
        HARDWARE_ACCELERATED: NetworkSettings._Type.ValueType  # 3
    class Type(_Type, metaclass=_TypeEnumTypeWrapper):
        pass

    TYPE_UNSPECIFIED: NetworkSettings.Type.ValueType  # 0
    STANDARD: NetworkSettings.Type.ValueType  # 1
    SOFTWARE_ACCELERATED: NetworkSettings.Type.ValueType  # 2
    HARDWARE_ACCELERATED: NetworkSettings.Type.ValueType  # 3

    TYPE_FIELD_NUMBER: builtins.int
    type: global___NetworkSettings.Type.ValueType
    """Type of instance network."""

    def __init__(self,
        *,
        type: global___NetworkSettings.Type.ValueType = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["type",b"type"]) -> None: ...
global___NetworkSettings = NetworkSettings

class LoadBalancerSpec(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    TARGET_GROUP_SPEC_FIELD_NUMBER: builtins.int
    MAX_OPENING_TRAFFIC_DURATION_FIELD_NUMBER: builtins.int
    @property
    def target_group_spec(self) -> global___TargetGroupSpec:
        """Specification of the target group that the instance group will be added to. For more information, see [Target groups and resources](/docs/load-balancer/concepts/target-resources)."""
        pass
    @property
    def max_opening_traffic_duration(self) -> google.protobuf.duration_pb2.Duration:
        """Timeout for waiting for the VM to be checked by the load balancer. If the timeout is exceeded,
        the VM will be turned off based on the deployment policy. Specified in seconds.
        """
        pass
    def __init__(self,
        *,
        target_group_spec: typing.Optional[global___TargetGroupSpec] = ...,
        max_opening_traffic_duration: typing.Optional[google.protobuf.duration_pb2.Duration] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["max_opening_traffic_duration",b"max_opening_traffic_duration","target_group_spec",b"target_group_spec"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["max_opening_traffic_duration",b"max_opening_traffic_duration","target_group_spec",b"target_group_spec"]) -> None: ...
global___LoadBalancerSpec = LoadBalancerSpec

class TargetGroupSpec(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    class LabelsEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor
        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: typing.Text
        value: typing.Text
        def __init__(self,
            *,
            key: typing.Text = ...,
            value: typing.Text = ...,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["key",b"key","value",b"value"]) -> None: ...

    NAME_FIELD_NUMBER: builtins.int
    DESCRIPTION_FIELD_NUMBER: builtins.int
    LABELS_FIELD_NUMBER: builtins.int
    name: typing.Text
    """Name of the target group."""

    description: typing.Text
    """Description of the target group."""

    @property
    def labels(self) -> google.protobuf.internal.containers.ScalarMap[typing.Text, typing.Text]:
        """Resource labels as `key:value` pairs."""
        pass
    def __init__(self,
        *,
        name: typing.Text = ...,
        description: typing.Text = ...,
        labels: typing.Optional[typing.Mapping[typing.Text, typing.Text]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["description",b"description","labels",b"labels","name",b"name"]) -> None: ...
global___TargetGroupSpec = TargetGroupSpec

class ApplicationLoadBalancerSpec(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    TARGET_GROUP_SPEC_FIELD_NUMBER: builtins.int
    MAX_OPENING_TRAFFIC_DURATION_FIELD_NUMBER: builtins.int
    @property
    def target_group_spec(self) -> global___ApplicationTargetGroupSpec:
        """Basic properties of the Application Load Balancer target group attributed to the instance group."""
        pass
    @property
    def max_opening_traffic_duration(self) -> google.protobuf.duration_pb2.Duration:
        """Timeout for waiting for the VM to be checked by the load balancer. If the timeout is exceeded,
        the VM will be turned off based on the deployment policy. Specified in seconds.
        """
        pass
    def __init__(self,
        *,
        target_group_spec: typing.Optional[global___ApplicationTargetGroupSpec] = ...,
        max_opening_traffic_duration: typing.Optional[google.protobuf.duration_pb2.Duration] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["max_opening_traffic_duration",b"max_opening_traffic_duration","target_group_spec",b"target_group_spec"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["max_opening_traffic_duration",b"max_opening_traffic_duration","target_group_spec",b"target_group_spec"]) -> None: ...
global___ApplicationLoadBalancerSpec = ApplicationLoadBalancerSpec

class ApplicationTargetGroupSpec(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    class LabelsEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor
        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: typing.Text
        value: typing.Text
        def __init__(self,
            *,
            key: typing.Text = ...,
            value: typing.Text = ...,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["key",b"key","value",b"value"]) -> None: ...

    NAME_FIELD_NUMBER: builtins.int
    DESCRIPTION_FIELD_NUMBER: builtins.int
    LABELS_FIELD_NUMBER: builtins.int
    name: typing.Text
    """Name of the target group."""

    description: typing.Text
    """Description of the target group."""

    @property
    def labels(self) -> google.protobuf.internal.containers.ScalarMap[typing.Text, typing.Text]:
        """Resource labels as `key:value` pairs."""
        pass
    def __init__(self,
        *,
        name: typing.Text = ...,
        description: typing.Text = ...,
        labels: typing.Optional[typing.Mapping[typing.Text, typing.Text]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["description",b"description","labels",b"labels","name",b"name"]) -> None: ...
global___ApplicationTargetGroupSpec = ApplicationTargetGroupSpec

class HealthChecksSpec(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    HEALTH_CHECK_SPECS_FIELD_NUMBER: builtins.int
    MAX_CHECKING_HEALTH_DURATION_FIELD_NUMBER: builtins.int
    @property
    def health_check_specs(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___HealthCheckSpec]:
        """Health checking specification. For more information, see [Health check](/docs/load-balancer/concepts/health-check)."""
        pass
    @property
    def max_checking_health_duration(self) -> google.protobuf.duration_pb2.Duration:
        """Timeout for waiting for the VM to become healthy. If the timeout is exceeded,
        the VM will be turned off based on the deployment policy. Specified in seconds.
        """
        pass
    def __init__(self,
        *,
        health_check_specs: typing.Optional[typing.Iterable[global___HealthCheckSpec]] = ...,
        max_checking_health_duration: typing.Optional[google.protobuf.duration_pb2.Duration] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["max_checking_health_duration",b"max_checking_health_duration"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["health_check_specs",b"health_check_specs","max_checking_health_duration",b"max_checking_health_duration"]) -> None: ...
global___HealthChecksSpec = HealthChecksSpec

class HealthCheckSpec(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    class TcpOptions(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor
        PORT_FIELD_NUMBER: builtins.int
        port: builtins.int
        """Port to use for TCP health checks."""

        def __init__(self,
            *,
            port: builtins.int = ...,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["port",b"port"]) -> None: ...

    class HttpOptions(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor
        PORT_FIELD_NUMBER: builtins.int
        PATH_FIELD_NUMBER: builtins.int
        port: builtins.int
        """Port to use for HTTP health checks."""

        path: typing.Text
        """URL path to set for health checking requests."""

        def __init__(self,
            *,
            port: builtins.int = ...,
            path: typing.Text = ...,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["path",b"path","port",b"port"]) -> None: ...

    INTERVAL_FIELD_NUMBER: builtins.int
    TIMEOUT_FIELD_NUMBER: builtins.int
    UNHEALTHY_THRESHOLD_FIELD_NUMBER: builtins.int
    HEALTHY_THRESHOLD_FIELD_NUMBER: builtins.int
    TCP_OPTIONS_FIELD_NUMBER: builtins.int
    HTTP_OPTIONS_FIELD_NUMBER: builtins.int
    @property
    def interval(self) -> google.protobuf.duration_pb2.Duration:
        """The interval between health checks. The default is 2 seconds."""
        pass
    @property
    def timeout(self) -> google.protobuf.duration_pb2.Duration:
        """Timeout for the managed instance to return a response for the health check. The default is 1 second."""
        pass
    unhealthy_threshold: builtins.int
    """The number of failed health checks for the managed instance to be considered unhealthy. The default (0) is 2."""

    healthy_threshold: builtins.int
    """The number of successful health checks required in order for the managed instance to be considered healthy. The default (0) is 2."""

    @property
    def tcp_options(self) -> global___HealthCheckSpec.TcpOptions:
        """Configuration options for a TCP health check."""
        pass
    @property
    def http_options(self) -> global___HealthCheckSpec.HttpOptions:
        """Configuration options for an HTTP health check."""
        pass
    def __init__(self,
        *,
        interval: typing.Optional[google.protobuf.duration_pb2.Duration] = ...,
        timeout: typing.Optional[google.protobuf.duration_pb2.Duration] = ...,
        unhealthy_threshold: builtins.int = ...,
        healthy_threshold: builtins.int = ...,
        tcp_options: typing.Optional[global___HealthCheckSpec.TcpOptions] = ...,
        http_options: typing.Optional[global___HealthCheckSpec.HttpOptions] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["health_check_options",b"health_check_options","http_options",b"http_options","interval",b"interval","tcp_options",b"tcp_options","timeout",b"timeout"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["health_check_options",b"health_check_options","healthy_threshold",b"healthy_threshold","http_options",b"http_options","interval",b"interval","tcp_options",b"tcp_options","timeout",b"timeout","unhealthy_threshold",b"unhealthy_threshold"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["health_check_options",b"health_check_options"]) -> typing.Optional[typing_extensions.Literal["tcp_options","http_options"]]: ...
global___HealthCheckSpec = HealthCheckSpec

class ManagedInstance(google.protobuf.message.Message):
    """A ManagedInstance resource. For more information, see [Instance Groups Concepts](/docs/compute/concepts/instance-groups/)."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    class _Status:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _StatusEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[ManagedInstance._Status.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
        STATUS_UNSPECIFIED: ManagedInstance._Status.ValueType  # 0
        CREATING_INSTANCE: ManagedInstance._Status.ValueType  # 11
        """Instance is being created."""

        UPDATING_INSTANCE: ManagedInstance._Status.ValueType  # 12
        """Instance is being updated."""

        DELETING_INSTANCE: ManagedInstance._Status.ValueType  # 13
        """Instance is being deleted."""

        STARTING_INSTANCE: ManagedInstance._Status.ValueType  # 14
        """Instance is being started."""

        STOPPING_INSTANCE: ManagedInstance._Status.ValueType  # 15
        """Instance is being stopped."""

        AWAITING_STARTUP_DURATION: ManagedInstance._Status.ValueType  # 16
        """Instance has been created successfully, but startup duration has not elapsed yet."""

        CHECKING_HEALTH: ManagedInstance._Status.ValueType  # 17
        """Instance has been created successfully and startup duration has elapsed, but health checks have not passed yet and the managed instance is not ready to receive traffic."""

        OPENING_TRAFFIC: ManagedInstance._Status.ValueType  # 18
        """Instance Groups is initiating health checks and routing traffic to the instances."""

        AWAITING_WARMUP_DURATION: ManagedInstance._Status.ValueType  # 19
        """Instance is now receiving traffic, but warmup duration has not elapsed yet."""

        CLOSING_TRAFFIC: ManagedInstance._Status.ValueType  # 20
        """Instance Groups has initiated the process of stopping routing traffic to the instances."""

        RUNNING_ACTUAL: ManagedInstance._Status.ValueType  # 21
        """Instance is running normally and its attributes match the current InstanceTemplate."""

        RUNNING_OUTDATED: ManagedInstance._Status.ValueType  # 22
        """Instance is running normally, but its attributes do not match the current InstanceTemplate.
        It will be updated, recreated or deleted shortly.
        """

        STOPPED: ManagedInstance._Status.ValueType  # 23
        """Instance was stopped."""

        DELETED: ManagedInstance._Status.ValueType  # 24
        """Instance was deleted."""

        PREPARING_RESOURCES: ManagedInstance._Status.ValueType  # 25
        """Instance Groups is preparing dependent resources."""

    class Status(_Status, metaclass=_StatusEnumTypeWrapper):
        pass

    STATUS_UNSPECIFIED: ManagedInstance.Status.ValueType  # 0
    CREATING_INSTANCE: ManagedInstance.Status.ValueType  # 11
    """Instance is being created."""

    UPDATING_INSTANCE: ManagedInstance.Status.ValueType  # 12
    """Instance is being updated."""

    DELETING_INSTANCE: ManagedInstance.Status.ValueType  # 13
    """Instance is being deleted."""

    STARTING_INSTANCE: ManagedInstance.Status.ValueType  # 14
    """Instance is being started."""

    STOPPING_INSTANCE: ManagedInstance.Status.ValueType  # 15
    """Instance is being stopped."""

    AWAITING_STARTUP_DURATION: ManagedInstance.Status.ValueType  # 16
    """Instance has been created successfully, but startup duration has not elapsed yet."""

    CHECKING_HEALTH: ManagedInstance.Status.ValueType  # 17
    """Instance has been created successfully and startup duration has elapsed, but health checks have not passed yet and the managed instance is not ready to receive traffic."""

    OPENING_TRAFFIC: ManagedInstance.Status.ValueType  # 18
    """Instance Groups is initiating health checks and routing traffic to the instances."""

    AWAITING_WARMUP_DURATION: ManagedInstance.Status.ValueType  # 19
    """Instance is now receiving traffic, but warmup duration has not elapsed yet."""

    CLOSING_TRAFFIC: ManagedInstance.Status.ValueType  # 20
    """Instance Groups has initiated the process of stopping routing traffic to the instances."""

    RUNNING_ACTUAL: ManagedInstance.Status.ValueType  # 21
    """Instance is running normally and its attributes match the current InstanceTemplate."""

    RUNNING_OUTDATED: ManagedInstance.Status.ValueType  # 22
    """Instance is running normally, but its attributes do not match the current InstanceTemplate.
    It will be updated, recreated or deleted shortly.
    """

    STOPPED: ManagedInstance.Status.ValueType  # 23
    """Instance was stopped."""

    DELETED: ManagedInstance.Status.ValueType  # 24
    """Instance was deleted."""

    PREPARING_RESOURCES: ManagedInstance.Status.ValueType  # 25
    """Instance Groups is preparing dependent resources."""


    ID_FIELD_NUMBER: builtins.int
    STATUS_FIELD_NUMBER: builtins.int
    INSTANCE_ID_FIELD_NUMBER: builtins.int
    FQDN_FIELD_NUMBER: builtins.int
    NAME_FIELD_NUMBER: builtins.int
    STATUS_MESSAGE_FIELD_NUMBER: builtins.int
    ZONE_ID_FIELD_NUMBER: builtins.int
    NETWORK_INTERFACES_FIELD_NUMBER: builtins.int
    STATUS_CHANGED_AT_FIELD_NUMBER: builtins.int
    id: typing.Text
    """ID of the managed instance."""

    status: global___ManagedInstance.Status.ValueType
    """Status of the managed instance."""

    instance_id: typing.Text
    """ID of the instance."""

    fqdn: typing.Text
    """Fully Qualified Domain Name."""

    name: typing.Text
    """The name of the managed instance."""

    status_message: typing.Text
    """Status message for the managed instance."""

    zone_id: typing.Text
    """ID of the availability zone where the instance resides."""

    @property
    def network_interfaces(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___NetworkInterface]:
        """Array of network interfaces that are attached to the managed instance."""
        pass
    @property
    def status_changed_at(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """The timestamp in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) text format when the status of the managed instance was last changed."""
        pass
    def __init__(self,
        *,
        id: typing.Text = ...,
        status: global___ManagedInstance.Status.ValueType = ...,
        instance_id: typing.Text = ...,
        fqdn: typing.Text = ...,
        name: typing.Text = ...,
        status_message: typing.Text = ...,
        zone_id: typing.Text = ...,
        network_interfaces: typing.Optional[typing.Iterable[global___NetworkInterface]] = ...,
        status_changed_at: typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["status_changed_at",b"status_changed_at"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["fqdn",b"fqdn","id",b"id","instance_id",b"instance_id","name",b"name","network_interfaces",b"network_interfaces","status",b"status","status_changed_at",b"status_changed_at","status_message",b"status_message","zone_id",b"zone_id"]) -> None: ...
global___ManagedInstance = ManagedInstance

class NetworkInterface(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    INDEX_FIELD_NUMBER: builtins.int
    MAC_ADDRESS_FIELD_NUMBER: builtins.int
    SUBNET_ID_FIELD_NUMBER: builtins.int
    PRIMARY_V4_ADDRESS_FIELD_NUMBER: builtins.int
    PRIMARY_V6_ADDRESS_FIELD_NUMBER: builtins.int
    index: typing.Text
    """The index of the network interface, generated by the server, 0,1,2... etc.
    Currently only one network interface is supported per instance.
    """

    mac_address: typing.Text
    """MAC address that is assigned to the network interface."""

    subnet_id: typing.Text
    """ID of the subnet."""

    @property
    def primary_v4_address(self) -> global___PrimaryAddress:
        """Primary IPv4 address that is assigned to the instance for this network interface."""
        pass
    @property
    def primary_v6_address(self) -> global___PrimaryAddress:
        """Primary IPv6 address that is assigned to the instance for this network interface. IPv6 is not available yet."""
        pass
    def __init__(self,
        *,
        index: typing.Text = ...,
        mac_address: typing.Text = ...,
        subnet_id: typing.Text = ...,
        primary_v4_address: typing.Optional[global___PrimaryAddress] = ...,
        primary_v6_address: typing.Optional[global___PrimaryAddress] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["primary_v4_address",b"primary_v4_address","primary_v6_address",b"primary_v6_address"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["index",b"index","mac_address",b"mac_address","primary_v4_address",b"primary_v4_address","primary_v6_address",b"primary_v6_address","subnet_id",b"subnet_id"]) -> None: ...
global___NetworkInterface = NetworkInterface

class PrimaryAddress(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    ADDRESS_FIELD_NUMBER: builtins.int
    ONE_TO_ONE_NAT_FIELD_NUMBER: builtins.int
    DNS_RECORDS_FIELD_NUMBER: builtins.int
    address: typing.Text
    """An IPv4 internal network address that is assigned to the managed instance for this network interface.
    If not specified by the user, an unused internal IP is assigned by the system.
    """

    @property
    def one_to_one_nat(self) -> global___OneToOneNat:
        """One-to-one NAT configuration. If missing, NAT has not been set up."""
        pass
    @property
    def dns_records(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___DnsRecord]:
        """Internal DNS configuration."""
        pass
    def __init__(self,
        *,
        address: typing.Text = ...,
        one_to_one_nat: typing.Optional[global___OneToOneNat] = ...,
        dns_records: typing.Optional[typing.Iterable[global___DnsRecord]] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["one_to_one_nat",b"one_to_one_nat"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["address",b"address","dns_records",b"dns_records","one_to_one_nat",b"one_to_one_nat"]) -> None: ...
global___PrimaryAddress = PrimaryAddress

class OneToOneNat(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    ADDRESS_FIELD_NUMBER: builtins.int
    IP_VERSION_FIELD_NUMBER: builtins.int
    DNS_RECORDS_FIELD_NUMBER: builtins.int
    address: typing.Text
    """An IPv4 external network address that is assigned to the managed instance for this network interface."""

    ip_version: global___IpVersion.ValueType
    """External IP address version."""

    @property
    def dns_records(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___DnsRecord]:
        """External DNS configuration."""
        pass
    def __init__(self,
        *,
        address: typing.Text = ...,
        ip_version: global___IpVersion.ValueType = ...,
        dns_records: typing.Optional[typing.Iterable[global___DnsRecord]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["address",b"address","dns_records",b"dns_records","ip_version",b"ip_version"]) -> None: ...
global___OneToOneNat = OneToOneNat

class DnsRecord(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    FQDN_FIELD_NUMBER: builtins.int
    DNS_ZONE_ID_FIELD_NUMBER: builtins.int
    TTL_FIELD_NUMBER: builtins.int
    PTR_FIELD_NUMBER: builtins.int
    fqdn: typing.Text
    """Name of the A/AAAA record as specified when creating the instance.
    Note that if `fqdn' has no trailing '.', it is specified relative to the zone (@see dns_zone_id).
    """

    dns_zone_id: typing.Text
    """DNS zone id (optional, if not set, some private zone is used)."""

    ttl: builtins.int
    """DNS record ttl (optional, if 0, a reasonable default is used)."""

    ptr: builtins.bool
    """When true, indicates there is a corresponding auto-created PTR DNS record."""

    def __init__(self,
        *,
        fqdn: typing.Text = ...,
        dns_zone_id: typing.Text = ...,
        ttl: builtins.int = ...,
        ptr: builtins.bool = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["dns_zone_id",b"dns_zone_id","fqdn",b"fqdn","ptr",b"ptr","ttl",b"ttl"]) -> None: ...
global___DnsRecord = DnsRecord

class LogRecord(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    TIMESTAMP_FIELD_NUMBER: builtins.int
    MESSAGE_FIELD_NUMBER: builtins.int
    @property
    def timestamp(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """Log timestamp in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) text format."""
        pass
    message: typing.Text
    """The log message."""

    def __init__(self,
        *,
        timestamp: typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        message: typing.Text = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["timestamp",b"timestamp"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["message",b"message","timestamp",b"timestamp"]) -> None: ...
global___LogRecord = LogRecord
