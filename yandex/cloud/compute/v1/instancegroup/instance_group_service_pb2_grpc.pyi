"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import abc
import grpc
import yandex.cloud.access.access_pb2
import yandex.cloud.compute.v1.instancegroup.instance_group_pb2
import yandex.cloud.compute.v1.instancegroup.instance_group_service_pb2
import yandex.cloud.operation.operation_pb2

class InstanceGroupServiceStub:
    """A set of methods for managing InstanceGroup resources."""

    def __init__(self, channel: grpc.Channel) -> None: ...
    Get: grpc.UnaryUnaryMultiCallable[
        yandex.cloud.compute.v1.instancegroup.instance_group_service_pb2.GetInstanceGroupRequest,
        yandex.cloud.compute.v1.instancegroup.instance_group_pb2.InstanceGroup,
    ]
    """Returns the specified InstanceGroup resource.

    To get the list of available InstanceGroup resources, make a [List] request.
    """
    List: grpc.UnaryUnaryMultiCallable[
        yandex.cloud.compute.v1.instancegroup.instance_group_service_pb2.ListInstanceGroupsRequest,
        yandex.cloud.compute.v1.instancegroup.instance_group_service_pb2.ListInstanceGroupsResponse,
    ]
    """Retrieves the list of InstanceGroup resources in the specified folder."""
    Create: grpc.UnaryUnaryMultiCallable[
        yandex.cloud.compute.v1.instancegroup.instance_group_service_pb2.CreateInstanceGroupRequest,
        yandex.cloud.operation.operation_pb2.Operation,
    ]
    """Creates an instance group in the specified folder.
    This method starts an operation that can be cancelled by another operation.
    """
    CreateFromYaml: grpc.UnaryUnaryMultiCallable[
        yandex.cloud.compute.v1.instancegroup.instance_group_service_pb2.CreateInstanceGroupFromYamlRequest,
        yandex.cloud.operation.operation_pb2.Operation,
    ]
    """Creates an instance group in the specified folder from a YAML file.
    This method starts an operation that can be cancelled by another operation.
    """
    Update: grpc.UnaryUnaryMultiCallable[
        yandex.cloud.compute.v1.instancegroup.instance_group_service_pb2.UpdateInstanceGroupRequest,
        yandex.cloud.operation.operation_pb2.Operation,
    ]
    """Updates the specified instance group.
    This method starts an operation that can be cancelled by another operation.
    """
    UpdateFromYaml: grpc.UnaryUnaryMultiCallable[
        yandex.cloud.compute.v1.instancegroup.instance_group_service_pb2.UpdateInstanceGroupFromYamlRequest,
        yandex.cloud.operation.operation_pb2.Operation,
    ]
    """Updates the specified instance group from a YAML file.
    This method starts an operation that can be cancelled by another operation.
    """
    Stop: grpc.UnaryUnaryMultiCallable[
        yandex.cloud.compute.v1.instancegroup.instance_group_service_pb2.StopInstanceGroupRequest,
        yandex.cloud.operation.operation_pb2.Operation,
    ]
    """Stops the specified instance group."""
    Start: grpc.UnaryUnaryMultiCallable[
        yandex.cloud.compute.v1.instancegroup.instance_group_service_pb2.StartInstanceGroupRequest,
        yandex.cloud.operation.operation_pb2.Operation,
    ]
    """Starts the specified instance group."""
    Delete: grpc.UnaryUnaryMultiCallable[
        yandex.cloud.compute.v1.instancegroup.instance_group_service_pb2.DeleteInstanceGroupRequest,
        yandex.cloud.operation.operation_pb2.Operation,
    ]
    """Deletes the specified instance group."""
    ListInstances: grpc.UnaryUnaryMultiCallable[
        yandex.cloud.compute.v1.instancegroup.instance_group_service_pb2.ListInstanceGroupInstancesRequest,
        yandex.cloud.compute.v1.instancegroup.instance_group_service_pb2.ListInstanceGroupInstancesResponse,
    ]
    """Lists instances for the specified instance group."""
    DeleteInstances: grpc.UnaryUnaryMultiCallable[
        yandex.cloud.compute.v1.instancegroup.instance_group_service_pb2.DeleteInstancesRequest,
        yandex.cloud.operation.operation_pb2.Operation,
    ]
    """Delete instances from the instance group."""
    StopInstances: grpc.UnaryUnaryMultiCallable[
        yandex.cloud.compute.v1.instancegroup.instance_group_service_pb2.StopInstancesRequest,
        yandex.cloud.operation.operation_pb2.Operation,
    ]
    """Stop instances from the instance group."""
    ListOperations: grpc.UnaryUnaryMultiCallable[
        yandex.cloud.compute.v1.instancegroup.instance_group_service_pb2.ListInstanceGroupOperationsRequest,
        yandex.cloud.compute.v1.instancegroup.instance_group_service_pb2.ListInstanceGroupOperationsResponse,
    ]
    """Lists operations for the specified instance group."""
    ListLogRecords: grpc.UnaryUnaryMultiCallable[
        yandex.cloud.compute.v1.instancegroup.instance_group_service_pb2.ListInstanceGroupLogRecordsRequest,
        yandex.cloud.compute.v1.instancegroup.instance_group_service_pb2.ListInstanceGroupLogRecordsResponse,
    ]
    """Lists logs for the specified instance group."""
    ListAccessBindings: grpc.UnaryUnaryMultiCallable[
        yandex.cloud.access.access_pb2.ListAccessBindingsRequest,
        yandex.cloud.access.access_pb2.ListAccessBindingsResponse,
    ]
    """Lists existing access bindings for the specified instance group."""
    SetAccessBindings: grpc.UnaryUnaryMultiCallable[
        yandex.cloud.access.access_pb2.SetAccessBindingsRequest,
        yandex.cloud.operation.operation_pb2.Operation,
    ]
    """Sets access bindings for the specified instance group."""
    UpdateAccessBindings: grpc.UnaryUnaryMultiCallable[
        yandex.cloud.access.access_pb2.UpdateAccessBindingsRequest,
        yandex.cloud.operation.operation_pb2.Operation,
    ]
    """Updates access bindings for the specified instance group."""
    ResumeProcesses: grpc.UnaryUnaryMultiCallable[
        yandex.cloud.compute.v1.instancegroup.instance_group_service_pb2.ResumeInstanceGroupProcessesRequest,
        yandex.cloud.operation.operation_pb2.Operation,
    ]
    """Resumes all processes regarding management of the specified instance group,
    i.e. scaling, checking instances' health, auto-healing and updating them.
    """
    PauseProcesses: grpc.UnaryUnaryMultiCallable[
        yandex.cloud.compute.v1.instancegroup.instance_group_service_pb2.PauseInstanceGroupProcessesRequest,
        yandex.cloud.operation.operation_pb2.Operation,
    ]
    """Pauses all processes regarding management of the specified instance group,
    i.e. scaling, checking instances' health, auto-healing and updating them. Running instances are not stopped.
    """

class InstanceGroupServiceServicer(metaclass=abc.ABCMeta):
    """A set of methods for managing InstanceGroup resources."""

    @abc.abstractmethod
    def Get(
        self,
        request: yandex.cloud.compute.v1.instancegroup.instance_group_service_pb2.GetInstanceGroupRequest,
        context: grpc.ServicerContext,
    ) -> yandex.cloud.compute.v1.instancegroup.instance_group_pb2.InstanceGroup:
        """Returns the specified InstanceGroup resource.

        To get the list of available InstanceGroup resources, make a [List] request.
        """
    @abc.abstractmethod
    def List(
        self,
        request: yandex.cloud.compute.v1.instancegroup.instance_group_service_pb2.ListInstanceGroupsRequest,
        context: grpc.ServicerContext,
    ) -> yandex.cloud.compute.v1.instancegroup.instance_group_service_pb2.ListInstanceGroupsResponse:
        """Retrieves the list of InstanceGroup resources in the specified folder."""
    @abc.abstractmethod
    def Create(
        self,
        request: yandex.cloud.compute.v1.instancegroup.instance_group_service_pb2.CreateInstanceGroupRequest,
        context: grpc.ServicerContext,
    ) -> yandex.cloud.operation.operation_pb2.Operation:
        """Creates an instance group in the specified folder.
        This method starts an operation that can be cancelled by another operation.
        """
    @abc.abstractmethod
    def CreateFromYaml(
        self,
        request: yandex.cloud.compute.v1.instancegroup.instance_group_service_pb2.CreateInstanceGroupFromYamlRequest,
        context: grpc.ServicerContext,
    ) -> yandex.cloud.operation.operation_pb2.Operation:
        """Creates an instance group in the specified folder from a YAML file.
        This method starts an operation that can be cancelled by another operation.
        """
    @abc.abstractmethod
    def Update(
        self,
        request: yandex.cloud.compute.v1.instancegroup.instance_group_service_pb2.UpdateInstanceGroupRequest,
        context: grpc.ServicerContext,
    ) -> yandex.cloud.operation.operation_pb2.Operation:
        """Updates the specified instance group.
        This method starts an operation that can be cancelled by another operation.
        """
    @abc.abstractmethod
    def UpdateFromYaml(
        self,
        request: yandex.cloud.compute.v1.instancegroup.instance_group_service_pb2.UpdateInstanceGroupFromYamlRequest,
        context: grpc.ServicerContext,
    ) -> yandex.cloud.operation.operation_pb2.Operation:
        """Updates the specified instance group from a YAML file.
        This method starts an operation that can be cancelled by another operation.
        """
    @abc.abstractmethod
    def Stop(
        self,
        request: yandex.cloud.compute.v1.instancegroup.instance_group_service_pb2.StopInstanceGroupRequest,
        context: grpc.ServicerContext,
    ) -> yandex.cloud.operation.operation_pb2.Operation:
        """Stops the specified instance group."""
    @abc.abstractmethod
    def Start(
        self,
        request: yandex.cloud.compute.v1.instancegroup.instance_group_service_pb2.StartInstanceGroupRequest,
        context: grpc.ServicerContext,
    ) -> yandex.cloud.operation.operation_pb2.Operation:
        """Starts the specified instance group."""
    @abc.abstractmethod
    def Delete(
        self,
        request: yandex.cloud.compute.v1.instancegroup.instance_group_service_pb2.DeleteInstanceGroupRequest,
        context: grpc.ServicerContext,
    ) -> yandex.cloud.operation.operation_pb2.Operation:
        """Deletes the specified instance group."""
    @abc.abstractmethod
    def ListInstances(
        self,
        request: yandex.cloud.compute.v1.instancegroup.instance_group_service_pb2.ListInstanceGroupInstancesRequest,
        context: grpc.ServicerContext,
    ) -> yandex.cloud.compute.v1.instancegroup.instance_group_service_pb2.ListInstanceGroupInstancesResponse:
        """Lists instances for the specified instance group."""
    @abc.abstractmethod
    def DeleteInstances(
        self,
        request: yandex.cloud.compute.v1.instancegroup.instance_group_service_pb2.DeleteInstancesRequest,
        context: grpc.ServicerContext,
    ) -> yandex.cloud.operation.operation_pb2.Operation:
        """Delete instances from the instance group."""
    @abc.abstractmethod
    def StopInstances(
        self,
        request: yandex.cloud.compute.v1.instancegroup.instance_group_service_pb2.StopInstancesRequest,
        context: grpc.ServicerContext,
    ) -> yandex.cloud.operation.operation_pb2.Operation:
        """Stop instances from the instance group."""
    @abc.abstractmethod
    def ListOperations(
        self,
        request: yandex.cloud.compute.v1.instancegroup.instance_group_service_pb2.ListInstanceGroupOperationsRequest,
        context: grpc.ServicerContext,
    ) -> yandex.cloud.compute.v1.instancegroup.instance_group_service_pb2.ListInstanceGroupOperationsResponse:
        """Lists operations for the specified instance group."""
    @abc.abstractmethod
    def ListLogRecords(
        self,
        request: yandex.cloud.compute.v1.instancegroup.instance_group_service_pb2.ListInstanceGroupLogRecordsRequest,
        context: grpc.ServicerContext,
    ) -> yandex.cloud.compute.v1.instancegroup.instance_group_service_pb2.ListInstanceGroupLogRecordsResponse:
        """Lists logs for the specified instance group."""
    @abc.abstractmethod
    def ListAccessBindings(
        self,
        request: yandex.cloud.access.access_pb2.ListAccessBindingsRequest,
        context: grpc.ServicerContext,
    ) -> yandex.cloud.access.access_pb2.ListAccessBindingsResponse:
        """Lists existing access bindings for the specified instance group."""
    @abc.abstractmethod
    def SetAccessBindings(
        self,
        request: yandex.cloud.access.access_pb2.SetAccessBindingsRequest,
        context: grpc.ServicerContext,
    ) -> yandex.cloud.operation.operation_pb2.Operation:
        """Sets access bindings for the specified instance group."""
    @abc.abstractmethod
    def UpdateAccessBindings(
        self,
        request: yandex.cloud.access.access_pb2.UpdateAccessBindingsRequest,
        context: grpc.ServicerContext,
    ) -> yandex.cloud.operation.operation_pb2.Operation:
        """Updates access bindings for the specified instance group."""
    @abc.abstractmethod
    def ResumeProcesses(
        self,
        request: yandex.cloud.compute.v1.instancegroup.instance_group_service_pb2.ResumeInstanceGroupProcessesRequest,
        context: grpc.ServicerContext,
    ) -> yandex.cloud.operation.operation_pb2.Operation:
        """Resumes all processes regarding management of the specified instance group,
        i.e. scaling, checking instances' health, auto-healing and updating them.
        """
    @abc.abstractmethod
    def PauseProcesses(
        self,
        request: yandex.cloud.compute.v1.instancegroup.instance_group_service_pb2.PauseInstanceGroupProcessesRequest,
        context: grpc.ServicerContext,
    ) -> yandex.cloud.operation.operation_pb2.Operation:
        """Pauses all processes regarding management of the specified instance group,
        i.e. scaling, checking instances' health, auto-healing and updating them. Running instances are not stopped.
        """

def add_InstanceGroupServiceServicer_to_server(servicer: InstanceGroupServiceServicer, server: grpc.Server) -> None: ...
