"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.internal.enum_type_wrapper
import google.protobuf.message
import google.protobuf.timestamp_pb2
import typing
import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

class Image(google.protobuf.message.Message):
    """An Image resource."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    class _Status:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _StatusEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[Image._Status.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
        STATUS_UNSPECIFIED: Image._Status.ValueType  # 0
        CREATING: Image._Status.ValueType  # 1
        """Image is being created."""

        READY: Image._Status.ValueType  # 2
        """Image is ready to use."""

        ERROR: Image._Status.ValueType  # 3
        """Image encountered a problem and cannot operate."""

        DELETING: Image._Status.ValueType  # 4
        """Image is being deleted."""

    class Status(_Status, metaclass=_StatusEnumTypeWrapper):
        pass

    STATUS_UNSPECIFIED: Image.Status.ValueType  # 0
    CREATING: Image.Status.ValueType  # 1
    """Image is being created."""

    READY: Image.Status.ValueType  # 2
    """Image is ready to use."""

    ERROR: Image.Status.ValueType  # 3
    """Image encountered a problem and cannot operate."""

    DELETING: Image.Status.ValueType  # 4
    """Image is being deleted."""


    class LabelsEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor
        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: typing.Text
        value: typing.Text
        def __init__(self,
            *,
            key: typing.Text = ...,
            value: typing.Text = ...,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["key",b"key","value",b"value"]) -> None: ...

    ID_FIELD_NUMBER: builtins.int
    FOLDER_ID_FIELD_NUMBER: builtins.int
    CREATED_AT_FIELD_NUMBER: builtins.int
    NAME_FIELD_NUMBER: builtins.int
    DESCRIPTION_FIELD_NUMBER: builtins.int
    LABELS_FIELD_NUMBER: builtins.int
    FAMILY_FIELD_NUMBER: builtins.int
    STORAGE_SIZE_FIELD_NUMBER: builtins.int
    MIN_DISK_SIZE_FIELD_NUMBER: builtins.int
    PRODUCT_IDS_FIELD_NUMBER: builtins.int
    STATUS_FIELD_NUMBER: builtins.int
    OS_FIELD_NUMBER: builtins.int
    POOLED_FIELD_NUMBER: builtins.int
    id: typing.Text
    """ID of the image."""

    folder_id: typing.Text
    """ID of the folder that the image belongs to."""

    @property
    def created_at(self) -> google.protobuf.timestamp_pb2.Timestamp: ...
    name: typing.Text
    """Name of the image. 1-63 characters long."""

    description: typing.Text
    """Description of the image. 0-256 characters long."""

    @property
    def labels(self) -> google.protobuf.internal.containers.ScalarMap[typing.Text, typing.Text]:
        """Resource labels as `key:value` pairs. Maximum of 64 per resource."""
        pass
    family: typing.Text
    """The name of the image family to which this image belongs.

    You can get the most recent image from a family by using
    the [yandex.cloud.compute.v1.ImageService.GetLatestByFamily] request
    and create the disk from this image.
    """

    storage_size: builtins.int
    """The size of the image, specified in bytes."""

    min_disk_size: builtins.int
    """Minimum size of the disk which will be created from this image."""

    @property
    def product_ids(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """License IDs that indicate which licenses are attached to this resource.
        License IDs are used to calculate additional charges for the use of the virtual machine.

        The correct license ID is generated by Yandex Cloud. IDs are inherited by new resources created from this resource.

        If you know the license IDs, specify them when you create the image.
        For example, if you create a disk image using a third-party utility and load it into Yandex Object Storage, the license IDs will be lost.
        You can specify them in the [yandex.cloud.compute.v1.ImageService.Create] request.
        """
        pass
    status: global___Image.Status.ValueType
    """Current status of the image."""

    @property
    def os(self) -> global___Os:
        """Operating system that is contained in the image."""
        pass
    pooled: builtins.bool
    """When true, indicates there is an image pool for fast creation disks from the image."""

    def __init__(self,
        *,
        id: typing.Text = ...,
        folder_id: typing.Text = ...,
        created_at: typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        name: typing.Text = ...,
        description: typing.Text = ...,
        labels: typing.Optional[typing.Mapping[typing.Text, typing.Text]] = ...,
        family: typing.Text = ...,
        storage_size: builtins.int = ...,
        min_disk_size: builtins.int = ...,
        product_ids: typing.Optional[typing.Iterable[typing.Text]] = ...,
        status: global___Image.Status.ValueType = ...,
        os: typing.Optional[global___Os] = ...,
        pooled: builtins.bool = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["created_at",b"created_at","os",b"os"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["created_at",b"created_at","description",b"description","family",b"family","folder_id",b"folder_id","id",b"id","labels",b"labels","min_disk_size",b"min_disk_size","name",b"name","os",b"os","pooled",b"pooled","product_ids",b"product_ids","status",b"status","storage_size",b"storage_size"]) -> None: ...
global___Image = Image

class Os(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    class _Type:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _TypeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[Os._Type.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
        TYPE_UNSPECIFIED: Os._Type.ValueType  # 0
        LINUX: Os._Type.ValueType  # 1
        """Linux operating system."""

        WINDOWS: Os._Type.ValueType  # 2
        """Windows operating system."""

    class Type(_Type, metaclass=_TypeEnumTypeWrapper):
        pass

    TYPE_UNSPECIFIED: Os.Type.ValueType  # 0
    LINUX: Os.Type.ValueType  # 1
    """Linux operating system."""

    WINDOWS: Os.Type.ValueType  # 2
    """Windows operating system."""


    TYPE_FIELD_NUMBER: builtins.int
    type: global___Os.Type.ValueType
    """Operating system type. The default is `LINUX`.

    This field is used to correctly emulate a vCPU and calculate the cost of using an instance.
    """

    def __init__(self,
        *,
        type: global___Os.Type.ValueType = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["type",b"type"]) -> None: ...
global___Os = Os
