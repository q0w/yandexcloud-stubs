"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.message
import typing
import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

class ClassAnnotation(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    PROPERTIES_FIELD_NUMBER: builtins.int
    @property
    def properties(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Property]:
        """Properties extracted by a specified model.

        For example, if you ask to evaluate the image quality,
        the service could return such properties as `good` and `bad`.
        """
        pass
    def __init__(self,
        *,
        properties: typing.Optional[typing.Iterable[global___Property]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["properties",b"properties"]) -> None: ...
global___ClassAnnotation = ClassAnnotation

class Property(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    NAME_FIELD_NUMBER: builtins.int
    PROBABILITY_FIELD_NUMBER: builtins.int
    name: typing.Text
    """Property name."""

    probability: builtins.float
    """Probability of the property, from 0 to 1."""

    def __init__(self,
        *,
        name: typing.Text = ...,
        probability: builtins.float = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["name",b"name","probability",b"probability"]) -> None: ...
global___Property = Property
