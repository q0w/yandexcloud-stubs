"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.internal.enum_type_wrapper
import google.protobuf.message
import typing
import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

class _CodeType:
    ValueType = typing.NewType('ValueType', builtins.int)
    V: typing_extensions.TypeAlias = ValueType
class _CodeTypeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_CodeType.ValueType], builtins.type):
    DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
    CODE_TYPE_UNSPECIFIED: _CodeType.ValueType  # 0
    WORKING: _CodeType.ValueType  # 1
    """all good"""

    WARNING: _CodeType.ValueType  # 2
    """for example, if speech is sent not in real time. or unknown context (and we've made fallback)"""

    CLOSED: _CodeType.ValueType  # 3
    """after session was closed"""

class CodeType(_CodeType, metaclass=_CodeTypeEnumTypeWrapper):
    pass

CODE_TYPE_UNSPECIFIED: CodeType.ValueType  # 0
WORKING: CodeType.ValueType  # 1
"""all good"""

WARNING: CodeType.ValueType  # 2
"""for example, if speech is sent not in real time. or unknown context (and we've made fallback)"""

CLOSED: CodeType.ValueType  # 3
"""after session was closed"""

global___CodeType = CodeType


class TextNormalizationOptions(google.protobuf.message.Message):
    """options"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    class _TextNormalization:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _TextNormalizationEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[TextNormalizationOptions._TextNormalization.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
        TEXT_NORMALIZATION_UNSPECIFIED: TextNormalizationOptions._TextNormalization.ValueType  # 0
        TEXT_NORMALIZATION_ENABLED: TextNormalizationOptions._TextNormalization.ValueType  # 1
        """Enable normalization"""

        TEXT_NORMALIZATION_DISABLED: TextNormalizationOptions._TextNormalization.ValueType  # 2
        """Disable normalization"""

    class TextNormalization(_TextNormalization, metaclass=_TextNormalizationEnumTypeWrapper):
        """Normalization"""
        pass

    TEXT_NORMALIZATION_UNSPECIFIED: TextNormalizationOptions.TextNormalization.ValueType  # 0
    TEXT_NORMALIZATION_ENABLED: TextNormalizationOptions.TextNormalization.ValueType  # 1
    """Enable normalization"""

    TEXT_NORMALIZATION_DISABLED: TextNormalizationOptions.TextNormalization.ValueType  # 2
    """Disable normalization"""


    TEXT_NORMALIZATION_FIELD_NUMBER: builtins.int
    PROFANITY_FILTER_FIELD_NUMBER: builtins.int
    LITERATURE_TEXT_FIELD_NUMBER: builtins.int
    text_normalization: global___TextNormalizationOptions.TextNormalization.ValueType
    profanity_filter: builtins.bool
    """Filter profanity (default: false)"""

    literature_text: builtins.bool
    """Rewrite text in literature style (default: false)"""

    def __init__(self,
        *,
        text_normalization: global___TextNormalizationOptions.TextNormalization.ValueType = ...,
        profanity_filter: builtins.bool = ...,
        literature_text: builtins.bool = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["literature_text",b"literature_text","profanity_filter",b"profanity_filter","text_normalization",b"text_normalization"]) -> None: ...
global___TextNormalizationOptions = TextNormalizationOptions

class DefaultEouClassifier(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    class _EouSensitivity:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _EouSensitivityEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[DefaultEouClassifier._EouSensitivity.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
        EOU_SENSITIVITY_UNSPECIFIED: DefaultEouClassifier._EouSensitivity.ValueType  # 0
        DEFAULT: DefaultEouClassifier._EouSensitivity.ValueType  # 1
        HIGH: DefaultEouClassifier._EouSensitivity.ValueType  # 2
    class EouSensitivity(_EouSensitivity, metaclass=_EouSensitivityEnumTypeWrapper):
        pass

    EOU_SENSITIVITY_UNSPECIFIED: DefaultEouClassifier.EouSensitivity.ValueType  # 0
    DEFAULT: DefaultEouClassifier.EouSensitivity.ValueType  # 1
    HIGH: DefaultEouClassifier.EouSensitivity.ValueType  # 2

    TYPE_FIELD_NUMBER: builtins.int
    MAX_PAUSE_BETWEEN_WORDS_HINT_MS_FIELD_NUMBER: builtins.int
    type: global___DefaultEouClassifier.EouSensitivity.ValueType
    """EOU sensitivity.  Currently two levels, faster with more error and more conservative (our default)"""

    max_pause_between_words_hint_ms: builtins.int
    """hint for max pause between words. Our EoU detector could use this information to distinguish between end of utterance and slow speech (like one <long pause> two <long pause> three, etc)"""

    def __init__(self,
        *,
        type: global___DefaultEouClassifier.EouSensitivity.ValueType = ...,
        max_pause_between_words_hint_ms: builtins.int = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["max_pause_between_words_hint_ms",b"max_pause_between_words_hint_ms","type",b"type"]) -> None: ...
global___DefaultEouClassifier = DefaultEouClassifier

class ExternalEouClassifier(google.protobuf.message.Message):
    """use EOU provided by user"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    def __init__(self,
        ) -> None: ...
global___ExternalEouClassifier = ExternalEouClassifier

class EouClassifierOptions(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    DEFAULT_CLASSIFIER_FIELD_NUMBER: builtins.int
    EXTERNAL_CLASSIFIER_FIELD_NUMBER: builtins.int
    @property
    def default_classifier(self) -> global___DefaultEouClassifier:
        """EOU classifier provided by SpeechKit. Default"""
        pass
    @property
    def external_classifier(self) -> global___ExternalEouClassifier:
        """EoU is enforced by external messages from user"""
        pass
    def __init__(self,
        *,
        default_classifier: typing.Optional[global___DefaultEouClassifier] = ...,
        external_classifier: typing.Optional[global___ExternalEouClassifier] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["Classifier",b"Classifier","default_classifier",b"default_classifier","external_classifier",b"external_classifier"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["Classifier",b"Classifier","default_classifier",b"default_classifier","external_classifier",b"external_classifier"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["Classifier",b"Classifier"]) -> typing.Optional[typing_extensions.Literal["default_classifier","external_classifier"]]: ...
global___EouClassifierOptions = EouClassifierOptions

class RawAudio(google.protobuf.message.Message):
    """RAW Audio format spec (no container to infer type). used in AudioFormat options"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    class _AudioEncoding:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _AudioEncodingEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[RawAudio._AudioEncoding.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
        AUDIO_ENCODING_UNSPECIFIED: RawAudio._AudioEncoding.ValueType  # 0
        LINEAR16_PCM: RawAudio._AudioEncoding.ValueType  # 1
    class AudioEncoding(_AudioEncoding, metaclass=_AudioEncodingEnumTypeWrapper):
        pass

    AUDIO_ENCODING_UNSPECIFIED: RawAudio.AudioEncoding.ValueType  # 0
    LINEAR16_PCM: RawAudio.AudioEncoding.ValueType  # 1

    AUDIO_ENCODING_FIELD_NUMBER: builtins.int
    SAMPLE_RATE_HERTZ_FIELD_NUMBER: builtins.int
    AUDIO_CHANNEL_COUNT_FIELD_NUMBER: builtins.int
    audio_encoding: global___RawAudio.AudioEncoding.ValueType
    """ type of audio encoding"""

    sample_rate_hertz: builtins.int
    """ PCM sample rate"""

    audio_channel_count: builtins.int
    """ PCM channel count. Currently only single channel audio is supported in real-time recognition"""

    def __init__(self,
        *,
        audio_encoding: global___RawAudio.AudioEncoding.ValueType = ...,
        sample_rate_hertz: builtins.int = ...,
        audio_channel_count: builtins.int = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["audio_channel_count",b"audio_channel_count","audio_encoding",b"audio_encoding","sample_rate_hertz",b"sample_rate_hertz"]) -> None: ...
global___RawAudio = RawAudio

class ContainerAudio(google.protobuf.message.Message):
    """Audio with fixed type in container. used in AudioFormat options"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    class _ContainerAudioType:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _ContainerAudioTypeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[ContainerAudio._ContainerAudioType.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
        CONTAINER_AUDIO_TYPE_UNSPECIFIED: ContainerAudio._ContainerAudioType.ValueType  # 0
        WAV: ContainerAudio._ContainerAudioType.ValueType  # 1
        OGG_OPUS: ContainerAudio._ContainerAudioType.ValueType  # 2
        MP3: ContainerAudio._ContainerAudioType.ValueType  # 3
    class ContainerAudioType(_ContainerAudioType, metaclass=_ContainerAudioTypeEnumTypeWrapper):
        pass

    CONTAINER_AUDIO_TYPE_UNSPECIFIED: ContainerAudio.ContainerAudioType.ValueType  # 0
    WAV: ContainerAudio.ContainerAudioType.ValueType  # 1
    OGG_OPUS: ContainerAudio.ContainerAudioType.ValueType  # 2
    MP3: ContainerAudio.ContainerAudioType.ValueType  # 3

    CONTAINER_AUDIO_TYPE_FIELD_NUMBER: builtins.int
    container_audio_type: global___ContainerAudio.ContainerAudioType.ValueType
    """ type of audio container"""

    def __init__(self,
        *,
        container_audio_type: global___ContainerAudio.ContainerAudioType.ValueType = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["container_audio_type",b"container_audio_type"]) -> None: ...
global___ContainerAudio = ContainerAudio

class AudioFormatOptions(google.protobuf.message.Message):
    """audio format options"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    RAW_AUDIO_FIELD_NUMBER: builtins.int
    CONTAINER_AUDIO_FIELD_NUMBER: builtins.int
    @property
    def raw_audio(self) -> global___RawAudio:
        """   audio without container"""
        pass
    @property
    def container_audio(self) -> global___ContainerAudio:
        """   audio is wrapped in container"""
        pass
    def __init__(self,
        *,
        raw_audio: typing.Optional[global___RawAudio] = ...,
        container_audio: typing.Optional[global___ContainerAudio] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["AudioFormat",b"AudioFormat","container_audio",b"container_audio","raw_audio",b"raw_audio"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["AudioFormat",b"AudioFormat","container_audio",b"container_audio","raw_audio",b"raw_audio"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["AudioFormat",b"AudioFormat"]) -> typing.Optional[typing_extensions.Literal["raw_audio","container_audio"]]: ...
global___AudioFormatOptions = AudioFormatOptions

class LanguageRestrictionOptions(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    class _LanguageRestrictionType:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _LanguageRestrictionTypeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[LanguageRestrictionOptions._LanguageRestrictionType.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
        LANGUAGE_RESTRICTION_TYPE_UNSPECIFIED: LanguageRestrictionOptions._LanguageRestrictionType.ValueType  # 0
        WHITELIST: LanguageRestrictionOptions._LanguageRestrictionType.ValueType  # 1
        BLACKLIST: LanguageRestrictionOptions._LanguageRestrictionType.ValueType  # 2
    class LanguageRestrictionType(_LanguageRestrictionType, metaclass=_LanguageRestrictionTypeEnumTypeWrapper):
        pass

    LANGUAGE_RESTRICTION_TYPE_UNSPECIFIED: LanguageRestrictionOptions.LanguageRestrictionType.ValueType  # 0
    WHITELIST: LanguageRestrictionOptions.LanguageRestrictionType.ValueType  # 1
    BLACKLIST: LanguageRestrictionOptions.LanguageRestrictionType.ValueType  # 2

    RESTRICTION_TYPE_FIELD_NUMBER: builtins.int
    LANGUAGE_CODE_FIELD_NUMBER: builtins.int
    restriction_type: global___LanguageRestrictionOptions.LanguageRestrictionType.ValueType
    @property
    def language_code(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]: ...
    def __init__(self,
        *,
        restriction_type: global___LanguageRestrictionOptions.LanguageRestrictionType.ValueType = ...,
        language_code: typing.Optional[typing.Iterable[typing.Text]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["language_code",b"language_code","restriction_type",b"restriction_type"]) -> None: ...
global___LanguageRestrictionOptions = LanguageRestrictionOptions

class RecognitionModelOptions(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    class _AudioProcessingType:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _AudioProcessingTypeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[RecognitionModelOptions._AudioProcessingType.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
        AUDIO_PROCESSING_TYPE_UNSPECIFIED: RecognitionModelOptions._AudioProcessingType.ValueType  # 0
        REAL_TIME: RecognitionModelOptions._AudioProcessingType.ValueType  # 1
        FULL_DATA: RecognitionModelOptions._AudioProcessingType.ValueType  # 2
    class AudioProcessingType(_AudioProcessingType, metaclass=_AudioProcessingTypeEnumTypeWrapper):
        pass

    AUDIO_PROCESSING_TYPE_UNSPECIFIED: RecognitionModelOptions.AudioProcessingType.ValueType  # 0
    REAL_TIME: RecognitionModelOptions.AudioProcessingType.ValueType  # 1
    FULL_DATA: RecognitionModelOptions.AudioProcessingType.ValueType  # 2

    MODEL_FIELD_NUMBER: builtins.int
    AUDIO_FORMAT_FIELD_NUMBER: builtins.int
    TEXT_NORMALIZATION_FIELD_NUMBER: builtins.int
    LANGUAGE_RESTRICTION_FIELD_NUMBER: builtins.int
    AUDIO_PROCESSING_TYPE_FIELD_NUMBER: builtins.int
    model: typing.Text
    """ reserved for future, do not use"""

    @property
    def audio_format(self) -> global___AudioFormatOptions:
        """ config for input audio"""
        pass
    @property
    def text_normalization(self) -> global___TextNormalizationOptions:
        """ text normalization options"""
        pass
    @property
    def language_restriction(self) -> global___LanguageRestrictionOptions:
        """possible languages in audio"""
        pass
    audio_processing_type: global___RecognitionModelOptions.AudioProcessingType.ValueType
    """how to deal with audio data (in real time, after all data is received, etc). Default is REAL_TIME"""

    def __init__(self,
        *,
        model: typing.Text = ...,
        audio_format: typing.Optional[global___AudioFormatOptions] = ...,
        text_normalization: typing.Optional[global___TextNormalizationOptions] = ...,
        language_restriction: typing.Optional[global___LanguageRestrictionOptions] = ...,
        audio_processing_type: global___RecognitionModelOptions.AudioProcessingType.ValueType = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["audio_format",b"audio_format","language_restriction",b"language_restriction","text_normalization",b"text_normalization"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["audio_format",b"audio_format","audio_processing_type",b"audio_processing_type","language_restriction",b"language_restriction","model",b"model","text_normalization",b"text_normalization"]) -> None: ...
global___RecognitionModelOptions = RecognitionModelOptions

class StreamingOptions(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    RECOGNITION_MODEL_FIELD_NUMBER: builtins.int
    EOU_CLASSIFIER_FIELD_NUMBER: builtins.int
    @property
    def recognition_model(self) -> global___RecognitionModelOptions:
        """ configuration for speech recognition model"""
        pass
    @property
    def eou_classifier(self) -> global___EouClassifierOptions:
        """ configuration for end of utterance detection model"""
        pass
    def __init__(self,
        *,
        recognition_model: typing.Optional[global___RecognitionModelOptions] = ...,
        eou_classifier: typing.Optional[global___EouClassifierOptions] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["eou_classifier",b"eou_classifier","recognition_model",b"recognition_model"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["eou_classifier",b"eou_classifier","recognition_model",b"recognition_model"]) -> None: ...
global___StreamingOptions = StreamingOptions

class AudioChunk(google.protobuf.message.Message):
    """data chunk with audio"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    DATA_FIELD_NUMBER: builtins.int
    data: builtins.bytes
    """ bytes with audio data"""

    def __init__(self,
        *,
        data: builtins.bytes = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["data",b"data"]) -> None: ...
global___AudioChunk = AudioChunk

class SilenceChunk(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    DURATION_MS_FIELD_NUMBER: builtins.int
    duration_ms: builtins.int
    """ duration of silence chunk in ms"""

    def __init__(self,
        *,
        duration_ms: builtins.int = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["duration_ms",b"duration_ms"]) -> None: ...
global___SilenceChunk = SilenceChunk

class Eou(google.protobuf.message.Message):
    """force EOU"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    def __init__(self,
        ) -> None: ...
global___Eou = Eou

class StreamingRequest(google.protobuf.message.Message):
    """streaming audio request
    Events are control messages from user
    first message should be session options
    the next messages are audio data chunks or control messages
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    SESSION_OPTIONS_FIELD_NUMBER: builtins.int
    CHUNK_FIELD_NUMBER: builtins.int
    SILENCE_CHUNK_FIELD_NUMBER: builtins.int
    EOU_FIELD_NUMBER: builtins.int
    @property
    def session_options(self) -> global___StreamingOptions:
        """   Session options. should be first message from user"""
        pass
    @property
    def chunk(self) -> global___AudioChunk:
        """   chunk with audio data"""
        pass
    @property
    def silence_chunk(self) -> global___SilenceChunk:
        """   chunk with silence"""
        pass
    @property
    def eou(self) -> global___Eou:
        """   request to end current utterance. Works only with external EoU detector"""
        pass
    def __init__(self,
        *,
        session_options: typing.Optional[global___StreamingOptions] = ...,
        chunk: typing.Optional[global___AudioChunk] = ...,
        silence_chunk: typing.Optional[global___SilenceChunk] = ...,
        eou: typing.Optional[global___Eou] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["Event",b"Event","chunk",b"chunk","eou",b"eou","session_options",b"session_options","silence_chunk",b"silence_chunk"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["Event",b"Event","chunk",b"chunk","eou",b"eou","session_options",b"session_options","silence_chunk",b"silence_chunk"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["Event",b"Event"]) -> typing.Optional[typing_extensions.Literal["session_options","chunk","silence_chunk","eou"]]: ...
global___StreamingRequest = StreamingRequest

class Word(google.protobuf.message.Message):
    """now response

    recognized word
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    TEXT_FIELD_NUMBER: builtins.int
    START_TIME_MS_FIELD_NUMBER: builtins.int
    END_TIME_MS_FIELD_NUMBER: builtins.int
    text: typing.Text
    """ word text"""

    start_time_ms: builtins.int
    """ estimation of word start time in ms"""

    end_time_ms: builtins.int
    """ estimation of word end time in ms"""

    def __init__(self,
        *,
        text: typing.Text = ...,
        start_time_ms: builtins.int = ...,
        end_time_ms: builtins.int = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["end_time_ms",b"end_time_ms","start_time_ms",b"start_time_ms","text",b"text"]) -> None: ...
global___Word = Word

class Alternative(google.protobuf.message.Message):
    """recognition of specific time frame"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    WORDS_FIELD_NUMBER: builtins.int
    TEXT_FIELD_NUMBER: builtins.int
    START_TIME_MS_FIELD_NUMBER: builtins.int
    END_TIME_MS_FIELD_NUMBER: builtins.int
    CONFIDENCE_FIELD_NUMBER: builtins.int
    @property
    def words(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Word]:
        """ words in time frame"""
        pass
    text: typing.Text
    """ text in time frame"""

    start_time_ms: builtins.int
    """ start of time frame"""

    end_time_ms: builtins.int
    """ end of time frame"""

    confidence: builtins.float
    """ hypothesis confidence. Currently is not used"""

    def __init__(self,
        *,
        words: typing.Optional[typing.Iterable[global___Word]] = ...,
        text: typing.Text = ...,
        start_time_ms: builtins.int = ...,
        end_time_ms: builtins.int = ...,
        confidence: builtins.float = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["confidence",b"confidence","end_time_ms",b"end_time_ms","start_time_ms",b"start_time_ms","text",b"text","words",b"words"]) -> None: ...
global___Alternative = Alternative

class EouUpdate(google.protobuf.message.Message):
    """Update information from"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    TIME_MS_FIELD_NUMBER: builtins.int
    time_ms: builtins.int
    """ end of utterance estimated time"""

    def __init__(self,
        *,
        time_ms: builtins.int = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["time_ms",b"time_ms"]) -> None: ...
global___EouUpdate = EouUpdate

class AlternativeUpdate(google.protobuf.message.Message):
    """update of hypothesis"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    ALTERNATIVES_FIELD_NUMBER: builtins.int
    CHANNEL_TAG_FIELD_NUMBER: builtins.int
    @property
    def alternatives(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Alternative]:
        """ list of hypothesis for timeframes"""
        pass
    channel_tag: typing.Text
    """ tag for distinguish audio channels."""

    def __init__(self,
        *,
        alternatives: typing.Optional[typing.Iterable[global___Alternative]] = ...,
        channel_tag: typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["alternatives",b"alternatives","channel_tag",b"channel_tag"]) -> None: ...
global___AlternativeUpdate = AlternativeUpdate

class AudioCursors(google.protobuf.message.Message):
    """AudioCursors are state of ASR recognition stream"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    RECEIVED_DATA_MS_FIELD_NUMBER: builtins.int
    RESET_TIME_MS_FIELD_NUMBER: builtins.int
    PARTIAL_TIME_MS_FIELD_NUMBER: builtins.int
    FINAL_TIME_MS_FIELD_NUMBER: builtins.int
    FINAL_INDEX_FIELD_NUMBER: builtins.int
    EOU_TIME_MS_FIELD_NUMBER: builtins.int
    received_data_ms: builtins.int
    """amount of audio chunks server received. This cursor is moved after each audio chunk was received by server."""

    reset_time_ms: builtins.int
    """input stream reset data"""

    partial_time_ms: builtins.int
    """ how much audio was processed. This time includes trimming silences as well. This cursor is moved after server received enough data
     to update recognition results (includes silence as well)
    """

    final_time_ms: builtins.int
    """ Time of last final. This cursor is moved when server decides that recognition from start of audio until final_time_ms will not change anymore
     usually this even is followed by EOU detection (but this could change in future)
    """

    final_index: builtins.int
    """ This is index of last final server send. Incremented after each new final."""

    eou_time_ms: builtins.int
    """ Estimated time of EOU. Cursor is updated after each new EOU is sent
     For external classifier this equals to received_data_ms at the moment EOU event arrives
     For internal classifier this is estimation of time. The time is not exact and has the same guarantees as word timings
    """

    def __init__(self,
        *,
        received_data_ms: builtins.int = ...,
        reset_time_ms: builtins.int = ...,
        partial_time_ms: builtins.int = ...,
        final_time_ms: builtins.int = ...,
        final_index: builtins.int = ...,
        eou_time_ms: builtins.int = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["eou_time_ms",b"eou_time_ms","final_index",b"final_index","final_time_ms",b"final_time_ms","partial_time_ms",b"partial_time_ms","received_data_ms",b"received_data_ms","reset_time_ms",b"reset_time_ms"]) -> None: ...
global___AudioCursors = AudioCursors

class FinalRefinement(google.protobuf.message.Message):
    """refinement for final hypo. For example, text normalization is refinement."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    FINAL_INDEX_FIELD_NUMBER: builtins.int
    NORMALIZED_TEXT_FIELD_NUMBER: builtins.int
    final_index: builtins.int
    """ index of final for which server sends additional information"""

    @property
    def normalized_text(self) -> global___AlternativeUpdate:
        """  normalized text instead of raw one"""
        pass
    def __init__(self,
        *,
        final_index: builtins.int = ...,
        normalized_text: typing.Optional[global___AlternativeUpdate] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["Type",b"Type","normalized_text",b"normalized_text"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["Type",b"Type","final_index",b"final_index","normalized_text",b"normalized_text"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["Type",b"Type"]) -> typing.Optional[typing_extensions.Literal["normalized_text"]]: ...
global___FinalRefinement = FinalRefinement

class StatusCode(google.protobuf.message.Message):
    """status message"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    CODE_TYPE_FIELD_NUMBER: builtins.int
    MESSAGE_FIELD_NUMBER: builtins.int
    code_type: global___CodeType.ValueType
    """ code type"""

    message: typing.Text
    """ human readable message"""

    def __init__(self,
        *,
        code_type: global___CodeType.ValueType = ...,
        message: typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["code_type",b"code_type","message",b"message"]) -> None: ...
global___StatusCode = StatusCode

class SessionUuid(google.protobuf.message.Message):
    """session identifier"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    UUID_FIELD_NUMBER: builtins.int
    USER_REQUEST_ID_FIELD_NUMBER: builtins.int
    uuid: typing.Text
    """ internal session identifier"""

    user_request_id: typing.Text
    """ user session identifier"""

    def __init__(self,
        *,
        uuid: typing.Text = ...,
        user_request_id: typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["user_request_id",b"user_request_id","uuid",b"uuid"]) -> None: ...
global___SessionUuid = SessionUuid

class StreamingResponse(google.protobuf.message.Message):
    """responses from server
    each response contains session uuid
    AudioCursors
    plus specific even
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    SESSION_UUID_FIELD_NUMBER: builtins.int
    AUDIO_CURSORS_FIELD_NUMBER: builtins.int
    RESPONSE_WALL_TIME_MS_FIELD_NUMBER: builtins.int
    PARTIAL_FIELD_NUMBER: builtins.int
    FINAL_FIELD_NUMBER: builtins.int
    EOU_UPDATE_FIELD_NUMBER: builtins.int
    FINAL_REFINEMENT_FIELD_NUMBER: builtins.int
    STATUS_CODE_FIELD_NUMBER: builtins.int
    @property
    def session_uuid(self) -> global___SessionUuid:
        """ session identifier"""
        pass
    @property
    def audio_cursors(self) -> global___AudioCursors:
        """ progress bar for stream session recognition: how many data we obtained; final and partial times; etc"""
        pass
    response_wall_time_ms: builtins.int
    """wall clock on server side. This is time when server wrote results to stream"""

    @property
    def partial(self) -> global___AlternativeUpdate:
        """   partial results, server will send them regularly after enough audio data was received from user. This are current text estimation
           from final_time_ms to partial_time_ms. Could change after new data will arrive
        """
        pass
    @property
    def final(self) -> global___AlternativeUpdate:
        """   final results, the recognition is now fixed until final_time_ms. For now, final is sent only if the EOU event was triggered. This could be change in future releases"""
        pass
    @property
    def eou_update(self) -> global___EouUpdate:
        """ After EOU classifier, send the message with final, send the EouUpdate with time of EOU
         before eou_update we send final with the same time. there could be several finals before eou update
        """
        pass
    @property
    def final_refinement(self) -> global___FinalRefinement:
        """   For each final, if normalization is enabled, sent the normalized text (or some other advanced post-processing).
           Final normalization will introduce additional latency
        """
        pass
    @property
    def status_code(self) -> global___StatusCode:
        """   Status messages, send by server with fixed interval (keep-alive)"""
        pass
    def __init__(self,
        *,
        session_uuid: typing.Optional[global___SessionUuid] = ...,
        audio_cursors: typing.Optional[global___AudioCursors] = ...,
        response_wall_time_ms: builtins.int = ...,
        partial: typing.Optional[global___AlternativeUpdate] = ...,
        final: typing.Optional[global___AlternativeUpdate] = ...,
        eou_update: typing.Optional[global___EouUpdate] = ...,
        final_refinement: typing.Optional[global___FinalRefinement] = ...,
        status_code: typing.Optional[global___StatusCode] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["Event",b"Event","audio_cursors",b"audio_cursors","eou_update",b"eou_update","final",b"final","final_refinement",b"final_refinement","partial",b"partial","session_uuid",b"session_uuid","status_code",b"status_code"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["Event",b"Event","audio_cursors",b"audio_cursors","eou_update",b"eou_update","final",b"final","final_refinement",b"final_refinement","partial",b"partial","response_wall_time_ms",b"response_wall_time_ms","session_uuid",b"session_uuid","status_code",b"status_code"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["Event",b"Event"]) -> typing.Optional[typing_extensions.Literal["partial","final","eou_update","final_refinement","status_code"]]: ...
global___StreamingResponse = StreamingResponse
