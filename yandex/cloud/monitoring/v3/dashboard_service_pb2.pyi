"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.message
import typing
import typing_extensions
import yandex.cloud.monitoring.v3.dashboard_pb2
import yandex.cloud.monitoring.v3.parametrization_pb2
import yandex.cloud.monitoring.v3.widget_pb2
import yandex.cloud.operation.operation_pb2

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

class GetDashboardRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    DASHBOARD_ID_FIELD_NUMBER: builtins.int
    dashboard_id: typing.Text
    """Required. Dashboard ID."""

    def __init__(self,
        *,
        dashboard_id: typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["dashboard_id",b"dashboard_id"]) -> None: ...
global___GetDashboardRequest = GetDashboardRequest

class ListDashboardsRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    FOLDER_ID_FIELD_NUMBER: builtins.int
    PAGE_SIZE_FIELD_NUMBER: builtins.int
    PAGE_TOKEN_FIELD_NUMBER: builtins.int
    FILTER_FIELD_NUMBER: builtins.int
    folder_id: typing.Text
    """Required. Folder ID."""

    page_size: builtins.int
    """The maximum number of dashboards to return.
    If unspecified, at most 100 dashboards will be returned.
    The maximum value is 1000; values above 1000 will be coerced to 1000.
    """

    page_token: typing.Text
    """Page token. To get the next page of results, set `page_token` to the
    [ListDashboardResponse.next_page_token] returned by a previous list request.
    """

    filter: typing.Text
    """A filter expression that filters resources listed in the response.
    The expression must specify:
    1. The field name. Currently you can use filtering only on the [Dashboard.name] field.
    2. An `=` operator.
    3. The value in double quotes (`"`). Must be 3-63 characters long and match the regular expression `[a-z][-a-z0-9]{1,61}[a-z0-9]`.
    Example: name="abc"
    """

    def __init__(self,
        *,
        folder_id: typing.Text = ...,
        page_size: builtins.int = ...,
        page_token: typing.Text = ...,
        filter: typing.Text = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["container",b"container","folder_id",b"folder_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["container",b"container","filter",b"filter","folder_id",b"folder_id","page_size",b"page_size","page_token",b"page_token"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["container",b"container"]) -> typing.Optional[typing_extensions.Literal["folder_id"]]: ...
global___ListDashboardsRequest = ListDashboardsRequest

class ListDashboardsResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    DASHBOARDS_FIELD_NUMBER: builtins.int
    NEXT_PAGE_TOKEN_FIELD_NUMBER: builtins.int
    @property
    def dashboards(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[yandex.cloud.monitoring.v3.dashboard_pb2.Dashboard]:
        """List of dashboards."""
        pass
    next_page_token: typing.Text
    """Token to retrieve the next page of results, or empty if there are no more results in the list."""

    def __init__(self,
        *,
        dashboards: typing.Optional[typing.Iterable[yandex.cloud.monitoring.v3.dashboard_pb2.Dashboard]] = ...,
        next_page_token: typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["dashboards",b"dashboards","next_page_token",b"next_page_token"]) -> None: ...
global___ListDashboardsResponse = ListDashboardsResponse

class CreateDashboardRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    class LabelsEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor
        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: typing.Text
        value: typing.Text
        def __init__(self,
            *,
            key: typing.Text = ...,
            value: typing.Text = ...,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["key",b"key","value",b"value"]) -> None: ...

    FOLDER_ID_FIELD_NUMBER: builtins.int
    NAME_FIELD_NUMBER: builtins.int
    DESCRIPTION_FIELD_NUMBER: builtins.int
    LABELS_FIELD_NUMBER: builtins.int
    TITLE_FIELD_NUMBER: builtins.int
    WIDGETS_FIELD_NUMBER: builtins.int
    PARAMETRIZATION_FIELD_NUMBER: builtins.int
    folder_id: typing.Text
    """Required. Folder ID."""

    name: typing.Text
    """Required. Dashboard name."""

    description: typing.Text
    """Dashboard description."""

    @property
    def labels(self) -> google.protobuf.internal.containers.ScalarMap[typing.Text, typing.Text]:
        """Resource labels as `key:value` pairs."""
        pass
    title: typing.Text
    """Dashboard title."""

    @property
    def widgets(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[yandex.cloud.monitoring.v3.widget_pb2.Widget]:
        """List of dashboard widgets."""
        pass
    @property
    def parametrization(self) -> yandex.cloud.monitoring.v3.parametrization_pb2.Parametrization:
        """Dashboard parametrization."""
        pass
    def __init__(self,
        *,
        folder_id: typing.Text = ...,
        name: typing.Text = ...,
        description: typing.Text = ...,
        labels: typing.Optional[typing.Mapping[typing.Text, typing.Text]] = ...,
        title: typing.Text = ...,
        widgets: typing.Optional[typing.Iterable[yandex.cloud.monitoring.v3.widget_pb2.Widget]] = ...,
        parametrization: typing.Optional[yandex.cloud.monitoring.v3.parametrization_pb2.Parametrization] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["container",b"container","folder_id",b"folder_id","parametrization",b"parametrization"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["container",b"container","description",b"description","folder_id",b"folder_id","labels",b"labels","name",b"name","parametrization",b"parametrization","title",b"title","widgets",b"widgets"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["container",b"container"]) -> typing.Optional[typing_extensions.Literal["folder_id"]]: ...
global___CreateDashboardRequest = CreateDashboardRequest

class CreateDashboardMetadata(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    DASHBOARD_ID_FIELD_NUMBER: builtins.int
    dashboard_id: typing.Text
    """Dashboard ID."""

    def __init__(self,
        *,
        dashboard_id: typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["dashboard_id",b"dashboard_id"]) -> None: ...
global___CreateDashboardMetadata = CreateDashboardMetadata

class UpdateDashboardRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    class LabelsEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor
        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: typing.Text
        value: typing.Text
        def __init__(self,
            *,
            key: typing.Text = ...,
            value: typing.Text = ...,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["key",b"key","value",b"value"]) -> None: ...

    DASHBOARD_ID_FIELD_NUMBER: builtins.int
    NAME_FIELD_NUMBER: builtins.int
    DESCRIPTION_FIELD_NUMBER: builtins.int
    LABELS_FIELD_NUMBER: builtins.int
    TITLE_FIELD_NUMBER: builtins.int
    WIDGETS_FIELD_NUMBER: builtins.int
    PARAMETRIZATION_FIELD_NUMBER: builtins.int
    ETAG_FIELD_NUMBER: builtins.int
    dashboard_id: typing.Text
    """Required. Dashboard ID."""

    name: typing.Text
    """Required. Dashboard name."""

    description: typing.Text
    """Dashboard description."""

    @property
    def labels(self) -> google.protobuf.internal.containers.ScalarMap[typing.Text, typing.Text]:
        """Resource labels as `key:value` pairs.

        Existing set of `labels` is completely replaced by the provided set.
        """
        pass
    title: typing.Text
    """Dashboard title."""

    @property
    def widgets(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[yandex.cloud.monitoring.v3.widget_pb2.Widget]:
        """List of dashboard widgets."""
        pass
    @property
    def parametrization(self) -> yandex.cloud.monitoring.v3.parametrization_pb2.Parametrization:
        """Dashboard parametrization."""
        pass
    etag: typing.Text
    """The current etag of the dashboard."""

    def __init__(self,
        *,
        dashboard_id: typing.Text = ...,
        name: typing.Text = ...,
        description: typing.Text = ...,
        labels: typing.Optional[typing.Mapping[typing.Text, typing.Text]] = ...,
        title: typing.Text = ...,
        widgets: typing.Optional[typing.Iterable[yandex.cloud.monitoring.v3.widget_pb2.Widget]] = ...,
        parametrization: typing.Optional[yandex.cloud.monitoring.v3.parametrization_pb2.Parametrization] = ...,
        etag: typing.Text = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["parametrization",b"parametrization"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["dashboard_id",b"dashboard_id","description",b"description","etag",b"etag","labels",b"labels","name",b"name","parametrization",b"parametrization","title",b"title","widgets",b"widgets"]) -> None: ...
global___UpdateDashboardRequest = UpdateDashboardRequest

class UpdateDashboardMetadata(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    DASHBOARD_ID_FIELD_NUMBER: builtins.int
    dashboard_id: typing.Text
    """Dashboard ID."""

    def __init__(self,
        *,
        dashboard_id: typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["dashboard_id",b"dashboard_id"]) -> None: ...
global___UpdateDashboardMetadata = UpdateDashboardMetadata

class DeleteDashboardRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    DASHBOARD_ID_FIELD_NUMBER: builtins.int
    ETAG_FIELD_NUMBER: builtins.int
    dashboard_id: typing.Text
    """Required. Dashboard ID."""

    etag: typing.Text
    """The current etag of the dashboard."""

    def __init__(self,
        *,
        dashboard_id: typing.Text = ...,
        etag: typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["dashboard_id",b"dashboard_id","etag",b"etag"]) -> None: ...
global___DeleteDashboardRequest = DeleteDashboardRequest

class DeleteDashboardMetadata(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    DASHBOARD_ID_FIELD_NUMBER: builtins.int
    dashboard_id: typing.Text
    """Dashboard ID."""

    def __init__(self,
        *,
        dashboard_id: typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["dashboard_id",b"dashboard_id"]) -> None: ...
global___DeleteDashboardMetadata = DeleteDashboardMetadata

class ListDashboardOperationsRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    DASHBOARD_ID_FIELD_NUMBER: builtins.int
    PAGE_SIZE_FIELD_NUMBER: builtins.int
    PAGE_TOKEN_FIELD_NUMBER: builtins.int
    dashboard_id: typing.Text
    """ID of the dashboard to list operations for."""

    page_size: builtins.int
    """The maximum number of results per page to return. If the number of available
    results is larger than [page_size], the service returns a [ListDashboardOperationsResponse.next_page_token]
    that can be used to get the next page of results in subsequent list requests.
    """

    page_token: typing.Text
    """Page token. To get the next page of results, set [page_token] to the
    [ListDashboardOperationsResponse.next_page_token] returned by a previous list request.
    """

    def __init__(self,
        *,
        dashboard_id: typing.Text = ...,
        page_size: builtins.int = ...,
        page_token: typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["dashboard_id",b"dashboard_id","page_size",b"page_size","page_token",b"page_token"]) -> None: ...
global___ListDashboardOperationsRequest = ListDashboardOperationsRequest

class ListDashboardOperationsResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    OPERATIONS_FIELD_NUMBER: builtins.int
    NEXT_PAGE_TOKEN_FIELD_NUMBER: builtins.int
    @property
    def operations(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[yandex.cloud.operation.operation_pb2.Operation]:
        """List of operations for the specified dashboard."""
        pass
    next_page_token: typing.Text
    """This token allows you to get the next page of results for list requests. If the number of results
    is larger than [ListDashboardOperationsRequest.page_size], use the [next_page_token] as the value
    for the [ListDashboardOperationsRequest.page_token] query parameter in the next list request.
    Each subsequent list request will have its own [next_page_token] to continue paging through the results.
    """

    def __init__(self,
        *,
        operations: typing.Optional[typing.Iterable[yandex.cloud.operation.operation_pb2.Operation]] = ...,
        next_page_token: typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["next_page_token",b"next_page_token","operations",b"operations"]) -> None: ...
global___ListDashboardOperationsResponse = ListDashboardOperationsResponse
