"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import google.protobuf.descriptor
import google.protobuf.field_mask_pb2
import google.protobuf.internal.containers
import google.protobuf.internal.enum_type_wrapper
import google.protobuf.message
import google.protobuf.timestamp_pb2
import typing
import typing_extensions
import yandex.cloud.mdb.elasticsearch.v1.backup_pb2
import yandex.cloud.mdb.elasticsearch.v1.cluster_pb2
import yandex.cloud.mdb.elasticsearch.v1.config.elasticsearch_pb2
import yandex.cloud.mdb.elasticsearch.v1.extension_pb2
import yandex.cloud.mdb.elasticsearch.v1.maintenance_pb2
import yandex.cloud.mdb.elasticsearch.v1.user_pb2
import yandex.cloud.operation.operation_pb2

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

class GetClusterRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    CLUSTER_ID_FIELD_NUMBER: builtins.int
    cluster_id: typing.Text
    """ID of the Elasticsearch cluster to return.

    To get the cluster ID, make a [ClusterService.List] request.
    """

    def __init__(self,
        *,
        cluster_id: typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["cluster_id",b"cluster_id"]) -> None: ...
global___GetClusterRequest = GetClusterRequest

class ListClustersRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    FOLDER_ID_FIELD_NUMBER: builtins.int
    PAGE_SIZE_FIELD_NUMBER: builtins.int
    PAGE_TOKEN_FIELD_NUMBER: builtins.int
    FILTER_FIELD_NUMBER: builtins.int
    folder_id: typing.Text
    """ID of the folder to list Elasticsearch clusters in.

    To get the folder ID, make a [yandex.cloud.resourcemanager.v1.FolderService.List] request.
    """

    page_size: builtins.int
    """The maximum number of results per page to return.
    If the number of available results is larger than `page_size`, the service returns a [ListClustersResponse.next_page_token] that can be used to get the next page of results in subsequent list requests.
    """

    page_token: typing.Text
    """Page token.
    To get the next page of results, set `page_token` to the [ListClustersResponse.next_page_token] returned by the previous list request.
    """

    filter: typing.Text
    """A filter expression that filters resources listed in the response.

    The expression must specify:
    1. The field name to filter by. Currently you can only use filtering with the [Cluster.name] field.
    2. An `=` operator.
    3. The value in double quotes (`"`). Must be 1-63 characters long and match the regular expression `[a-zA-Z0-9_-]+`.

    Example of a filter: `name NOT IN 'test,beta'`.
    """

    def __init__(self,
        *,
        folder_id: typing.Text = ...,
        page_size: builtins.int = ...,
        page_token: typing.Text = ...,
        filter: typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["filter",b"filter","folder_id",b"folder_id","page_size",b"page_size","page_token",b"page_token"]) -> None: ...
global___ListClustersRequest = ListClustersRequest

class ListClustersResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    CLUSTERS_FIELD_NUMBER: builtins.int
    NEXT_PAGE_TOKEN_FIELD_NUMBER: builtins.int
    @property
    def clusters(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[yandex.cloud.mdb.elasticsearch.v1.cluster_pb2.Cluster]:
        """List of Elasticsearch clusters."""
        pass
    next_page_token: typing.Text
    """Token that allows you to get the next page of results for list requests.

    If the number of results is larger than [ListClustersRequest.page_size], use `next_page_token` as the value
    for the [ListClustersRequest.page_token] parameter in the next list request.
    Each subsequent list request will have its own `next_page_token` to continue paging through the results.
    """

    def __init__(self,
        *,
        clusters: typing.Optional[typing.Iterable[yandex.cloud.mdb.elasticsearch.v1.cluster_pb2.Cluster]] = ...,
        next_page_token: typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["clusters",b"clusters","next_page_token",b"next_page_token"]) -> None: ...
global___ListClustersResponse = ListClustersResponse

class CreateClusterRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    class LabelsEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor
        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: typing.Text
        value: typing.Text
        def __init__(self,
            *,
            key: typing.Text = ...,
            value: typing.Text = ...,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["key",b"key","value",b"value"]) -> None: ...

    FOLDER_ID_FIELD_NUMBER: builtins.int
    NAME_FIELD_NUMBER: builtins.int
    DESCRIPTION_FIELD_NUMBER: builtins.int
    LABELS_FIELD_NUMBER: builtins.int
    ENVIRONMENT_FIELD_NUMBER: builtins.int
    CONFIG_SPEC_FIELD_NUMBER: builtins.int
    USER_SPECS_FIELD_NUMBER: builtins.int
    HOST_SPECS_FIELD_NUMBER: builtins.int
    NETWORK_ID_FIELD_NUMBER: builtins.int
    SECURITY_GROUP_IDS_FIELD_NUMBER: builtins.int
    SERVICE_ACCOUNT_ID_FIELD_NUMBER: builtins.int
    DELETION_PROTECTION_FIELD_NUMBER: builtins.int
    MAINTENANCE_WINDOW_FIELD_NUMBER: builtins.int
    EXTENSION_SPECS_FIELD_NUMBER: builtins.int
    folder_id: typing.Text
    """ID of the folder to create the Elasticsearch cluster in."""

    name: typing.Text
    """Name of the Elasticsearch cluster. The name must be unique within the folder."""

    description: typing.Text
    """Description of the Elasticsearch cluster."""

    @property
    def labels(self) -> google.protobuf.internal.containers.ScalarMap[typing.Text, typing.Text]:
        """Custom labels for the Elasticsearch cluster as `key:value` pairs.

        For example, "project": "mvp" or "source": "dictionary".
        """
        pass
    environment: yandex.cloud.mdb.elasticsearch.v1.cluster_pb2.Cluster.Environment.ValueType
    """Deployment environment of the Elasticsearch cluster."""

    @property
    def config_spec(self) -> global___ConfigSpec:
        """Elasticsearch and hosts configuration for the cluster."""
        pass
    @property
    def user_specs(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[yandex.cloud.mdb.elasticsearch.v1.user_pb2.UserSpec]:
        """One or more descriptions of users to be created in Elasticsearch cluster.
        optional, depricated will be removed in future versions
        """
        pass
    @property
    def host_specs(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___HostSpec]:
        """One or more configurations of hosts to be created in the Elasticsearch cluster."""
        pass
    network_id: typing.Text
    """ID of the network to create the Elasticsearch cluster in."""

    @property
    def security_group_ids(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """User security groups"""
        pass
    service_account_id: typing.Text
    """ID of the service account used for access to Object Storage."""

    deletion_protection: builtins.bool
    """Deletion Protection inhibits deletion of the cluster"""

    @property
    def maintenance_window(self) -> yandex.cloud.mdb.elasticsearch.v1.maintenance_pb2.MaintenanceWindow:
        """Window of maintenance operations."""
        pass
    @property
    def extension_specs(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[yandex.cloud.mdb.elasticsearch.v1.extension_pb2.ExtensionSpec]:
        """optional"""
        pass
    def __init__(self,
        *,
        folder_id: typing.Text = ...,
        name: typing.Text = ...,
        description: typing.Text = ...,
        labels: typing.Optional[typing.Mapping[typing.Text, typing.Text]] = ...,
        environment: yandex.cloud.mdb.elasticsearch.v1.cluster_pb2.Cluster.Environment.ValueType = ...,
        config_spec: typing.Optional[global___ConfigSpec] = ...,
        user_specs: typing.Optional[typing.Iterable[yandex.cloud.mdb.elasticsearch.v1.user_pb2.UserSpec]] = ...,
        host_specs: typing.Optional[typing.Iterable[global___HostSpec]] = ...,
        network_id: typing.Text = ...,
        security_group_ids: typing.Optional[typing.Iterable[typing.Text]] = ...,
        service_account_id: typing.Text = ...,
        deletion_protection: builtins.bool = ...,
        maintenance_window: typing.Optional[yandex.cloud.mdb.elasticsearch.v1.maintenance_pb2.MaintenanceWindow] = ...,
        extension_specs: typing.Optional[typing.Iterable[yandex.cloud.mdb.elasticsearch.v1.extension_pb2.ExtensionSpec]] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["config_spec",b"config_spec","maintenance_window",b"maintenance_window"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["config_spec",b"config_spec","deletion_protection",b"deletion_protection","description",b"description","environment",b"environment","extension_specs",b"extension_specs","folder_id",b"folder_id","host_specs",b"host_specs","labels",b"labels","maintenance_window",b"maintenance_window","name",b"name","network_id",b"network_id","security_group_ids",b"security_group_ids","service_account_id",b"service_account_id","user_specs",b"user_specs"]) -> None: ...
global___CreateClusterRequest = CreateClusterRequest

class CreateClusterMetadata(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    CLUSTER_ID_FIELD_NUMBER: builtins.int
    cluster_id: typing.Text
    """ID of the Elasticsearch cluster that is being created."""

    def __init__(self,
        *,
        cluster_id: typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["cluster_id",b"cluster_id"]) -> None: ...
global___CreateClusterMetadata = CreateClusterMetadata

class UpdateClusterRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    class LabelsEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor
        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: typing.Text
        value: typing.Text
        def __init__(self,
            *,
            key: typing.Text = ...,
            value: typing.Text = ...,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["key",b"key","value",b"value"]) -> None: ...

    CLUSTER_ID_FIELD_NUMBER: builtins.int
    UPDATE_MASK_FIELD_NUMBER: builtins.int
    DESCRIPTION_FIELD_NUMBER: builtins.int
    LABELS_FIELD_NUMBER: builtins.int
    CONFIG_SPEC_FIELD_NUMBER: builtins.int
    NAME_FIELD_NUMBER: builtins.int
    SECURITY_GROUP_IDS_FIELD_NUMBER: builtins.int
    SERVICE_ACCOUNT_ID_FIELD_NUMBER: builtins.int
    DELETION_PROTECTION_FIELD_NUMBER: builtins.int
    MAINTENANCE_WINDOW_FIELD_NUMBER: builtins.int
    cluster_id: typing.Text
    """ID of the Elasticsearch cluster to update.

    To get the Elasticsearch cluster ID, make a [ClusterService.List] request.
    """

    @property
    def update_mask(self) -> google.protobuf.field_mask_pb2.FieldMask: ...
    description: typing.Text
    """New description of the Elasticsearch cluster."""

    @property
    def labels(self) -> google.protobuf.internal.containers.ScalarMap[typing.Text, typing.Text]:
        """Custom labels for the Elasticsearch cluster as `key:value` pairs.

        For example, "project": "mvp" or "source": "dictionary".

        The new set of labels will completely replace the old ones.
        To add a label, request the current set with the [ClusterService.Get] method, then send an [ClusterService.Update] request with the new label added to the set.
        """
        pass
    @property
    def config_spec(self) -> global___ConfigSpecUpdate:
        """New configuration and resources for hosts in the Elasticsearch cluster.

        Use [update_mask] to prevent reverting all cluster settings that are not listed in `config_spec` to their default values.
        """
        pass
    name: typing.Text
    """New name for the Elasticsearch cluster."""

    @property
    def security_group_ids(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """User security groups"""
        pass
    service_account_id: typing.Text
    """ID of the service account used for access to Object Storage."""

    deletion_protection: builtins.bool
    """Deletion Protection inhibits deletion of the cluster"""

    @property
    def maintenance_window(self) -> yandex.cloud.mdb.elasticsearch.v1.maintenance_pb2.MaintenanceWindow:
        """Window of maintenance operations."""
        pass
    def __init__(self,
        *,
        cluster_id: typing.Text = ...,
        update_mask: typing.Optional[google.protobuf.field_mask_pb2.FieldMask] = ...,
        description: typing.Text = ...,
        labels: typing.Optional[typing.Mapping[typing.Text, typing.Text]] = ...,
        config_spec: typing.Optional[global___ConfigSpecUpdate] = ...,
        name: typing.Text = ...,
        security_group_ids: typing.Optional[typing.Iterable[typing.Text]] = ...,
        service_account_id: typing.Text = ...,
        deletion_protection: builtins.bool = ...,
        maintenance_window: typing.Optional[yandex.cloud.mdb.elasticsearch.v1.maintenance_pb2.MaintenanceWindow] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["config_spec",b"config_spec","maintenance_window",b"maintenance_window","update_mask",b"update_mask"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["cluster_id",b"cluster_id","config_spec",b"config_spec","deletion_protection",b"deletion_protection","description",b"description","labels",b"labels","maintenance_window",b"maintenance_window","name",b"name","security_group_ids",b"security_group_ids","service_account_id",b"service_account_id","update_mask",b"update_mask"]) -> None: ...
global___UpdateClusterRequest = UpdateClusterRequest

class UpdateClusterMetadata(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    CLUSTER_ID_FIELD_NUMBER: builtins.int
    cluster_id: typing.Text
    """ID of the Elasticsearch cluster that is being updated."""

    def __init__(self,
        *,
        cluster_id: typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["cluster_id",b"cluster_id"]) -> None: ...
global___UpdateClusterMetadata = UpdateClusterMetadata

class DeleteClusterRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    CLUSTER_ID_FIELD_NUMBER: builtins.int
    cluster_id: typing.Text
    """ID of the Elasticsearch cluster to delete.

    To get the Elasticsearch cluster ID, make a [ClusterService.List] request.
    """

    def __init__(self,
        *,
        cluster_id: typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["cluster_id",b"cluster_id"]) -> None: ...
global___DeleteClusterRequest = DeleteClusterRequest

class DeleteClusterMetadata(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    CLUSTER_ID_FIELD_NUMBER: builtins.int
    cluster_id: typing.Text
    """ID of the Elasticsearch cluster that is being deleted."""

    def __init__(self,
        *,
        cluster_id: typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["cluster_id",b"cluster_id"]) -> None: ...
global___DeleteClusterMetadata = DeleteClusterMetadata

class ListClusterLogsRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    class _ServiceType:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _ServiceTypeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[ListClusterLogsRequest._ServiceType.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
        SERVICE_TYPE_UNSPECIFIED: ListClusterLogsRequest._ServiceType.ValueType  # 0
        ELASTICSEARCH: ListClusterLogsRequest._ServiceType.ValueType  # 1
        KIBANA: ListClusterLogsRequest._ServiceType.ValueType  # 2
    class ServiceType(_ServiceType, metaclass=_ServiceTypeEnumTypeWrapper):
        pass

    SERVICE_TYPE_UNSPECIFIED: ListClusterLogsRequest.ServiceType.ValueType  # 0
    ELASTICSEARCH: ListClusterLogsRequest.ServiceType.ValueType  # 1
    KIBANA: ListClusterLogsRequest.ServiceType.ValueType  # 2

    CLUSTER_ID_FIELD_NUMBER: builtins.int
    COLUMN_FILTER_FIELD_NUMBER: builtins.int
    FROM_TIME_FIELD_NUMBER: builtins.int
    TO_TIME_FIELD_NUMBER: builtins.int
    PAGE_SIZE_FIELD_NUMBER: builtins.int
    PAGE_TOKEN_FIELD_NUMBER: builtins.int
    ALWAYS_NEXT_PAGE_TOKEN_FIELD_NUMBER: builtins.int
    FILTER_FIELD_NUMBER: builtins.int
    SERVICE_TYPE_FIELD_NUMBER: builtins.int
    cluster_id: typing.Text
    """ID of the Elasticsearch cluster to request logs for.

    To get the Elasticsearch cluster ID, make a [ClusterService.List] request.
    """

    @property
    def column_filter(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """Columns from the logs table to request.

        If no columns are specified, full log records are returned.
        """
        pass
    @property
    def from_time(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """Start timestamp for the logs request."""
        pass
    @property
    def to_time(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """End timestamp for the logs request."""
        pass
    page_size: builtins.int
    """The maximum number of results per page to return.

    If the number of available results is larger than `page_size`, the service returns a [ListClusterLogsResponse.next_page_token] that can be used to get the next page of results in subsequent list requests.
    """

    page_token: typing.Text
    """Page token.

    To get the next page of results, set `page_token` to the [ListClusterLogsResponse.next_page_token] returned by the previous list request.
    """

    always_next_page_token: builtins.bool
    """The flag that defines behavior of providing the next page token.

    If this flag is set to `true`, this API method will always return [ListClusterLogsResponse.next_page_token], even if current page is empty.
    """

    filter: typing.Text
    """A filter expression that filters resources listed in the response.

    The expression must specify:
    1. The field name to filter by. Currently filtering can be applied to the `hostname` field.
    2. An `=` operator.
    3. The value in double quotes (`"`). Must be 1-63 characters long and match the regular expression `[a-z0-9.-]{1,61}`.

    Example of a filter: `message.hostname='node1.db.cloud.yandex.net'`
    """

    service_type: global___ListClusterLogsRequest.ServiceType.ValueType
    """Type of the service to request logs about."""

    def __init__(self,
        *,
        cluster_id: typing.Text = ...,
        column_filter: typing.Optional[typing.Iterable[typing.Text]] = ...,
        from_time: typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        to_time: typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        page_size: builtins.int = ...,
        page_token: typing.Text = ...,
        always_next_page_token: builtins.bool = ...,
        filter: typing.Text = ...,
        service_type: global___ListClusterLogsRequest.ServiceType.ValueType = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["from_time",b"from_time","to_time",b"to_time"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["always_next_page_token",b"always_next_page_token","cluster_id",b"cluster_id","column_filter",b"column_filter","filter",b"filter","from_time",b"from_time","page_size",b"page_size","page_token",b"page_token","service_type",b"service_type","to_time",b"to_time"]) -> None: ...
global___ListClusterLogsRequest = ListClusterLogsRequest

class LogRecord(google.protobuf.message.Message):
    """A single log record."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    class MessageEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor
        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: typing.Text
        value: typing.Text
        def __init__(self,
            *,
            key: typing.Text = ...,
            value: typing.Text = ...,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["key",b"key","value",b"value"]) -> None: ...

    TIMESTAMP_FIELD_NUMBER: builtins.int
    MESSAGE_FIELD_NUMBER: builtins.int
    @property
    def timestamp(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """Log record timestamp."""
        pass
    @property
    def message(self) -> google.protobuf.internal.containers.ScalarMap[typing.Text, typing.Text]:
        """Contents of the log record."""
        pass
    def __init__(self,
        *,
        timestamp: typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        message: typing.Optional[typing.Mapping[typing.Text, typing.Text]] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["timestamp",b"timestamp"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["message",b"message","timestamp",b"timestamp"]) -> None: ...
global___LogRecord = LogRecord

class ListClusterLogsResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    LOGS_FIELD_NUMBER: builtins.int
    NEXT_PAGE_TOKEN_FIELD_NUMBER: builtins.int
    @property
    def logs(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___LogRecord]:
        """Requested log records."""
        pass
    next_page_token: typing.Text
    """Token that allows you to get the next page of results for list requests.

    If the number of results is larger than [ListClusterLogsRequest.page_size], use `next_page_token` as the value for the [ListClusterLogsRequest.page_token] query parameter in the next list request.
    Each subsequent list request will have its own `next_page_token` to continue paging through the results.

    This value is interchangeable with [StreamLogRecord.next_record_token] from StreamLogs method.
    """

    def __init__(self,
        *,
        logs: typing.Optional[typing.Iterable[global___LogRecord]] = ...,
        next_page_token: typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["logs",b"logs","next_page_token",b"next_page_token"]) -> None: ...
global___ListClusterLogsResponse = ListClusterLogsResponse

class StreamLogRecord(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    RECORD_FIELD_NUMBER: builtins.int
    NEXT_RECORD_TOKEN_FIELD_NUMBER: builtins.int
    @property
    def record(self) -> global___LogRecord:
        """One of the requested log records."""
        pass
    next_record_token: typing.Text
    """This token allows you to continue streaming logs starting from the exact same record.

    To continue streaming, specify value of `next_record_token` as value for [StreamClusterLogsRequest.record_token] parameter in the next StreamLogs request.

    This value is interchangeable with [ListClusterLogsResponse.next_page_token] from ListLogs method.
    """

    def __init__(self,
        *,
        record: typing.Optional[global___LogRecord] = ...,
        next_record_token: typing.Text = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["record",b"record"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["next_record_token",b"next_record_token","record",b"record"]) -> None: ...
global___StreamLogRecord = StreamLogRecord

class StreamClusterLogsRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    class _ServiceType:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _ServiceTypeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[StreamClusterLogsRequest._ServiceType.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
        SERVICE_TYPE_UNSPECIFIED: StreamClusterLogsRequest._ServiceType.ValueType  # 0
        ELASTICSEARCH: StreamClusterLogsRequest._ServiceType.ValueType  # 1
        KIBANA: StreamClusterLogsRequest._ServiceType.ValueType  # 2
    class ServiceType(_ServiceType, metaclass=_ServiceTypeEnumTypeWrapper):
        pass

    SERVICE_TYPE_UNSPECIFIED: StreamClusterLogsRequest.ServiceType.ValueType  # 0
    ELASTICSEARCH: StreamClusterLogsRequest.ServiceType.ValueType  # 1
    KIBANA: StreamClusterLogsRequest.ServiceType.ValueType  # 2

    CLUSTER_ID_FIELD_NUMBER: builtins.int
    COLUMN_FILTER_FIELD_NUMBER: builtins.int
    FROM_TIME_FIELD_NUMBER: builtins.int
    TO_TIME_FIELD_NUMBER: builtins.int
    RECORD_TOKEN_FIELD_NUMBER: builtins.int
    FILTER_FIELD_NUMBER: builtins.int
    SERVICE_TYPE_FIELD_NUMBER: builtins.int
    cluster_id: typing.Text
    """ID of the Elasticsearch cluster.

    To get the Elasticsearch cluster ID, make a [ClusterService.List] request.
    """

    @property
    def column_filter(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """Columns from logs table to get in the response.

        If no columns are specified, full log records are returned.
        """
        pass
    @property
    def from_time(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """Start timestamp for the logs request."""
        pass
    @property
    def to_time(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """End timestamp for the logs request.

        If this field is not set, all existing logs will be sent and then the new ones asthey appear.
        In essence it has `tail -f` semantics.
        """
        pass
    record_token: typing.Text
    """Record token.

    Set `record_token` to the [StreamLogRecord.next_record_token] returned by a previous [ClusterService.StreamLogs] request to start streaming from next log record.
    """

    filter: typing.Text
    """A filter expression that filters resources listed in the response.

    The expression must specify:
    1. The field name to filter by. Currently filtering can be applied to the `hostname` field.
    2. An `=` operator.
    3. The value in double quotes (`"`). Must be 3-63 characters long and match the regular expression `[a-z][-a-z0-9]{1,61}[a-z0-9]`.

    Example of a filter: `message.hostname='node1.db.cloud.yandex.net'`
    """

    service_type: global___StreamClusterLogsRequest.ServiceType.ValueType
    """Type of the service to request logs about."""

    def __init__(self,
        *,
        cluster_id: typing.Text = ...,
        column_filter: typing.Optional[typing.Iterable[typing.Text]] = ...,
        from_time: typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        to_time: typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        record_token: typing.Text = ...,
        filter: typing.Text = ...,
        service_type: global___StreamClusterLogsRequest.ServiceType.ValueType = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["from_time",b"from_time","to_time",b"to_time"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["cluster_id",b"cluster_id","column_filter",b"column_filter","filter",b"filter","from_time",b"from_time","record_token",b"record_token","service_type",b"service_type","to_time",b"to_time"]) -> None: ...
global___StreamClusterLogsRequest = StreamClusterLogsRequest

class ListClusterOperationsRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    CLUSTER_ID_FIELD_NUMBER: builtins.int
    PAGE_SIZE_FIELD_NUMBER: builtins.int
    PAGE_TOKEN_FIELD_NUMBER: builtins.int
    cluster_id: typing.Text
    """ID of the Elasticsearch cluster to list operations for.

    To get the Elasticsearch cluster ID, make a [ClusterService.List] request.
    """

    page_size: builtins.int
    """The maximum number of results per page to return.

    If the number of available results is larger than `page_size`, the service returns a [ListClusterOperationsResponse.next_page_token] that can be used to get the next page of results in subsequent list requests.
    """

    page_token: typing.Text
    """Page token.

    To get the next page of results, set `page_token` to the [ListClusterOperationsResponse.next_page_token] returned by the previous list request.
    """

    def __init__(self,
        *,
        cluster_id: typing.Text = ...,
        page_size: builtins.int = ...,
        page_token: typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["cluster_id",b"cluster_id","page_size",b"page_size","page_token",b"page_token"]) -> None: ...
global___ListClusterOperationsRequest = ListClusterOperationsRequest

class ListClusterOperationsResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    OPERATIONS_FIELD_NUMBER: builtins.int
    NEXT_PAGE_TOKEN_FIELD_NUMBER: builtins.int
    @property
    def operations(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[yandex.cloud.operation.operation_pb2.Operation]:
        """List of operations for the specified Elasticsearch cluster."""
        pass
    next_page_token: typing.Text
    """Token that allows you to get the next page of results for list requests.

    If the number of results is larger than [ListClusterOperationsRequest.page_size], use the `next_page_token` as the value for the [ListClusterOperationsRequest.page_token] query parameter in the next list request.
    Each subsequent list request will have its own `next_page_token` to continue paging through the results.
    """

    def __init__(self,
        *,
        operations: typing.Optional[typing.Iterable[yandex.cloud.operation.operation_pb2.Operation]] = ...,
        next_page_token: typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["next_page_token",b"next_page_token","operations",b"operations"]) -> None: ...
global___ListClusterOperationsResponse = ListClusterOperationsResponse

class ListClusterHostsRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    CLUSTER_ID_FIELD_NUMBER: builtins.int
    PAGE_SIZE_FIELD_NUMBER: builtins.int
    PAGE_TOKEN_FIELD_NUMBER: builtins.int
    cluster_id: typing.Text
    """ID of the Elasticsearch cluster.

    To get the Elasticsearch cluster ID, make a [ClusterService.List] request.
    """

    page_size: builtins.int
    """The maximum number of results per page to return.

    If the number of available results is larger than `page_size`, the service returns a [ListClusterHostsResponse.next_page_token] that can be used to get the next page of results in subsequent list requests.
    """

    page_token: typing.Text
    """Page token.

    To get the next page of results, set `page_token` to the [ListClusterHostsResponse.next_page_token] returned by the previous list request.
    """

    def __init__(self,
        *,
        cluster_id: typing.Text = ...,
        page_size: builtins.int = ...,
        page_token: typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["cluster_id",b"cluster_id","page_size",b"page_size","page_token",b"page_token"]) -> None: ...
global___ListClusterHostsRequest = ListClusterHostsRequest

class ListClusterHostsResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    HOSTS_FIELD_NUMBER: builtins.int
    NEXT_PAGE_TOKEN_FIELD_NUMBER: builtins.int
    @property
    def hosts(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[yandex.cloud.mdb.elasticsearch.v1.cluster_pb2.Host]:
        """List of hosts."""
        pass
    next_page_token: typing.Text
    """Token that allows you to get the next page of results for list requests.

    If the number of results is larger than [ListClusterHostsRequest.page_size], use the `next_page_token` as the value for the [ListClusterHostsRequest.page_token] query parameter in the next list request.
    Each subsequent list request will have its own `next_page_token` to continue paging through the results.
    """

    def __init__(self,
        *,
        hosts: typing.Optional[typing.Iterable[yandex.cloud.mdb.elasticsearch.v1.cluster_pb2.Host]] = ...,
        next_page_token: typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["hosts",b"hosts","next_page_token",b"next_page_token"]) -> None: ...
global___ListClusterHostsResponse = ListClusterHostsResponse

class MoveClusterRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    CLUSTER_ID_FIELD_NUMBER: builtins.int
    DESTINATION_FOLDER_ID_FIELD_NUMBER: builtins.int
    cluster_id: typing.Text
    """ID of the Elasticsearch cluster to move.

    To get the Elasticsearch cluster ID, make a [ClusterService.List] request.
    """

    destination_folder_id: typing.Text
    """ID of the destination folder."""

    def __init__(self,
        *,
        cluster_id: typing.Text = ...,
        destination_folder_id: typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["cluster_id",b"cluster_id","destination_folder_id",b"destination_folder_id"]) -> None: ...
global___MoveClusterRequest = MoveClusterRequest

class MoveClusterMetadata(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    CLUSTER_ID_FIELD_NUMBER: builtins.int
    SOURCE_FOLDER_ID_FIELD_NUMBER: builtins.int
    DESTINATION_FOLDER_ID_FIELD_NUMBER: builtins.int
    cluster_id: typing.Text
    """ID of the Elasticsearch cluster being moved."""

    source_folder_id: typing.Text
    """ID of the source folder."""

    destination_folder_id: typing.Text
    """ID of the destination folder."""

    def __init__(self,
        *,
        cluster_id: typing.Text = ...,
        source_folder_id: typing.Text = ...,
        destination_folder_id: typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["cluster_id",b"cluster_id","destination_folder_id",b"destination_folder_id","source_folder_id",b"source_folder_id"]) -> None: ...
global___MoveClusterMetadata = MoveClusterMetadata

class StartClusterRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    CLUSTER_ID_FIELD_NUMBER: builtins.int
    cluster_id: typing.Text
    """ID of the Elasticsearch cluster to start.

    To get the Elasticsearch cluster ID, make a [ClusterService.List] request.
    """

    def __init__(self,
        *,
        cluster_id: typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["cluster_id",b"cluster_id"]) -> None: ...
global___StartClusterRequest = StartClusterRequest

class StartClusterMetadata(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    CLUSTER_ID_FIELD_NUMBER: builtins.int
    cluster_id: typing.Text
    """ID of the Elasticsearch cluster."""

    def __init__(self,
        *,
        cluster_id: typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["cluster_id",b"cluster_id"]) -> None: ...
global___StartClusterMetadata = StartClusterMetadata

class StopClusterRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    CLUSTER_ID_FIELD_NUMBER: builtins.int
    cluster_id: typing.Text
    """ID of the Elasticsearch cluster to stop.

    To get the Elasticsearch cluster ID, make a [ClusterService.List] request.
    """

    def __init__(self,
        *,
        cluster_id: typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["cluster_id",b"cluster_id"]) -> None: ...
global___StopClusterRequest = StopClusterRequest

class StopClusterMetadata(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    CLUSTER_ID_FIELD_NUMBER: builtins.int
    cluster_id: typing.Text
    """ID of the Elasticsearch cluster."""

    def __init__(self,
        *,
        cluster_id: typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["cluster_id",b"cluster_id"]) -> None: ...
global___StopClusterMetadata = StopClusterMetadata

class HostSpec(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    ZONE_ID_FIELD_NUMBER: builtins.int
    SUBNET_ID_FIELD_NUMBER: builtins.int
    ASSIGN_PUBLIC_IP_FIELD_NUMBER: builtins.int
    TYPE_FIELD_NUMBER: builtins.int
    SHARD_NAME_FIELD_NUMBER: builtins.int
    zone_id: typing.Text
    """ID of the availability zone where the host resides."""

    subnet_id: typing.Text
    """ID of the subnet the host resides in."""

    assign_public_ip: builtins.bool
    """The flag that defines whether a public IP address is assigned to the host.

    If the value is `true`, then this host is available on the Internet via it's public IP address.
    """

    type: yandex.cloud.mdb.elasticsearch.v1.cluster_pb2.Host.Type.ValueType
    """Host type."""

    shard_name: typing.Text
    """The shard name to create on the host."""

    def __init__(self,
        *,
        zone_id: typing.Text = ...,
        subnet_id: typing.Text = ...,
        assign_public_ip: builtins.bool = ...,
        type: yandex.cloud.mdb.elasticsearch.v1.cluster_pb2.Host.Type.ValueType = ...,
        shard_name: typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["assign_public_ip",b"assign_public_ip","shard_name",b"shard_name","subnet_id",b"subnet_id","type",b"type","zone_id",b"zone_id"]) -> None: ...
global___HostSpec = HostSpec

class ElasticsearchSpec(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    class DataNode(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor
        ELASTICSEARCH_CONFIG_7_FIELD_NUMBER: builtins.int
        RESOURCES_FIELD_NUMBER: builtins.int
        @property
        def elasticsearch_config_7(self) -> yandex.cloud.mdb.elasticsearch.v1.config.elasticsearch_pb2.ElasticsearchConfig7: ...
        @property
        def resources(self) -> yandex.cloud.mdb.elasticsearch.v1.cluster_pb2.Resources:
            """Resources allocated to Elasticsearch data nodes."""
            pass
        def __init__(self,
            *,
            elasticsearch_config_7: typing.Optional[yandex.cloud.mdb.elasticsearch.v1.config.elasticsearch_pb2.ElasticsearchConfig7] = ...,
            resources: typing.Optional[yandex.cloud.mdb.elasticsearch.v1.cluster_pb2.Resources] = ...,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions.Literal["config",b"config","elasticsearch_config_7",b"elasticsearch_config_7","resources",b"resources"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing_extensions.Literal["config",b"config","elasticsearch_config_7",b"elasticsearch_config_7","resources",b"resources"]) -> None: ...
        def WhichOneof(self, oneof_group: typing_extensions.Literal["config",b"config"]) -> typing.Optional[typing_extensions.Literal["elasticsearch_config_7"]]: ...

    class MasterNode(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor
        RESOURCES_FIELD_NUMBER: builtins.int
        @property
        def resources(self) -> yandex.cloud.mdb.elasticsearch.v1.cluster_pb2.Resources:
            """Resources allocated to Elasticsearch master nodes."""
            pass
        def __init__(self,
            *,
            resources: typing.Optional[yandex.cloud.mdb.elasticsearch.v1.cluster_pb2.Resources] = ...,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions.Literal["resources",b"resources"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing_extensions.Literal["resources",b"resources"]) -> None: ...

    DATA_NODE_FIELD_NUMBER: builtins.int
    MASTER_NODE_FIELD_NUMBER: builtins.int
    PLUGINS_FIELD_NUMBER: builtins.int
    @property
    def data_node(self) -> global___ElasticsearchSpec.DataNode:
        """Configuration and resource allocation for Elasticsearch data nodes."""
        pass
    @property
    def master_node(self) -> global___ElasticsearchSpec.MasterNode:
        """Configuration and resource allocation for Elasticsearch master nodes."""
        pass
    @property
    def plugins(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """Cluster wide plugins"""
        pass
    def __init__(self,
        *,
        data_node: typing.Optional[global___ElasticsearchSpec.DataNode] = ...,
        master_node: typing.Optional[global___ElasticsearchSpec.MasterNode] = ...,
        plugins: typing.Optional[typing.Iterable[typing.Text]] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["data_node",b"data_node","master_node",b"master_node"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["data_node",b"data_node","master_node",b"master_node","plugins",b"plugins"]) -> None: ...
global___ElasticsearchSpec = ElasticsearchSpec

class ConfigSpec(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    VERSION_FIELD_NUMBER: builtins.int
    ELASTICSEARCH_SPEC_FIELD_NUMBER: builtins.int
    EDITION_FIELD_NUMBER: builtins.int
    ADMIN_PASSWORD_FIELD_NUMBER: builtins.int
    version: typing.Text
    """Elasticsearch version.
    No formal validation, a list of supported versions should suffice.
    """

    @property
    def elasticsearch_spec(self) -> global___ElasticsearchSpec:
        """Configuration and resource allocation for Elasticsearch nodes."""
        pass
    edition: typing.Text
    """ElasticSearch edition."""

    admin_password: typing.Text
    """ElasticSearch admin password."""

    def __init__(self,
        *,
        version: typing.Text = ...,
        elasticsearch_spec: typing.Optional[global___ElasticsearchSpec] = ...,
        edition: typing.Text = ...,
        admin_password: typing.Text = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["elasticsearch_spec",b"elasticsearch_spec"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["admin_password",b"admin_password","edition",b"edition","elasticsearch_spec",b"elasticsearch_spec","version",b"version"]) -> None: ...
global___ConfigSpec = ConfigSpec

class ConfigSpecUpdate(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    VERSION_FIELD_NUMBER: builtins.int
    ELASTICSEARCH_SPEC_FIELD_NUMBER: builtins.int
    EDITION_FIELD_NUMBER: builtins.int
    ADMIN_PASSWORD_FIELD_NUMBER: builtins.int
    version: typing.Text
    """Elasticsearch version.
    No formal validation, a list of supported versions should suffice.
    """

    @property
    def elasticsearch_spec(self) -> global___ElasticsearchSpec:
        """Configuration and resource allocation for Elasticsearch nodes."""
        pass
    edition: typing.Text
    """ElasticSearch edition."""

    admin_password: typing.Text
    """ElasticSearch admin password."""

    def __init__(self,
        *,
        version: typing.Text = ...,
        elasticsearch_spec: typing.Optional[global___ElasticsearchSpec] = ...,
        edition: typing.Text = ...,
        admin_password: typing.Text = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["elasticsearch_spec",b"elasticsearch_spec"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["admin_password",b"admin_password","edition",b"edition","elasticsearch_spec",b"elasticsearch_spec","version",b"version"]) -> None: ...
global___ConfigSpecUpdate = ConfigSpecUpdate

class AddClusterHostsRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    CLUSTER_ID_FIELD_NUMBER: builtins.int
    HOST_SPECS_FIELD_NUMBER: builtins.int
    cluster_id: typing.Text
    """ID of the Elasticsearch cluster.

    To get the Elasticsearch cluster ID, make a [ClusterService.List] request.
    """

    @property
    def host_specs(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___HostSpec]:
        """One or more configurations of hosts to be added to the Elasticsearch cluster."""
        pass
    def __init__(self,
        *,
        cluster_id: typing.Text = ...,
        host_specs: typing.Optional[typing.Iterable[global___HostSpec]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["cluster_id",b"cluster_id","host_specs",b"host_specs"]) -> None: ...
global___AddClusterHostsRequest = AddClusterHostsRequest

class AddClusterHostsMetadata(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    CLUSTER_ID_FIELD_NUMBER: builtins.int
    HOST_NAMES_FIELD_NUMBER: builtins.int
    cluster_id: typing.Text
    """ID of the Elasticsearch cluster."""

    @property
    def host_names(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """Names of the host that are being added."""
        pass
    def __init__(self,
        *,
        cluster_id: typing.Text = ...,
        host_names: typing.Optional[typing.Iterable[typing.Text]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["cluster_id",b"cluster_id","host_names",b"host_names"]) -> None: ...
global___AddClusterHostsMetadata = AddClusterHostsMetadata

class DeleteClusterHostsRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    CLUSTER_ID_FIELD_NUMBER: builtins.int
    HOST_NAMES_FIELD_NUMBER: builtins.int
    cluster_id: typing.Text
    """ID of the Elasticsearch cluster.

    To get the Elasticsearch cluster ID, make a [ClusterService.List] request.
    """

    @property
    def host_names(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """Names of the hosts to delete."""
        pass
    def __init__(self,
        *,
        cluster_id: typing.Text = ...,
        host_names: typing.Optional[typing.Iterable[typing.Text]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["cluster_id",b"cluster_id","host_names",b"host_names"]) -> None: ...
global___DeleteClusterHostsRequest = DeleteClusterHostsRequest

class DeleteClusterHostsMetadata(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    CLUSTER_ID_FIELD_NUMBER: builtins.int
    HOST_NAMES_FIELD_NUMBER: builtins.int
    cluster_id: typing.Text
    """ID of the Elasticsearch cluster."""

    @property
    def host_names(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """Names of the hosts that are being deleted."""
        pass
    def __init__(self,
        *,
        cluster_id: typing.Text = ...,
        host_names: typing.Optional[typing.Iterable[typing.Text]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["cluster_id",b"cluster_id","host_names",b"host_names"]) -> None: ...
global___DeleteClusterHostsMetadata = DeleteClusterHostsMetadata

class RescheduleMaintenanceRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    class _RescheduleType:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _RescheduleTypeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[RescheduleMaintenanceRequest._RescheduleType.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
        RESCHEDULE_TYPE_UNSPECIFIED: RescheduleMaintenanceRequest._RescheduleType.ValueType  # 0
        IMMEDIATE: RescheduleMaintenanceRequest._RescheduleType.ValueType  # 1
        NEXT_AVAILABLE_WINDOW: RescheduleMaintenanceRequest._RescheduleType.ValueType  # 2
        SPECIFIC_TIME: RescheduleMaintenanceRequest._RescheduleType.ValueType  # 3
    class RescheduleType(_RescheduleType, metaclass=_RescheduleTypeEnumTypeWrapper):
        pass

    RESCHEDULE_TYPE_UNSPECIFIED: RescheduleMaintenanceRequest.RescheduleType.ValueType  # 0
    IMMEDIATE: RescheduleMaintenanceRequest.RescheduleType.ValueType  # 1
    NEXT_AVAILABLE_WINDOW: RescheduleMaintenanceRequest.RescheduleType.ValueType  # 2
    SPECIFIC_TIME: RescheduleMaintenanceRequest.RescheduleType.ValueType  # 3

    CLUSTER_ID_FIELD_NUMBER: builtins.int
    RESCHEDULE_TYPE_FIELD_NUMBER: builtins.int
    DELAYED_UNTIL_FIELD_NUMBER: builtins.int
    cluster_id: typing.Text
    """Required. ID of the Elasticsearch cluster to maintenance reschedule."""

    reschedule_type: global___RescheduleMaintenanceRequest.RescheduleType.ValueType
    """Required. The type of reschedule request."""

    @property
    def delayed_until(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """The time for SPECIFIC_TIME reschedule. Limited by two weeks since first time scheduled."""
        pass
    def __init__(self,
        *,
        cluster_id: typing.Text = ...,
        reschedule_type: global___RescheduleMaintenanceRequest.RescheduleType.ValueType = ...,
        delayed_until: typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["delayed_until",b"delayed_until"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["cluster_id",b"cluster_id","delayed_until",b"delayed_until","reschedule_type",b"reschedule_type"]) -> None: ...
global___RescheduleMaintenanceRequest = RescheduleMaintenanceRequest

class RescheduleMaintenanceMetadata(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    CLUSTER_ID_FIELD_NUMBER: builtins.int
    DELAYED_UNTIL_FIELD_NUMBER: builtins.int
    cluster_id: typing.Text
    """Required. ID of the Elasticsearch cluster."""

    @property
    def delayed_until(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """Required. New time of the planned maintenance. Can be in the past for rescheduled to "IMMEDIATE"."""
        pass
    def __init__(self,
        *,
        cluster_id: typing.Text = ...,
        delayed_until: typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["delayed_until",b"delayed_until"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["cluster_id",b"cluster_id","delayed_until",b"delayed_until"]) -> None: ...
global___RescheduleMaintenanceMetadata = RescheduleMaintenanceMetadata

class RestoreClusterRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    class LabelsEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor
        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: typing.Text
        value: typing.Text
        def __init__(self,
            *,
            key: typing.Text = ...,
            value: typing.Text = ...,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["key",b"key","value",b"value"]) -> None: ...

    BACKUP_ID_FIELD_NUMBER: builtins.int
    NAME_FIELD_NUMBER: builtins.int
    DESCRIPTION_FIELD_NUMBER: builtins.int
    LABELS_FIELD_NUMBER: builtins.int
    ENVIRONMENT_FIELD_NUMBER: builtins.int
    CONFIG_SPEC_FIELD_NUMBER: builtins.int
    HOST_SPECS_FIELD_NUMBER: builtins.int
    NETWORK_ID_FIELD_NUMBER: builtins.int
    SECURITY_GROUP_IDS_FIELD_NUMBER: builtins.int
    SERVICE_ACCOUNT_ID_FIELD_NUMBER: builtins.int
    DELETION_PROTECTION_FIELD_NUMBER: builtins.int
    FOLDER_ID_FIELD_NUMBER: builtins.int
    EXTENSION_SPECS_FIELD_NUMBER: builtins.int
    backup_id: typing.Text
    """Required. ID of the backup to restore from."""

    name: typing.Text
    """Name of the ElasticSearch cluster. The name must be unique within the folder."""

    description: typing.Text
    """Description of the ElasticSearch cluster."""

    @property
    def labels(self) -> google.protobuf.internal.containers.ScalarMap[typing.Text, typing.Text]:
        """Custom labels for the ElasticSearch cluster as `` key:value `` pairs. Maximum 64 per resource.
        For example, "project": "mvp" or "source": "dictionary".
        """
        pass
    environment: yandex.cloud.mdb.elasticsearch.v1.cluster_pb2.Cluster.Environment.ValueType
    """Deployment environment of the ElasticSearch cluster."""

    @property
    def config_spec(self) -> global___ConfigSpec:
        """Configuration and resources for hosts that should be created for the ElasticSearch cluster."""
        pass
    @property
    def host_specs(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___HostSpec]:
        """Required. Configuration of ElasticSearch hosts."""
        pass
    network_id: typing.Text
    """ID of the network to create the cluster in."""

    @property
    def security_group_ids(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """User security groups"""
        pass
    service_account_id: typing.Text
    """ID of the service account used for access to Object Storage."""

    deletion_protection: builtins.bool
    """Deletion Protection inhibits deletion of the cluster"""

    folder_id: typing.Text
    """ID of the folder to create the ElasticSearch cluster in."""

    @property
    def extension_specs(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[yandex.cloud.mdb.elasticsearch.v1.extension_pb2.ExtensionSpec]:
        """optional"""
        pass
    def __init__(self,
        *,
        backup_id: typing.Text = ...,
        name: typing.Text = ...,
        description: typing.Text = ...,
        labels: typing.Optional[typing.Mapping[typing.Text, typing.Text]] = ...,
        environment: yandex.cloud.mdb.elasticsearch.v1.cluster_pb2.Cluster.Environment.ValueType = ...,
        config_spec: typing.Optional[global___ConfigSpec] = ...,
        host_specs: typing.Optional[typing.Iterable[global___HostSpec]] = ...,
        network_id: typing.Text = ...,
        security_group_ids: typing.Optional[typing.Iterable[typing.Text]] = ...,
        service_account_id: typing.Text = ...,
        deletion_protection: builtins.bool = ...,
        folder_id: typing.Text = ...,
        extension_specs: typing.Optional[typing.Iterable[yandex.cloud.mdb.elasticsearch.v1.extension_pb2.ExtensionSpec]] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["config_spec",b"config_spec"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["backup_id",b"backup_id","config_spec",b"config_spec","deletion_protection",b"deletion_protection","description",b"description","environment",b"environment","extension_specs",b"extension_specs","folder_id",b"folder_id","host_specs",b"host_specs","labels",b"labels","name",b"name","network_id",b"network_id","security_group_ids",b"security_group_ids","service_account_id",b"service_account_id"]) -> None: ...
global___RestoreClusterRequest = RestoreClusterRequest

class RestoreClusterMetadata(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    CLUSTER_ID_FIELD_NUMBER: builtins.int
    BACKUP_ID_FIELD_NUMBER: builtins.int
    cluster_id: typing.Text
    """Required. ID of the new ElasticSearch cluster."""

    backup_id: typing.Text
    """Required. ID of the backup used for recovery."""

    def __init__(self,
        *,
        cluster_id: typing.Text = ...,
        backup_id: typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["backup_id",b"backup_id","cluster_id",b"cluster_id"]) -> None: ...
global___RestoreClusterMetadata = RestoreClusterMetadata

class BackupClusterRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    CLUSTER_ID_FIELD_NUMBER: builtins.int
    cluster_id: typing.Text
    """Required. ID of the ElasticSearch cluster to back up."""

    def __init__(self,
        *,
        cluster_id: typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["cluster_id",b"cluster_id"]) -> None: ...
global___BackupClusterRequest = BackupClusterRequest

class BackupClusterMetadata(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    CLUSTER_ID_FIELD_NUMBER: builtins.int
    cluster_id: typing.Text
    """ID of the ElasticSearch cluster."""

    def __init__(self,
        *,
        cluster_id: typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["cluster_id",b"cluster_id"]) -> None: ...
global___BackupClusterMetadata = BackupClusterMetadata

class ListClusterBackupsRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    CLUSTER_ID_FIELD_NUMBER: builtins.int
    PAGE_SIZE_FIELD_NUMBER: builtins.int
    PAGE_TOKEN_FIELD_NUMBER: builtins.int
    cluster_id: typing.Text
    """Required. ID of the Elasticsearch cluster."""

    page_size: builtins.int
    """The maximum number of results per page that should be returned. If the number of available
    results is larger than `page_size`, the service returns a `next_page_token` that can be used
    to get the next page of results in subsequent ListClusterBackups requests.
    Acceptable values are 0 to 1000, inclusive. Default value: 100.
    """

    page_token: typing.Text
    """Page token. Set `page_token` to the `next_page_token` returned by a previous ListClusterBackups
    request to get the next page of results.
    """

    def __init__(self,
        *,
        cluster_id: typing.Text = ...,
        page_size: builtins.int = ...,
        page_token: typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["cluster_id",b"cluster_id","page_size",b"page_size","page_token",b"page_token"]) -> None: ...
global___ListClusterBackupsRequest = ListClusterBackupsRequest

class ListClusterBackupsResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    BACKUPS_FIELD_NUMBER: builtins.int
    NEXT_PAGE_TOKEN_FIELD_NUMBER: builtins.int
    @property
    def backups(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[yandex.cloud.mdb.elasticsearch.v1.backup_pb2.Backup]:
        """Requested list of backups."""
        pass
    next_page_token: typing.Text
    """This token allows you to get the next page of results for ListClusterBackups requests,
    if the number of results is larger than `page_size` specified in the request.
    To get the next page, specify the value of `next_page_token` as a value for
    the `page_token` parameter in the next ListClusterBackups request. Subsequent ListClusterBackups
    requests will have their own `next_page_token` to continue paging through the results.
    """

    def __init__(self,
        *,
        backups: typing.Optional[typing.Iterable[yandex.cloud.mdb.elasticsearch.v1.backup_pb2.Backup]] = ...,
        next_page_token: typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["backups",b"backups","next_page_token",b"next_page_token"]) -> None: ...
global___ListClusterBackupsResponse = ListClusterBackupsResponse
