"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import google.protobuf.descriptor
import google.protobuf.field_mask_pb2
import google.protobuf.internal.containers
import google.protobuf.internal.enum_type_wrapper
import google.protobuf.message
import google.protobuf.timestamp_pb2
import google.protobuf.wrappers_pb2
import google.type.timeofday_pb2
import typing
import typing_extensions
import yandex.cloud.mdb.redis.v1.backup_pb2
import yandex.cloud.mdb.redis.v1.cluster_pb2
import yandex.cloud.mdb.redis.v1.config.redis5_0_pb2
import yandex.cloud.mdb.redis.v1.config.redis6_0_pb2
import yandex.cloud.mdb.redis.v1.config.redis6_2_pb2
import yandex.cloud.mdb.redis.v1.maintenance_pb2
import yandex.cloud.operation.operation_pb2

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

class GetClusterRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    CLUSTER_ID_FIELD_NUMBER: builtins.int
    cluster_id: typing.Text
    """ID of the Redis cluster to return.
    To get the cluster ID use a [ClusterService.List] request.
    """

    def __init__(self,
        *,
        cluster_id: typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["cluster_id",b"cluster_id"]) -> None: ...
global___GetClusterRequest = GetClusterRequest

class ListClustersRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    FOLDER_ID_FIELD_NUMBER: builtins.int
    PAGE_SIZE_FIELD_NUMBER: builtins.int
    PAGE_TOKEN_FIELD_NUMBER: builtins.int
    FILTER_FIELD_NUMBER: builtins.int
    folder_id: typing.Text
    """ID of the folder to list Redis clusters in.
    To get the folder ID, use a [yandex.cloud.resourcemanager.v1.FolderService.List] request.
    """

    page_size: builtins.int
    """The maximum number of results per page to return. If the number of available
    results is larger than [page_size], the service returns a [ListClustersResponse.next_page_token]
    that can be used to get the next page of results in subsequent list requests.
    """

    page_token: typing.Text
    """Page token. To get the next page of results, set [page_token] to the [ListClustersResponse.next_page_token]
    returned by the previous list request.
    """

    filter: typing.Text
    """A filter expression that filters clusters listed in the response.
    The expression must specify:
    1. The field name. Currently you can only use filtering with the [Cluster.name] field.
    2. An `=` operator.
    3. The value in double quotes (`"`). Must be 3-63 characters long and match the regular expression `[a-z]([-a-z0-9]{,61}[a-z0-9])?`.
    """

    def __init__(self,
        *,
        folder_id: typing.Text = ...,
        page_size: builtins.int = ...,
        page_token: typing.Text = ...,
        filter: typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["filter",b"filter","folder_id",b"folder_id","page_size",b"page_size","page_token",b"page_token"]) -> None: ...
global___ListClustersRequest = ListClustersRequest

class ListClustersResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    CLUSTERS_FIELD_NUMBER: builtins.int
    NEXT_PAGE_TOKEN_FIELD_NUMBER: builtins.int
    @property
    def clusters(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[yandex.cloud.mdb.redis.v1.cluster_pb2.Cluster]:
        """List of Redis clusters."""
        pass
    next_page_token: typing.Text
    """This token allows you to get the next page of results for list requests. If the number of results
    is larger than [ListClustersRequest.page_size], use the [next_page_token] as the value
    for the [ListClustersRequest.page_token] parameter in the next list request. Each subsequent
    list request will have its own [next_page_token] to continue paging through the results.
    """

    def __init__(self,
        *,
        clusters: typing.Optional[typing.Iterable[yandex.cloud.mdb.redis.v1.cluster_pb2.Cluster]] = ...,
        next_page_token: typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["clusters",b"clusters","next_page_token",b"next_page_token"]) -> None: ...
global___ListClustersResponse = ListClustersResponse

class CreateClusterRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    class LabelsEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor
        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: typing.Text
        value: typing.Text
        def __init__(self,
            *,
            key: typing.Text = ...,
            value: typing.Text = ...,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["key",b"key","value",b"value"]) -> None: ...

    FOLDER_ID_FIELD_NUMBER: builtins.int
    NAME_FIELD_NUMBER: builtins.int
    DESCRIPTION_FIELD_NUMBER: builtins.int
    LABELS_FIELD_NUMBER: builtins.int
    ENVIRONMENT_FIELD_NUMBER: builtins.int
    CONFIG_SPEC_FIELD_NUMBER: builtins.int
    HOST_SPECS_FIELD_NUMBER: builtins.int
    NETWORK_ID_FIELD_NUMBER: builtins.int
    SHARDED_FIELD_NUMBER: builtins.int
    SECURITY_GROUP_IDS_FIELD_NUMBER: builtins.int
    TLS_ENABLED_FIELD_NUMBER: builtins.int
    DELETION_PROTECTION_FIELD_NUMBER: builtins.int
    PERSISTENCE_MODE_FIELD_NUMBER: builtins.int
    folder_id: typing.Text
    """ID of the folder to create the Redis cluster in."""

    name: typing.Text
    """Name of the Redis cluster. The name must be unique within the folder."""

    description: typing.Text
    """Description of the Redis cluster."""

    @property
    def labels(self) -> google.protobuf.internal.containers.ScalarMap[typing.Text, typing.Text]:
        """Custom labels for the Redis cluster as `key:value` pairs. Maximum 64 per cluster.
        For example, "project": "mvp" or "source": "dictionary".
        """
        pass
    environment: yandex.cloud.mdb.redis.v1.cluster_pb2.Cluster.Environment.ValueType
    """Deployment environment of the Redis cluster."""

    @property
    def config_spec(self) -> global___ConfigSpec:
        """Configuration and resources for hosts that should be created for the Redis cluster."""
        pass
    @property
    def host_specs(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___HostSpec]:
        """Individual configurations for hosts that should be created for the Redis cluster."""
        pass
    network_id: typing.Text
    """ID of the network to create the cluster in."""

    sharded: builtins.bool
    """Redis cluster mode on/off."""

    @property
    def security_group_ids(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """User security groups"""
        pass
    @property
    def tls_enabled(self) -> google.protobuf.wrappers_pb2.BoolValue:
        """TLS port and functionality on\\off"""
        pass
    deletion_protection: builtins.bool
    """Deletion Protection inhibits deletion of the cluster"""

    persistence_mode: yandex.cloud.mdb.redis.v1.cluster_pb2.Cluster.PersistenceMode.ValueType
    """Persistence mode"""

    def __init__(self,
        *,
        folder_id: typing.Text = ...,
        name: typing.Text = ...,
        description: typing.Text = ...,
        labels: typing.Optional[typing.Mapping[typing.Text, typing.Text]] = ...,
        environment: yandex.cloud.mdb.redis.v1.cluster_pb2.Cluster.Environment.ValueType = ...,
        config_spec: typing.Optional[global___ConfigSpec] = ...,
        host_specs: typing.Optional[typing.Iterable[global___HostSpec]] = ...,
        network_id: typing.Text = ...,
        sharded: builtins.bool = ...,
        security_group_ids: typing.Optional[typing.Iterable[typing.Text]] = ...,
        tls_enabled: typing.Optional[google.protobuf.wrappers_pb2.BoolValue] = ...,
        deletion_protection: builtins.bool = ...,
        persistence_mode: yandex.cloud.mdb.redis.v1.cluster_pb2.Cluster.PersistenceMode.ValueType = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["config_spec",b"config_spec","tls_enabled",b"tls_enabled"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["config_spec",b"config_spec","deletion_protection",b"deletion_protection","description",b"description","environment",b"environment","folder_id",b"folder_id","host_specs",b"host_specs","labels",b"labels","name",b"name","network_id",b"network_id","persistence_mode",b"persistence_mode","security_group_ids",b"security_group_ids","sharded",b"sharded","tls_enabled",b"tls_enabled"]) -> None: ...
global___CreateClusterRequest = CreateClusterRequest

class CreateClusterMetadata(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    CLUSTER_ID_FIELD_NUMBER: builtins.int
    cluster_id: typing.Text
    """ID of the Redis cluster that is being created."""

    def __init__(self,
        *,
        cluster_id: typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["cluster_id",b"cluster_id"]) -> None: ...
global___CreateClusterMetadata = CreateClusterMetadata

class UpdateClusterRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    class LabelsEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor
        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: typing.Text
        value: typing.Text
        def __init__(self,
            *,
            key: typing.Text = ...,
            value: typing.Text = ...,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["key",b"key","value",b"value"]) -> None: ...

    CLUSTER_ID_FIELD_NUMBER: builtins.int
    UPDATE_MASK_FIELD_NUMBER: builtins.int
    DESCRIPTION_FIELD_NUMBER: builtins.int
    LABELS_FIELD_NUMBER: builtins.int
    CONFIG_SPEC_FIELD_NUMBER: builtins.int
    NAME_FIELD_NUMBER: builtins.int
    MAINTENANCE_WINDOW_FIELD_NUMBER: builtins.int
    SECURITY_GROUP_IDS_FIELD_NUMBER: builtins.int
    DELETION_PROTECTION_FIELD_NUMBER: builtins.int
    PERSISTENCE_MODE_FIELD_NUMBER: builtins.int
    cluster_id: typing.Text
    """ID of the Redis cluster to update.
    To get the Redis cluster ID, use a [ClusterService.List] request.
    """

    @property
    def update_mask(self) -> google.protobuf.field_mask_pb2.FieldMask:
        """Field mask that specifies which fields of the Redis cluster should be updated."""
        pass
    description: typing.Text
    """New description of the Redis cluster."""

    @property
    def labels(self) -> google.protobuf.internal.containers.ScalarMap[typing.Text, typing.Text]:
        """Custom labels for the Redis cluster as `` key:value `` pairs. Maximum 64 per cluster.
        For example, "project": "mvp" or "source": "dictionary".

        The new set of labels will completely replace the old ones. To add a label, request the current
        set with the [ClusterService.Get] method, then send an [ClusterService.Update] request with the new label added to the set.
        """
        pass
    @property
    def config_spec(self) -> global___ConfigSpec:
        """New configuration and resources for hosts in the cluster."""
        pass
    name: typing.Text
    """New name for the cluster."""

    @property
    def maintenance_window(self) -> yandex.cloud.mdb.redis.v1.maintenance_pb2.MaintenanceWindow:
        """New maintenance window settings for the cluster."""
        pass
    @property
    def security_group_ids(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """User security groups"""
        pass
    deletion_protection: builtins.bool
    """Deletion Protection inhibits deletion of the cluster"""

    persistence_mode: yandex.cloud.mdb.redis.v1.cluster_pb2.Cluster.PersistenceMode.ValueType
    """Persistence mode"""

    def __init__(self,
        *,
        cluster_id: typing.Text = ...,
        update_mask: typing.Optional[google.protobuf.field_mask_pb2.FieldMask] = ...,
        description: typing.Text = ...,
        labels: typing.Optional[typing.Mapping[typing.Text, typing.Text]] = ...,
        config_spec: typing.Optional[global___ConfigSpec] = ...,
        name: typing.Text = ...,
        maintenance_window: typing.Optional[yandex.cloud.mdb.redis.v1.maintenance_pb2.MaintenanceWindow] = ...,
        security_group_ids: typing.Optional[typing.Iterable[typing.Text]] = ...,
        deletion_protection: builtins.bool = ...,
        persistence_mode: yandex.cloud.mdb.redis.v1.cluster_pb2.Cluster.PersistenceMode.ValueType = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["config_spec",b"config_spec","maintenance_window",b"maintenance_window","update_mask",b"update_mask"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["cluster_id",b"cluster_id","config_spec",b"config_spec","deletion_protection",b"deletion_protection","description",b"description","labels",b"labels","maintenance_window",b"maintenance_window","name",b"name","persistence_mode",b"persistence_mode","security_group_ids",b"security_group_ids","update_mask",b"update_mask"]) -> None: ...
global___UpdateClusterRequest = UpdateClusterRequest

class UpdateClusterMetadata(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    CLUSTER_ID_FIELD_NUMBER: builtins.int
    cluster_id: typing.Text
    """ID of the Redis cluster that is being updated."""

    def __init__(self,
        *,
        cluster_id: typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["cluster_id",b"cluster_id"]) -> None: ...
global___UpdateClusterMetadata = UpdateClusterMetadata

class DeleteClusterRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    CLUSTER_ID_FIELD_NUMBER: builtins.int
    cluster_id: typing.Text
    """ID of the Redis cluster to delete.
    To get the Redis cluster ID, use a [ClusterService.List] request.
    """

    def __init__(self,
        *,
        cluster_id: typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["cluster_id",b"cluster_id"]) -> None: ...
global___DeleteClusterRequest = DeleteClusterRequest

class DeleteClusterMetadata(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    CLUSTER_ID_FIELD_NUMBER: builtins.int
    cluster_id: typing.Text
    """ID of the Redis cluster that is being deleted."""

    def __init__(self,
        *,
        cluster_id: typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["cluster_id",b"cluster_id"]) -> None: ...
global___DeleteClusterMetadata = DeleteClusterMetadata

class StartClusterRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    CLUSTER_ID_FIELD_NUMBER: builtins.int
    cluster_id: typing.Text
    """ID of the Redis cluster to start."""

    def __init__(self,
        *,
        cluster_id: typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["cluster_id",b"cluster_id"]) -> None: ...
global___StartClusterRequest = StartClusterRequest

class StartClusterMetadata(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    CLUSTER_ID_FIELD_NUMBER: builtins.int
    cluster_id: typing.Text
    """ID of the Redis cluster."""

    def __init__(self,
        *,
        cluster_id: typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["cluster_id",b"cluster_id"]) -> None: ...
global___StartClusterMetadata = StartClusterMetadata

class StopClusterRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    CLUSTER_ID_FIELD_NUMBER: builtins.int
    cluster_id: typing.Text
    """ID of the Redis cluster to stop."""

    def __init__(self,
        *,
        cluster_id: typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["cluster_id",b"cluster_id"]) -> None: ...
global___StopClusterRequest = StopClusterRequest

class StopClusterMetadata(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    CLUSTER_ID_FIELD_NUMBER: builtins.int
    cluster_id: typing.Text
    """ID of the Redis cluster."""

    def __init__(self,
        *,
        cluster_id: typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["cluster_id",b"cluster_id"]) -> None: ...
global___StopClusterMetadata = StopClusterMetadata

class MoveClusterRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    CLUSTER_ID_FIELD_NUMBER: builtins.int
    DESTINATION_FOLDER_ID_FIELD_NUMBER: builtins.int
    cluster_id: typing.Text
    """ID of the Redis cluster to move."""

    destination_folder_id: typing.Text
    """ID of the destination folder."""

    def __init__(self,
        *,
        cluster_id: typing.Text = ...,
        destination_folder_id: typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["cluster_id",b"cluster_id","destination_folder_id",b"destination_folder_id"]) -> None: ...
global___MoveClusterRequest = MoveClusterRequest

class MoveClusterMetadata(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    CLUSTER_ID_FIELD_NUMBER: builtins.int
    SOURCE_FOLDER_ID_FIELD_NUMBER: builtins.int
    DESTINATION_FOLDER_ID_FIELD_NUMBER: builtins.int
    cluster_id: typing.Text
    """ID of the Redis cluster being moved."""

    source_folder_id: typing.Text
    """ID of the source folder."""

    destination_folder_id: typing.Text
    """ID of the destination folder."""

    def __init__(self,
        *,
        cluster_id: typing.Text = ...,
        source_folder_id: typing.Text = ...,
        destination_folder_id: typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["cluster_id",b"cluster_id","destination_folder_id",b"destination_folder_id","source_folder_id",b"source_folder_id"]) -> None: ...
global___MoveClusterMetadata = MoveClusterMetadata

class UpdateClusterHostsRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    CLUSTER_ID_FIELD_NUMBER: builtins.int
    UPDATE_HOST_SPECS_FIELD_NUMBER: builtins.int
    cluster_id: typing.Text
    """ID of the Redis cluster to update hosts in.
    To get the Redis cluster ID, use a [ClusterService.List] request.
    """

    @property
    def update_host_specs(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___UpdateHostSpec]:
        """New configurations to apply to hosts."""
        pass
    def __init__(self,
        *,
        cluster_id: typing.Text = ...,
        update_host_specs: typing.Optional[typing.Iterable[global___UpdateHostSpec]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["cluster_id",b"cluster_id","update_host_specs",b"update_host_specs"]) -> None: ...
global___UpdateClusterHostsRequest = UpdateClusterHostsRequest

class UpdateClusterHostsMetadata(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    CLUSTER_ID_FIELD_NUMBER: builtins.int
    HOST_NAMES_FIELD_NUMBER: builtins.int
    cluster_id: typing.Text
    """ID of the Redis cluster to update hosts in."""

    @property
    def host_names(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """Names of hosts that are being updated."""
        pass
    def __init__(self,
        *,
        cluster_id: typing.Text = ...,
        host_names: typing.Optional[typing.Iterable[typing.Text]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["cluster_id",b"cluster_id","host_names",b"host_names"]) -> None: ...
global___UpdateClusterHostsMetadata = UpdateClusterHostsMetadata

class BackupClusterRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    CLUSTER_ID_FIELD_NUMBER: builtins.int
    cluster_id: typing.Text
    """ID of the Redis cluster to back up.
    To get the Redis cluster ID, use a [ClusterService.List] request.
    """

    def __init__(self,
        *,
        cluster_id: typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["cluster_id",b"cluster_id"]) -> None: ...
global___BackupClusterRequest = BackupClusterRequest

class BackupClusterMetadata(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    CLUSTER_ID_FIELD_NUMBER: builtins.int
    cluster_id: typing.Text
    """ID of the Redis cluster that is being backed up."""

    def __init__(self,
        *,
        cluster_id: typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["cluster_id",b"cluster_id"]) -> None: ...
global___BackupClusterMetadata = BackupClusterMetadata

class RestoreClusterRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    class LabelsEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor
        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: typing.Text
        value: typing.Text
        def __init__(self,
            *,
            key: typing.Text = ...,
            value: typing.Text = ...,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["key",b"key","value",b"value"]) -> None: ...

    BACKUP_ID_FIELD_NUMBER: builtins.int
    NAME_FIELD_NUMBER: builtins.int
    DESCRIPTION_FIELD_NUMBER: builtins.int
    LABELS_FIELD_NUMBER: builtins.int
    ENVIRONMENT_FIELD_NUMBER: builtins.int
    CONFIG_SPEC_FIELD_NUMBER: builtins.int
    HOST_SPECS_FIELD_NUMBER: builtins.int
    NETWORK_ID_FIELD_NUMBER: builtins.int
    FOLDER_ID_FIELD_NUMBER: builtins.int
    SECURITY_GROUP_IDS_FIELD_NUMBER: builtins.int
    TLS_ENABLED_FIELD_NUMBER: builtins.int
    PERSISTENCE_MODE_FIELD_NUMBER: builtins.int
    backup_id: typing.Text
    """ID of the backup to create a cluster from.
    To get the backup ID, use a [ClusterService.ListBackups] request.
    """

    name: typing.Text
    """Name of the new Redis cluster. The name must be unique within the folder."""

    description: typing.Text
    """Description of the new Redis cluster."""

    @property
    def labels(self) -> google.protobuf.internal.containers.ScalarMap[typing.Text, typing.Text]:
        """Custom labels for the Redis cluster as `` key:value `` pairs. Maximum 64 per cluster.
        For example, "project": "mvp" or "source": "dictionary".
        """
        pass
    environment: yandex.cloud.mdb.redis.v1.cluster_pb2.Cluster.Environment.ValueType
    """Deployment environment of the new Redis cluster."""

    @property
    def config_spec(self) -> global___ConfigSpec:
        """Configuration for the Redis cluster to be created."""
        pass
    @property
    def host_specs(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___HostSpec]:
        """Configurations for Redis hosts that should be created for
        the cluster that is being created from the backup.
        """
        pass
    network_id: typing.Text
    """ID of the network to create the Redis cluster in."""

    folder_id: typing.Text
    """ID of the folder to create the Redis cluster in."""

    @property
    def security_group_ids(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """User security groups"""
        pass
    @property
    def tls_enabled(self) -> google.protobuf.wrappers_pb2.BoolValue:
        """TLS port and functionality on\\off"""
        pass
    persistence_mode: yandex.cloud.mdb.redis.v1.cluster_pb2.Cluster.PersistenceMode.ValueType
    """Persistence mode"""

    def __init__(self,
        *,
        backup_id: typing.Text = ...,
        name: typing.Text = ...,
        description: typing.Text = ...,
        labels: typing.Optional[typing.Mapping[typing.Text, typing.Text]] = ...,
        environment: yandex.cloud.mdb.redis.v1.cluster_pb2.Cluster.Environment.ValueType = ...,
        config_spec: typing.Optional[global___ConfigSpec] = ...,
        host_specs: typing.Optional[typing.Iterable[global___HostSpec]] = ...,
        network_id: typing.Text = ...,
        folder_id: typing.Text = ...,
        security_group_ids: typing.Optional[typing.Iterable[typing.Text]] = ...,
        tls_enabled: typing.Optional[google.protobuf.wrappers_pb2.BoolValue] = ...,
        persistence_mode: yandex.cloud.mdb.redis.v1.cluster_pb2.Cluster.PersistenceMode.ValueType = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["config_spec",b"config_spec","tls_enabled",b"tls_enabled"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["backup_id",b"backup_id","config_spec",b"config_spec","description",b"description","environment",b"environment","folder_id",b"folder_id","host_specs",b"host_specs","labels",b"labels","name",b"name","network_id",b"network_id","persistence_mode",b"persistence_mode","security_group_ids",b"security_group_ids","tls_enabled",b"tls_enabled"]) -> None: ...
global___RestoreClusterRequest = RestoreClusterRequest

class RestoreClusterMetadata(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    CLUSTER_ID_FIELD_NUMBER: builtins.int
    BACKUP_ID_FIELD_NUMBER: builtins.int
    cluster_id: typing.Text
    """ID of the new Redis cluster that is being created from a backup."""

    backup_id: typing.Text
    """ID of the backup that is being used for creating a cluster."""

    def __init__(self,
        *,
        cluster_id: typing.Text = ...,
        backup_id: typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["backup_id",b"backup_id","cluster_id",b"cluster_id"]) -> None: ...
global___RestoreClusterMetadata = RestoreClusterMetadata

class StartClusterFailoverRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    CLUSTER_ID_FIELD_NUMBER: builtins.int
    HOST_NAMES_FIELD_NUMBER: builtins.int
    cluster_id: typing.Text
    """ID of the Redis cluster to start failover on."""

    @property
    def host_names(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """List of hostnames which should not be masters. Can be empty for sentinel clusters or can contain multiple hosts for sharded clusters."""
        pass
    def __init__(self,
        *,
        cluster_id: typing.Text = ...,
        host_names: typing.Optional[typing.Iterable[typing.Text]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["cluster_id",b"cluster_id","host_names",b"host_names"]) -> None: ...
global___StartClusterFailoverRequest = StartClusterFailoverRequest

class StartClusterFailoverMetadata(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    CLUSTER_ID_FIELD_NUMBER: builtins.int
    HOST_NAMES_FIELD_NUMBER: builtins.int
    cluster_id: typing.Text
    """ID of the Redis cluster on which failover will be initiated."""

    @property
    def host_names(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """List of hostnames which should not be masters. Can be empty for sentinel clusters or can contain multiple hosts for sharded clusters."""
        pass
    def __init__(self,
        *,
        cluster_id: typing.Text = ...,
        host_names: typing.Optional[typing.Iterable[typing.Text]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["cluster_id",b"cluster_id","host_names",b"host_names"]) -> None: ...
global___StartClusterFailoverMetadata = StartClusterFailoverMetadata

class RescheduleMaintenanceRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    class _RescheduleType:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _RescheduleTypeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[RescheduleMaintenanceRequest._RescheduleType.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
        RESCHEDULE_TYPE_UNSPECIFIED: RescheduleMaintenanceRequest._RescheduleType.ValueType  # 0
        IMMEDIATE: RescheduleMaintenanceRequest._RescheduleType.ValueType  # 1
        """Start the maintenance operation immediately."""

        NEXT_AVAILABLE_WINDOW: RescheduleMaintenanceRequest._RescheduleType.ValueType  # 2
        """Start the maintenance operation within the next available maintenance window."""

        SPECIFIC_TIME: RescheduleMaintenanceRequest._RescheduleType.ValueType  # 3
        """Start the maintenance operation at the specific time."""

    class RescheduleType(_RescheduleType, metaclass=_RescheduleTypeEnumTypeWrapper):
        pass

    RESCHEDULE_TYPE_UNSPECIFIED: RescheduleMaintenanceRequest.RescheduleType.ValueType  # 0
    IMMEDIATE: RescheduleMaintenanceRequest.RescheduleType.ValueType  # 1
    """Start the maintenance operation immediately."""

    NEXT_AVAILABLE_WINDOW: RescheduleMaintenanceRequest.RescheduleType.ValueType  # 2
    """Start the maintenance operation within the next available maintenance window."""

    SPECIFIC_TIME: RescheduleMaintenanceRequest.RescheduleType.ValueType  # 3
    """Start the maintenance operation at the specific time."""


    CLUSTER_ID_FIELD_NUMBER: builtins.int
    RESCHEDULE_TYPE_FIELD_NUMBER: builtins.int
    DELAYED_UNTIL_FIELD_NUMBER: builtins.int
    cluster_id: typing.Text
    """ID of the Redis cluster to reschedule the maintenance operation for."""

    reschedule_type: global___RescheduleMaintenanceRequest.RescheduleType.ValueType
    """The type of reschedule request."""

    @property
    def delayed_until(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """The time until which this maintenance operation should be delayed. The value should be ahead of the first time when the maintenance operation has been scheduled for no more than two weeks. The value can also point to the past moment of time if [reschedule_type.IMMEDIATE] reschedule type is chosen."""
        pass
    def __init__(self,
        *,
        cluster_id: typing.Text = ...,
        reschedule_type: global___RescheduleMaintenanceRequest.RescheduleType.ValueType = ...,
        delayed_until: typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["delayed_until",b"delayed_until"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["cluster_id",b"cluster_id","delayed_until",b"delayed_until","reschedule_type",b"reschedule_type"]) -> None: ...
global___RescheduleMaintenanceRequest = RescheduleMaintenanceRequest

class RescheduleMaintenanceMetadata(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    CLUSTER_ID_FIELD_NUMBER: builtins.int
    DELAYED_UNTIL_FIELD_NUMBER: builtins.int
    cluster_id: typing.Text
    """Required. ID of the Redis cluster."""

    @property
    def delayed_until(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """Required. The time until which this maintenance operation is to be delayed."""
        pass
    def __init__(self,
        *,
        cluster_id: typing.Text = ...,
        delayed_until: typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["delayed_until",b"delayed_until"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["cluster_id",b"cluster_id","delayed_until",b"delayed_until"]) -> None: ...
global___RescheduleMaintenanceMetadata = RescheduleMaintenanceMetadata

class LogRecord(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    class MessageEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor
        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: typing.Text
        value: typing.Text
        def __init__(self,
            *,
            key: typing.Text = ...,
            value: typing.Text = ...,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["key",b"key","value",b"value"]) -> None: ...

    TIMESTAMP_FIELD_NUMBER: builtins.int
    MESSAGE_FIELD_NUMBER: builtins.int
    @property
    def timestamp(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """Log record timestamp in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) text format."""
        pass
    @property
    def message(self) -> google.protobuf.internal.containers.ScalarMap[typing.Text, typing.Text]:
        """Contents of the log record."""
        pass
    def __init__(self,
        *,
        timestamp: typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        message: typing.Optional[typing.Mapping[typing.Text, typing.Text]] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["timestamp",b"timestamp"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["message",b"message","timestamp",b"timestamp"]) -> None: ...
global___LogRecord = LogRecord

class ListClusterLogsRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    class _ServiceType:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _ServiceTypeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[ListClusterLogsRequest._ServiceType.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
        SERVICE_TYPE_UNSPECIFIED: ListClusterLogsRequest._ServiceType.ValueType  # 0
        REDIS: ListClusterLogsRequest._ServiceType.ValueType  # 1
        """Logs of Redis activity."""

    class ServiceType(_ServiceType, metaclass=_ServiceTypeEnumTypeWrapper):
        pass

    SERVICE_TYPE_UNSPECIFIED: ListClusterLogsRequest.ServiceType.ValueType  # 0
    REDIS: ListClusterLogsRequest.ServiceType.ValueType  # 1
    """Logs of Redis activity."""


    CLUSTER_ID_FIELD_NUMBER: builtins.int
    COLUMN_FILTER_FIELD_NUMBER: builtins.int
    SERVICE_TYPE_FIELD_NUMBER: builtins.int
    FROM_TIME_FIELD_NUMBER: builtins.int
    TO_TIME_FIELD_NUMBER: builtins.int
    PAGE_SIZE_FIELD_NUMBER: builtins.int
    PAGE_TOKEN_FIELD_NUMBER: builtins.int
    cluster_id: typing.Text
    """ID of the Redis cluster to request logs for.
    To get the Redis cluster ID use a [ClusterService.List] request.
    """

    @property
    def column_filter(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """Columns from the logs table to request.
        If no columns are specified, entire log records are returned.
        """
        pass
    service_type: global___ListClusterLogsRequest.ServiceType.ValueType
    @property
    def from_time(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """Start timestamp for the logs request, in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) text format."""
        pass
    @property
    def to_time(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """End timestamp for the logs request, in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) text format."""
        pass
    page_size: builtins.int
    """The maximum number of results per page to return. If the number of available
    results is larger than [page_size], the service returns a [ListClusterLogsResponse.next_page_token]
    that can be used to get the next page of results in subsequent list requests.
    """

    page_token: typing.Text
    """Page token. To get the next page of results, set [page_token] to the
    [ListClusterLogsResponse.next_page_token] returned by the previous list request.
    """

    def __init__(self,
        *,
        cluster_id: typing.Text = ...,
        column_filter: typing.Optional[typing.Iterable[typing.Text]] = ...,
        service_type: global___ListClusterLogsRequest.ServiceType.ValueType = ...,
        from_time: typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        to_time: typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        page_size: builtins.int = ...,
        page_token: typing.Text = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["from_time",b"from_time","to_time",b"to_time"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["cluster_id",b"cluster_id","column_filter",b"column_filter","from_time",b"from_time","page_size",b"page_size","page_token",b"page_token","service_type",b"service_type","to_time",b"to_time"]) -> None: ...
global___ListClusterLogsRequest = ListClusterLogsRequest

class ListClusterLogsResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    LOGS_FIELD_NUMBER: builtins.int
    NEXT_PAGE_TOKEN_FIELD_NUMBER: builtins.int
    @property
    def logs(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___LogRecord]:
        """Requested log records."""
        pass
    next_page_token: typing.Text
    """This token allows you to get the next page of results for list requests. If the number of results
    is larger than [ListClusterLogsRequest.page_size], use the [next_page_token] as the value
    for the [ListClusterLogsRequest.page_token] query parameter in the next list request.
    Each subsequent list request will have its own [next_page_token] to continue paging through the results.
    This value is interchangeable with `next_record_token` from StreamLogs method.
    """

    def __init__(self,
        *,
        logs: typing.Optional[typing.Iterable[global___LogRecord]] = ...,
        next_page_token: typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["logs",b"logs","next_page_token",b"next_page_token"]) -> None: ...
global___ListClusterLogsResponse = ListClusterLogsResponse

class StreamLogRecord(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    RECORD_FIELD_NUMBER: builtins.int
    NEXT_RECORD_TOKEN_FIELD_NUMBER: builtins.int
    @property
    def record(self) -> global___LogRecord:
        """One of the requested log records."""
        pass
    next_record_token: typing.Text
    """This token allows you to continue streaming logs starting from the exact
    same record. To continue streaming, specify value of `next_record_token`
    as value for `record_token` parameter in the next StreamLogs request.
    This value is interchangeable with `next_page_token` from ListLogs method.
    """

    def __init__(self,
        *,
        record: typing.Optional[global___LogRecord] = ...,
        next_record_token: typing.Text = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["record",b"record"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["next_record_token",b"next_record_token","record",b"record"]) -> None: ...
global___StreamLogRecord = StreamLogRecord

class StreamClusterLogsRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    class _ServiceType:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _ServiceTypeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[StreamClusterLogsRequest._ServiceType.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
        SERVICE_TYPE_UNSPECIFIED: StreamClusterLogsRequest._ServiceType.ValueType  # 0
        REDIS: StreamClusterLogsRequest._ServiceType.ValueType  # 1
        """Logs of Redis activity."""

    class ServiceType(_ServiceType, metaclass=_ServiceTypeEnumTypeWrapper):
        pass

    SERVICE_TYPE_UNSPECIFIED: StreamClusterLogsRequest.ServiceType.ValueType  # 0
    REDIS: StreamClusterLogsRequest.ServiceType.ValueType  # 1
    """Logs of Redis activity."""


    CLUSTER_ID_FIELD_NUMBER: builtins.int
    COLUMN_FILTER_FIELD_NUMBER: builtins.int
    SERVICE_TYPE_FIELD_NUMBER: builtins.int
    FROM_TIME_FIELD_NUMBER: builtins.int
    TO_TIME_FIELD_NUMBER: builtins.int
    RECORD_TOKEN_FIELD_NUMBER: builtins.int
    FILTER_FIELD_NUMBER: builtins.int
    cluster_id: typing.Text
    """Required. ID of the Redis cluster."""

    @property
    def column_filter(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """Columns from logs table to get in the response."""
        pass
    service_type: global___StreamClusterLogsRequest.ServiceType.ValueType
    @property
    def from_time(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """Start timestamp for the logs request."""
        pass
    @property
    def to_time(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """End timestamp for the logs request.
        If this field is not set, all existing logs will be sent and then the new ones as
        they appear. In essence it has 'tail -f' semantics.
        """
        pass
    record_token: typing.Text
    """Record token. Set `record_token` to the `next_record_token` returned by a previous StreamLogs
    request to start streaming from next log record.
    """

    filter: typing.Text
    """A filter expression that filters resources listed in the response.
    The expression must specify:
    1. The field name. Currently filtering can be applied to the [LogRecord.logs.hostname] field
    2. An `=` operator.
    3. The value in double quotes (`"`). Must be 3-63 characters long and match the regular expression `[a-z][-a-z0-9]{1,61}[a-z0-9]`.
    Examples of a filter `message.hostname='node1.db.cloud.yandex.net'`.
    """

    def __init__(self,
        *,
        cluster_id: typing.Text = ...,
        column_filter: typing.Optional[typing.Iterable[typing.Text]] = ...,
        service_type: global___StreamClusterLogsRequest.ServiceType.ValueType = ...,
        from_time: typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        to_time: typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        record_token: typing.Text = ...,
        filter: typing.Text = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["from_time",b"from_time","to_time",b"to_time"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["cluster_id",b"cluster_id","column_filter",b"column_filter","filter",b"filter","from_time",b"from_time","record_token",b"record_token","service_type",b"service_type","to_time",b"to_time"]) -> None: ...
global___StreamClusterLogsRequest = StreamClusterLogsRequest

class ListClusterOperationsRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    CLUSTER_ID_FIELD_NUMBER: builtins.int
    PAGE_SIZE_FIELD_NUMBER: builtins.int
    PAGE_TOKEN_FIELD_NUMBER: builtins.int
    cluster_id: typing.Text
    """ID of the Redis cluster to list operations for."""

    page_size: builtins.int
    """The maximum number of results per page to return. If the number of available
    results is larger than [page_size], the service returns a [ListClusterOperationsResponse.next_page_token]
    that can be used to get the next page of results in subsequent list requests.
    """

    page_token: typing.Text
    """Page token.  To get the next page of results, set [page_token] to the [ListClusterOperationsResponse.next_page_token]
    returned by the previous list request.
    """

    def __init__(self,
        *,
        cluster_id: typing.Text = ...,
        page_size: builtins.int = ...,
        page_token: typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["cluster_id",b"cluster_id","page_size",b"page_size","page_token",b"page_token"]) -> None: ...
global___ListClusterOperationsRequest = ListClusterOperationsRequest

class ListClusterOperationsResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    OPERATIONS_FIELD_NUMBER: builtins.int
    NEXT_PAGE_TOKEN_FIELD_NUMBER: builtins.int
    @property
    def operations(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[yandex.cloud.operation.operation_pb2.Operation]:
        """List of operations for the specified Redis cluster."""
        pass
    next_page_token: typing.Text
    """This token allows you to get the next page of results for list requests. If the number of results
    is larger than [ListClusterOperationsRequest.page_size], use the [next_page_token] as the value
    for the [ListClusterOperationsRequest.page_token] query parameter in the next list request.
    Each subsequent list request will have its own [next_page_token] to continue paging through the results.
    """

    def __init__(self,
        *,
        operations: typing.Optional[typing.Iterable[yandex.cloud.operation.operation_pb2.Operation]] = ...,
        next_page_token: typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["next_page_token",b"next_page_token","operations",b"operations"]) -> None: ...
global___ListClusterOperationsResponse = ListClusterOperationsResponse

class ListClusterBackupsRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    CLUSTER_ID_FIELD_NUMBER: builtins.int
    PAGE_SIZE_FIELD_NUMBER: builtins.int
    PAGE_TOKEN_FIELD_NUMBER: builtins.int
    cluster_id: typing.Text
    """ID of the Redis cluster.
    To get the Redis cluster ID use a [ClusterService.List] request.
    """

    page_size: builtins.int
    """The maximum number of results per page to return. If the number of available
    results is larger than [page_size], the service returns a [ListClusterBackupsResponse.next_page_token]
    that can be used to get the next page of results in subsequent list requests.
    """

    page_token: typing.Text
    """Page token.  To get the next page of results, set [page_token] to the [ListClusterBackupsResponse.next_page_token]
    returned by the previous list request.
    """

    def __init__(self,
        *,
        cluster_id: typing.Text = ...,
        page_size: builtins.int = ...,
        page_token: typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["cluster_id",b"cluster_id","page_size",b"page_size","page_token",b"page_token"]) -> None: ...
global___ListClusterBackupsRequest = ListClusterBackupsRequest

class ListClusterBackupsResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    BACKUPS_FIELD_NUMBER: builtins.int
    NEXT_PAGE_TOKEN_FIELD_NUMBER: builtins.int
    @property
    def backups(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[yandex.cloud.mdb.redis.v1.backup_pb2.Backup]:
        """List of Redis backups."""
        pass
    next_page_token: typing.Text
    """This token allows you to get the next page of results for list requests. If the number of results
    is larger than [ListClusterBackupsRequest.page_size], use the [next_page_token] as the value
    for the [ListClusterBackupsRequest.page_token] query parameter in the next list request.
    Each subsequent list request will have its own [next_page_token] to continue paging through the results.
    """

    def __init__(self,
        *,
        backups: typing.Optional[typing.Iterable[yandex.cloud.mdb.redis.v1.backup_pb2.Backup]] = ...,
        next_page_token: typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["backups",b"backups","next_page_token",b"next_page_token"]) -> None: ...
global___ListClusterBackupsResponse = ListClusterBackupsResponse

class ListClusterHostsRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    CLUSTER_ID_FIELD_NUMBER: builtins.int
    PAGE_SIZE_FIELD_NUMBER: builtins.int
    PAGE_TOKEN_FIELD_NUMBER: builtins.int
    cluster_id: typing.Text
    """ID of the Redis cluster.
    To get the Redis cluster ID use a [ClusterService.List] request.
    """

    page_size: builtins.int
    """The maximum number of results per page to return. If the number of available
    results is larger than [page_size], the service returns a [ListClusterHostsResponse.next_page_token]
    that can be used to get the next page of results in subsequent list requests.
    """

    page_token: typing.Text
    """Page token.  To get the next page of results, set [page_token] to the [ListClusterHostsResponse.next_page_token]
    returned by the previous list request.
    """

    def __init__(self,
        *,
        cluster_id: typing.Text = ...,
        page_size: builtins.int = ...,
        page_token: typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["cluster_id",b"cluster_id","page_size",b"page_size","page_token",b"page_token"]) -> None: ...
global___ListClusterHostsRequest = ListClusterHostsRequest

class ListClusterHostsResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    HOSTS_FIELD_NUMBER: builtins.int
    NEXT_PAGE_TOKEN_FIELD_NUMBER: builtins.int
    @property
    def hosts(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[yandex.cloud.mdb.redis.v1.cluster_pb2.Host]:
        """List of hosts for the cluster."""
        pass
    next_page_token: typing.Text
    """This token allows you to get the next page of results for list requests. If the number of results
    is larger than [ListClusterHostsRequest.page_size], use the [next_page_token] as the value
    for the [ListClusterHostsRequest.page_token] query parameter in the next list request.
    Each subsequent list request will have its own [next_page_token] to continue paging through the results.
    """

    def __init__(self,
        *,
        hosts: typing.Optional[typing.Iterable[yandex.cloud.mdb.redis.v1.cluster_pb2.Host]] = ...,
        next_page_token: typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["hosts",b"hosts","next_page_token",b"next_page_token"]) -> None: ...
global___ListClusterHostsResponse = ListClusterHostsResponse

class AddClusterHostsRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    CLUSTER_ID_FIELD_NUMBER: builtins.int
    HOST_SPECS_FIELD_NUMBER: builtins.int
    cluster_id: typing.Text
    """ID of the Redis cluster to add hosts to.
    To get the Redis cluster ID, use a [ClusterService.List] request.
    """

    @property
    def host_specs(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___HostSpec]:
        """Configurations for Redis hosts that should be added to the cluster."""
        pass
    def __init__(self,
        *,
        cluster_id: typing.Text = ...,
        host_specs: typing.Optional[typing.Iterable[global___HostSpec]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["cluster_id",b"cluster_id","host_specs",b"host_specs"]) -> None: ...
global___AddClusterHostsRequest = AddClusterHostsRequest

class AddClusterHostsMetadata(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    CLUSTER_ID_FIELD_NUMBER: builtins.int
    HOST_NAMES_FIELD_NUMBER: builtins.int
    cluster_id: typing.Text
    """ID of the Redis cluster to which the hosts are being added."""

    @property
    def host_names(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """Names of hosts that are being added to the cluster."""
        pass
    def __init__(self,
        *,
        cluster_id: typing.Text = ...,
        host_names: typing.Optional[typing.Iterable[typing.Text]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["cluster_id",b"cluster_id","host_names",b"host_names"]) -> None: ...
global___AddClusterHostsMetadata = AddClusterHostsMetadata

class DeleteClusterHostsRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    CLUSTER_ID_FIELD_NUMBER: builtins.int
    HOST_NAMES_FIELD_NUMBER: builtins.int
    cluster_id: typing.Text
    """ID of the Redis cluster to remove hosts from.
    To get the Redis cluster ID, use a [ClusterService.List] request.
    """

    @property
    def host_names(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """Names of hosts to delete."""
        pass
    def __init__(self,
        *,
        cluster_id: typing.Text = ...,
        host_names: typing.Optional[typing.Iterable[typing.Text]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["cluster_id",b"cluster_id","host_names",b"host_names"]) -> None: ...
global___DeleteClusterHostsRequest = DeleteClusterHostsRequest

class DeleteClusterHostsMetadata(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    CLUSTER_ID_FIELD_NUMBER: builtins.int
    HOST_NAMES_FIELD_NUMBER: builtins.int
    cluster_id: typing.Text
    """ID of the Redis cluster to remove hosts from."""

    @property
    def host_names(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """Names of hosts that are being deleted."""
        pass
    def __init__(self,
        *,
        cluster_id: typing.Text = ...,
        host_names: typing.Optional[typing.Iterable[typing.Text]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["cluster_id",b"cluster_id","host_names",b"host_names"]) -> None: ...
global___DeleteClusterHostsMetadata = DeleteClusterHostsMetadata

class GetClusterShardRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    CLUSTER_ID_FIELD_NUMBER: builtins.int
    SHARD_NAME_FIELD_NUMBER: builtins.int
    cluster_id: typing.Text
    """ID of the Redis cluster the shard belongs to.
    To get the cluster ID use a [ClusterService.List] request.
    """

    shard_name: typing.Text
    """Name of Redis shard to return.
    To get the shard name use a [ClusterService.ListShards] request.
    """

    def __init__(self,
        *,
        cluster_id: typing.Text = ...,
        shard_name: typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["cluster_id",b"cluster_id","shard_name",b"shard_name"]) -> None: ...
global___GetClusterShardRequest = GetClusterShardRequest

class ListClusterShardsRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    CLUSTER_ID_FIELD_NUMBER: builtins.int
    PAGE_SIZE_FIELD_NUMBER: builtins.int
    PAGE_TOKEN_FIELD_NUMBER: builtins.int
    cluster_id: typing.Text
    """ID of the Redis cluster to list shards in.
    To get the cluster ID use a [ClusterService.List] request.
    """

    page_size: builtins.int
    """The maximum number of results per page to return. If the number of available
    results is larger than [page_size],
    the service returns a [ListClusterShardsResponse.next_page_token]
    that can be used to get the next page of results in subsequent list requests.
    Default value: 100.
    """

    page_token: typing.Text
    """Page token. To get the next page of results, set [page_token] to the
    [ListClusterShardsResponse.next_page_token] returned by the previous list request.
    """

    def __init__(self,
        *,
        cluster_id: typing.Text = ...,
        page_size: builtins.int = ...,
        page_token: typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["cluster_id",b"cluster_id","page_size",b"page_size","page_token",b"page_token"]) -> None: ...
global___ListClusterShardsRequest = ListClusterShardsRequest

class ListClusterShardsResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    SHARDS_FIELD_NUMBER: builtins.int
    NEXT_PAGE_TOKEN_FIELD_NUMBER: builtins.int
    @property
    def shards(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[yandex.cloud.mdb.redis.v1.cluster_pb2.Shard]:
        """List of Redis shards."""
        pass
    next_page_token: typing.Text
    """This token allows you to get the next page of results for list requests. If the number of results
    is larger than [ListClusterShardsRequest.page_size], use
    the [next_page_token] as the value
    for the [ListClusterShardsRequest.page_token] query parameter
    in the next list request. Each subsequent list request will have its own
    [next_page_token] to continue paging through the results.
    """

    def __init__(self,
        *,
        shards: typing.Optional[typing.Iterable[yandex.cloud.mdb.redis.v1.cluster_pb2.Shard]] = ...,
        next_page_token: typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["next_page_token",b"next_page_token","shards",b"shards"]) -> None: ...
global___ListClusterShardsResponse = ListClusterShardsResponse

class AddClusterShardRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    CLUSTER_ID_FIELD_NUMBER: builtins.int
    SHARD_NAME_FIELD_NUMBER: builtins.int
    HOST_SPECS_FIELD_NUMBER: builtins.int
    cluster_id: typing.Text
    """ID of the Redis cluster to create a shard in.
    To get the cluster ID use a [ClusterService.List] request.
    """

    shard_name: typing.Text
    """Name of the shard.
    The name must be unique within the cluster.
    """

    @property
    def host_specs(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___HostSpec]:
        """Configurations for Redis hosts that should be created with the shard.
        Must contain at least one element.
        """
        pass
    def __init__(self,
        *,
        cluster_id: typing.Text = ...,
        shard_name: typing.Text = ...,
        host_specs: typing.Optional[typing.Iterable[global___HostSpec]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["cluster_id",b"cluster_id","host_specs",b"host_specs","shard_name",b"shard_name"]) -> None: ...
global___AddClusterShardRequest = AddClusterShardRequest

class AddClusterShardMetadata(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    CLUSTER_ID_FIELD_NUMBER: builtins.int
    SHARD_NAME_FIELD_NUMBER: builtins.int
    cluster_id: typing.Text
    """ID of the Redis cluster that a shard is being added to."""

    shard_name: typing.Text
    """Name of the Redis shard that is being created."""

    def __init__(self,
        *,
        cluster_id: typing.Text = ...,
        shard_name: typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["cluster_id",b"cluster_id","shard_name",b"shard_name"]) -> None: ...
global___AddClusterShardMetadata = AddClusterShardMetadata

class DeleteClusterShardRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    CLUSTER_ID_FIELD_NUMBER: builtins.int
    SHARD_NAME_FIELD_NUMBER: builtins.int
    cluster_id: typing.Text
    """ID of the Redis cluster the shard belongs to.
    To get the cluster ID use a [ClusterService.List] request.
    """

    shard_name: typing.Text
    """Name of the Redis shard to delete.
    To get the shard name use a [ClusterService.ListShards] request.
    """

    def __init__(self,
        *,
        cluster_id: typing.Text = ...,
        shard_name: typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["cluster_id",b"cluster_id","shard_name",b"shard_name"]) -> None: ...
global___DeleteClusterShardRequest = DeleteClusterShardRequest

class DeleteClusterShardMetadata(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    CLUSTER_ID_FIELD_NUMBER: builtins.int
    SHARD_NAME_FIELD_NUMBER: builtins.int
    cluster_id: typing.Text
    """ID of the Redis cluster the shard belongs to."""

    shard_name: typing.Text
    """Name of the Redis shard that is being deleted."""

    def __init__(self,
        *,
        cluster_id: typing.Text = ...,
        shard_name: typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["cluster_id",b"cluster_id","shard_name",b"shard_name"]) -> None: ...
global___DeleteClusterShardMetadata = DeleteClusterShardMetadata

class RebalanceClusterRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    CLUSTER_ID_FIELD_NUMBER: builtins.int
    cluster_id: typing.Text
    """ID of the Redis cluster to rebalance.
    To get the cluster ID use a [ClusterService.List] request.
    """

    def __init__(self,
        *,
        cluster_id: typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["cluster_id",b"cluster_id"]) -> None: ...
global___RebalanceClusterRequest = RebalanceClusterRequest

class RebalanceClusterMetadata(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    CLUSTER_ID_FIELD_NUMBER: builtins.int
    cluster_id: typing.Text
    """ID of the Redis cluster that is being rebalancing."""

    def __init__(self,
        *,
        cluster_id: typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["cluster_id",b"cluster_id"]) -> None: ...
global___RebalanceClusterMetadata = RebalanceClusterMetadata

class UpdateHostSpec(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    HOST_NAME_FIELD_NUMBER: builtins.int
    REPLICA_PRIORITY_FIELD_NUMBER: builtins.int
    ASSIGN_PUBLIC_IP_FIELD_NUMBER: builtins.int
    UPDATE_MASK_FIELD_NUMBER: builtins.int
    host_name: typing.Text
    """Name of the host to update.
    To get the Redis host name, use a [ClusterService.ListHosts] request.
    """

    @property
    def replica_priority(self) -> google.protobuf.wrappers_pb2.Int64Value:
        """A replica with a low priority number is considered better for promotion.
        A replica with priority of 0 will never be selected by Redis Sentinel for promotion.
        Works only for non-sharded clusters. Default value is 100.
        """
        pass
    assign_public_ip: builtins.bool
    """Whether the host should get a public IP address on update."""

    @property
    def update_mask(self) -> google.protobuf.field_mask_pb2.FieldMask:
        """Field mask that specifies which fields of the Redis host should be updated."""
        pass
    def __init__(self,
        *,
        host_name: typing.Text = ...,
        replica_priority: typing.Optional[google.protobuf.wrappers_pb2.Int64Value] = ...,
        assign_public_ip: builtins.bool = ...,
        update_mask: typing.Optional[google.protobuf.field_mask_pb2.FieldMask] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["replica_priority",b"replica_priority","update_mask",b"update_mask"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["assign_public_ip",b"assign_public_ip","host_name",b"host_name","replica_priority",b"replica_priority","update_mask",b"update_mask"]) -> None: ...
global___UpdateHostSpec = UpdateHostSpec

class HostSpec(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    ZONE_ID_FIELD_NUMBER: builtins.int
    SUBNET_ID_FIELD_NUMBER: builtins.int
    SHARD_NAME_FIELD_NUMBER: builtins.int
    REPLICA_PRIORITY_FIELD_NUMBER: builtins.int
    ASSIGN_PUBLIC_IP_FIELD_NUMBER: builtins.int
    zone_id: typing.Text
    """ID of the availability zone where the host resides.
    To get a list of available zones, use the [yandex.cloud.compute.v1.ZoneService.List] request.
    """

    subnet_id: typing.Text
    """ID of the subnet that the host should belong to. This subnet should be a part
    of the network that the cluster belongs to.
    The ID of the network is set in the field [Cluster.network_id].
    """

    shard_name: typing.Text
    """ID of the Redis shard the host belongs to.
    To get the shard ID use a [ClusterService.ListShards] request.
    """

    @property
    def replica_priority(self) -> google.protobuf.wrappers_pb2.Int64Value:
        """A replica with a low priority number is considered better for promotion.
        A replica with priority of 0 will never be selected by Redis Sentinel for promotion.
        Works only for non-sharded clusters. Default value is 100.
        """
        pass
    assign_public_ip: builtins.bool
    """Whether the host should get a public IP address on creation.

    Possible values:
    * false - don't assign a public IP to the host.
    * true - the host should have a public IP address.
    """

    def __init__(self,
        *,
        zone_id: typing.Text = ...,
        subnet_id: typing.Text = ...,
        shard_name: typing.Text = ...,
        replica_priority: typing.Optional[google.protobuf.wrappers_pb2.Int64Value] = ...,
        assign_public_ip: builtins.bool = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["replica_priority",b"replica_priority"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["assign_public_ip",b"assign_public_ip","replica_priority",b"replica_priority","shard_name",b"shard_name","subnet_id",b"subnet_id","zone_id",b"zone_id"]) -> None: ...
global___HostSpec = HostSpec

class ConfigSpec(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    VERSION_FIELD_NUMBER: builtins.int
    REDIS_CONFIG_5_0_FIELD_NUMBER: builtins.int
    REDIS_CONFIG_6_0_FIELD_NUMBER: builtins.int
    REDIS_CONFIG_6_2_FIELD_NUMBER: builtins.int
    RESOURCES_FIELD_NUMBER: builtins.int
    BACKUP_WINDOW_START_FIELD_NUMBER: builtins.int
    ACCESS_FIELD_NUMBER: builtins.int
    version: typing.Text
    """Version of Redis used in the cluster."""

    @property
    def redis_config_5_0(self) -> yandex.cloud.mdb.redis.v1.config.redis5_0_pb2.RedisConfig5_0: ...
    @property
    def redis_config_6_0(self) -> yandex.cloud.mdb.redis.v1.config.redis6_0_pb2.RedisConfig6_0: ...
    @property
    def redis_config_6_2(self) -> yandex.cloud.mdb.redis.v1.config.redis6_2_pb2.RedisConfig6_2: ...
    @property
    def resources(self) -> yandex.cloud.mdb.redis.v1.cluster_pb2.Resources:
        """Resources allocated to Redis hosts."""
        pass
    @property
    def backup_window_start(self) -> google.type.timeofday_pb2.TimeOfDay:
        """Time to start the daily backup, in the UTC timezone."""
        pass
    @property
    def access(self) -> yandex.cloud.mdb.redis.v1.cluster_pb2.Access:
        """Access policy to DB"""
        pass
    def __init__(self,
        *,
        version: typing.Text = ...,
        redis_config_5_0: typing.Optional[yandex.cloud.mdb.redis.v1.config.redis5_0_pb2.RedisConfig5_0] = ...,
        redis_config_6_0: typing.Optional[yandex.cloud.mdb.redis.v1.config.redis6_0_pb2.RedisConfig6_0] = ...,
        redis_config_6_2: typing.Optional[yandex.cloud.mdb.redis.v1.config.redis6_2_pb2.RedisConfig6_2] = ...,
        resources: typing.Optional[yandex.cloud.mdb.redis.v1.cluster_pb2.Resources] = ...,
        backup_window_start: typing.Optional[google.type.timeofday_pb2.TimeOfDay] = ...,
        access: typing.Optional[yandex.cloud.mdb.redis.v1.cluster_pb2.Access] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["access",b"access","backup_window_start",b"backup_window_start","redis_config_5_0",b"redis_config_5_0","redis_config_6_0",b"redis_config_6_0","redis_config_6_2",b"redis_config_6_2","redis_spec",b"redis_spec","resources",b"resources"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["access",b"access","backup_window_start",b"backup_window_start","redis_config_5_0",b"redis_config_5_0","redis_config_6_0",b"redis_config_6_0","redis_config_6_2",b"redis_config_6_2","redis_spec",b"redis_spec","resources",b"resources","version",b"version"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["redis_spec",b"redis_spec"]) -> typing.Optional[typing_extensions.Literal["redis_config_5_0","redis_config_6_0","redis_config_6_2"]]: ...
global___ConfigSpec = ConfigSpec
