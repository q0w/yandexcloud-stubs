"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import abc
import grpc
import yandex.cloud.mdb.sqlserver.v1.backup_pb2
import yandex.cloud.mdb.sqlserver.v1.backup_service_pb2

class BackupServiceStub:
    """A set of methods for managing SQL Server backups."""

    def __init__(self, channel: grpc.Channel) -> None: ...
    Get: grpc.UnaryUnaryMultiCallable[
        yandex.cloud.mdb.sqlserver.v1.backup_service_pb2.GetBackupRequest,
        yandex.cloud.mdb.sqlserver.v1.backup_pb2.Backup,
    ]
    """Returns the specified SQL Server backup.

    To get the list of available SQL Server backups, make a [List] request.
    """
    List: grpc.UnaryUnaryMultiCallable[
        yandex.cloud.mdb.sqlserver.v1.backup_service_pb2.ListBackupsRequest,
        yandex.cloud.mdb.sqlserver.v1.backup_service_pb2.ListBackupsResponse,
    ]
    """Retrieves the list of SQL Server backups available for the specified folder."""

class BackupServiceServicer(metaclass=abc.ABCMeta):
    """A set of methods for managing SQL Server backups."""

    @abc.abstractmethod
    def Get(
        self,
        request: yandex.cloud.mdb.sqlserver.v1.backup_service_pb2.GetBackupRequest,
        context: grpc.ServicerContext,
    ) -> yandex.cloud.mdb.sqlserver.v1.backup_pb2.Backup:
        """Returns the specified SQL Server backup.

        To get the list of available SQL Server backups, make a [List] request.
        """
    @abc.abstractmethod
    def List(
        self,
        request: yandex.cloud.mdb.sqlserver.v1.backup_service_pb2.ListBackupsRequest,
        context: grpc.ServicerContext,
    ) -> yandex.cloud.mdb.sqlserver.v1.backup_service_pb2.ListBackupsResponse:
        """Retrieves the list of SQL Server backups available for the specified folder."""

def add_BackupServiceServicer_to_server(servicer: BackupServiceServicer, server: grpc.Server) -> None: ...
