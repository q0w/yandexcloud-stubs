"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import abc
import grpc
import yandex.cloud.k8s.v1.cluster_pb2
import yandex.cloud.k8s.v1.cluster_service_pb2
import yandex.cloud.operation.operation_pb2

class ClusterServiceStub:
    """A set of methods for managing Kubernetes cluster."""
    def __init__(self, channel: grpc.Channel) -> None: ...
    Get: grpc.UnaryUnaryMultiCallable[
        yandex.cloud.k8s.v1.cluster_service_pb2.GetClusterRequest,
        yandex.cloud.k8s.v1.cluster_pb2.Cluster]
    """Returns the specified Kubernetes cluster.

    To get the list of available Kubernetes cluster, make a [List] request.
    """

    List: grpc.UnaryUnaryMultiCallable[
        yandex.cloud.k8s.v1.cluster_service_pb2.ListClustersRequest,
        yandex.cloud.k8s.v1.cluster_service_pb2.ListClustersResponse]
    """Retrieves the list of Kubernetes cluster in the specified folder."""

    Create: grpc.UnaryUnaryMultiCallable[
        yandex.cloud.k8s.v1.cluster_service_pb2.CreateClusterRequest,
        yandex.cloud.operation.operation_pb2.Operation]
    """Creates a Kubernetes cluster in the specified folder."""

    Update: grpc.UnaryUnaryMultiCallable[
        yandex.cloud.k8s.v1.cluster_service_pb2.UpdateClusterRequest,
        yandex.cloud.operation.operation_pb2.Operation]
    """Updates the specified Kubernetes cluster."""

    Delete: grpc.UnaryUnaryMultiCallable[
        yandex.cloud.k8s.v1.cluster_service_pb2.DeleteClusterRequest,
        yandex.cloud.operation.operation_pb2.Operation]
    """Deletes the specified Kubernetes cluster."""

    Stop: grpc.UnaryUnaryMultiCallable[
        yandex.cloud.k8s.v1.cluster_service_pb2.StopClusterRequest,
        yandex.cloud.operation.operation_pb2.Operation]
    """Stops the specified Kubernetes cluster."""

    Start: grpc.UnaryUnaryMultiCallable[
        yandex.cloud.k8s.v1.cluster_service_pb2.StartClusterRequest,
        yandex.cloud.operation.operation_pb2.Operation]
    """Starts the specified Kubernetes cluster."""

    ListNodeGroups: grpc.UnaryUnaryMultiCallable[
        yandex.cloud.k8s.v1.cluster_service_pb2.ListClusterNodeGroupsRequest,
        yandex.cloud.k8s.v1.cluster_service_pb2.ListClusterNodeGroupsResponse]
    """Lists nodegroup for the specified Kubernetes cluster."""

    ListOperations: grpc.UnaryUnaryMultiCallable[
        yandex.cloud.k8s.v1.cluster_service_pb2.ListClusterOperationsRequest,
        yandex.cloud.k8s.v1.cluster_service_pb2.ListClusterOperationsResponse]
    """Lists operations for the specified Kubernetes cluster."""

    ListNodes: grpc.UnaryUnaryMultiCallable[
        yandex.cloud.k8s.v1.cluster_service_pb2.ListClusterNodesRequest,
        yandex.cloud.k8s.v1.cluster_service_pb2.ListClusterNodesResponse]
    """Lists cluster's nodes."""


class ClusterServiceServicer(metaclass=abc.ABCMeta):
    """A set of methods for managing Kubernetes cluster."""
    @abc.abstractmethod
    def Get(self,
        request: yandex.cloud.k8s.v1.cluster_service_pb2.GetClusterRequest,
        context: grpc.ServicerContext,
    ) -> yandex.cloud.k8s.v1.cluster_pb2.Cluster:
        """Returns the specified Kubernetes cluster.

        To get the list of available Kubernetes cluster, make a [List] request.
        """
        pass

    @abc.abstractmethod
    def List(self,
        request: yandex.cloud.k8s.v1.cluster_service_pb2.ListClustersRequest,
        context: grpc.ServicerContext,
    ) -> yandex.cloud.k8s.v1.cluster_service_pb2.ListClustersResponse:
        """Retrieves the list of Kubernetes cluster in the specified folder."""
        pass

    @abc.abstractmethod
    def Create(self,
        request: yandex.cloud.k8s.v1.cluster_service_pb2.CreateClusterRequest,
        context: grpc.ServicerContext,
    ) -> yandex.cloud.operation.operation_pb2.Operation:
        """Creates a Kubernetes cluster in the specified folder."""
        pass

    @abc.abstractmethod
    def Update(self,
        request: yandex.cloud.k8s.v1.cluster_service_pb2.UpdateClusterRequest,
        context: grpc.ServicerContext,
    ) -> yandex.cloud.operation.operation_pb2.Operation:
        """Updates the specified Kubernetes cluster."""
        pass

    @abc.abstractmethod
    def Delete(self,
        request: yandex.cloud.k8s.v1.cluster_service_pb2.DeleteClusterRequest,
        context: grpc.ServicerContext,
    ) -> yandex.cloud.operation.operation_pb2.Operation:
        """Deletes the specified Kubernetes cluster."""
        pass

    @abc.abstractmethod
    def Stop(self,
        request: yandex.cloud.k8s.v1.cluster_service_pb2.StopClusterRequest,
        context: grpc.ServicerContext,
    ) -> yandex.cloud.operation.operation_pb2.Operation:
        """Stops the specified Kubernetes cluster."""
        pass

    @abc.abstractmethod
    def Start(self,
        request: yandex.cloud.k8s.v1.cluster_service_pb2.StartClusterRequest,
        context: grpc.ServicerContext,
    ) -> yandex.cloud.operation.operation_pb2.Operation:
        """Starts the specified Kubernetes cluster."""
        pass

    @abc.abstractmethod
    def ListNodeGroups(self,
        request: yandex.cloud.k8s.v1.cluster_service_pb2.ListClusterNodeGroupsRequest,
        context: grpc.ServicerContext,
    ) -> yandex.cloud.k8s.v1.cluster_service_pb2.ListClusterNodeGroupsResponse:
        """Lists nodegroup for the specified Kubernetes cluster."""
        pass

    @abc.abstractmethod
    def ListOperations(self,
        request: yandex.cloud.k8s.v1.cluster_service_pb2.ListClusterOperationsRequest,
        context: grpc.ServicerContext,
    ) -> yandex.cloud.k8s.v1.cluster_service_pb2.ListClusterOperationsResponse:
        """Lists operations for the specified Kubernetes cluster."""
        pass

    @abc.abstractmethod
    def ListNodes(self,
        request: yandex.cloud.k8s.v1.cluster_service_pb2.ListClusterNodesRequest,
        context: grpc.ServicerContext,
    ) -> yandex.cloud.k8s.v1.cluster_service_pb2.ListClusterNodesResponse:
        """Lists cluster's nodes."""
        pass


def add_ClusterServiceServicer_to_server(servicer: ClusterServiceServicer, server: grpc.Server) -> None: ...
