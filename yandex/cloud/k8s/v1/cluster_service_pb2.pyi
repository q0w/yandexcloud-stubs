"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import google.protobuf.descriptor
import google.protobuf.field_mask_pb2
import google.protobuf.internal.containers
import google.protobuf.message
import typing
import typing_extensions
import yandex.cloud.k8s.v1.cluster_pb2
import yandex.cloud.k8s.v1.node_group_pb2
import yandex.cloud.k8s.v1.node_pb2
import yandex.cloud.k8s.v1.version_pb2
import yandex.cloud.operation.operation_pb2

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

class GetClusterRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    CLUSTER_ID_FIELD_NUMBER: builtins.int
    cluster_id: typing.Text
    """ID of the Kubernetes cluster to return."""

    def __init__(self,
        *,
        cluster_id: typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["cluster_id",b"cluster_id"]) -> None: ...
global___GetClusterRequest = GetClusterRequest

class ListClustersRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    FOLDER_ID_FIELD_NUMBER: builtins.int
    PAGE_SIZE_FIELD_NUMBER: builtins.int
    PAGE_TOKEN_FIELD_NUMBER: builtins.int
    FILTER_FIELD_NUMBER: builtins.int
    folder_id: typing.Text
    """ID of the folder to list Kubernetes cluster in.
    To get the folder ID use a [yandex.cloud.resourcemanager.v1.FolderService.List] request.
    """

    page_size: builtins.int
    """The maximum number of results per page to return. If the number of available
    results is larger than [page_size],
    the service returns a [ListClustersResponse.next_page_token]
    that can be used to get the next page of results in subsequent list requests.
    Default value: 100.
    """

    page_token: typing.Text
    """Page token. To get the next page of results, set `page_token` to the
    [ListClustersResponse.next_page_token] returned by a previous list request.
    """

    filter: typing.Text
    """A filter expression that filters resources listed in the response.
    The expression must specify:
    1. The field name. Currently you can use filtering only on [Cluster.name] field.
    2. An `=` operator.
    3. The value in double quotes (`"`). Must be 3-63 characters long and match the regular expression `[a-z][-a-z0-9]{1,61}[a-z0-9]`.
    """

    def __init__(self,
        *,
        folder_id: typing.Text = ...,
        page_size: builtins.int = ...,
        page_token: typing.Text = ...,
        filter: typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["filter",b"filter","folder_id",b"folder_id","page_size",b"page_size","page_token",b"page_token"]) -> None: ...
global___ListClustersRequest = ListClustersRequest

class ListClustersResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    CLUSTERS_FIELD_NUMBER: builtins.int
    NEXT_PAGE_TOKEN_FIELD_NUMBER: builtins.int
    @property
    def clusters(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[yandex.cloud.k8s.v1.cluster_pb2.Cluster]:
        """List of Kubernetes cluster."""
        pass
    next_page_token: typing.Text
    """This token allows you to get the next page of results for list requests. If the number of results
    is larger than [ListClustersRequest.page_size], use
    the `next_page_token` as the value
    for the [ListClustersRequest.page_token] query parameter
    in the next list request. Each subsequent list request will have its own
    `next_page_token` to continue paging through the results.
    """

    def __init__(self,
        *,
        clusters: typing.Optional[typing.Iterable[yandex.cloud.k8s.v1.cluster_pb2.Cluster]] = ...,
        next_page_token: typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["clusters",b"clusters","next_page_token",b"next_page_token"]) -> None: ...
global___ListClustersResponse = ListClustersResponse

class DeleteClusterRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    CLUSTER_ID_FIELD_NUMBER: builtins.int
    cluster_id: typing.Text
    """ID of the Kubernetes cluster to delete.
    To get Kubernetes cluster ID use a [ClusterService.List] request.
    """

    def __init__(self,
        *,
        cluster_id: typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["cluster_id",b"cluster_id"]) -> None: ...
global___DeleteClusterRequest = DeleteClusterRequest

class DeleteClusterMetadata(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    CLUSTER_ID_FIELD_NUMBER: builtins.int
    cluster_id: typing.Text
    """ID of the Kubernetes cluster that is being deleted."""

    def __init__(self,
        *,
        cluster_id: typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["cluster_id",b"cluster_id"]) -> None: ...
global___DeleteClusterMetadata = DeleteClusterMetadata

class StopClusterRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    CLUSTER_ID_FIELD_NUMBER: builtins.int
    cluster_id: typing.Text
    """ID of the Kubernetes cluster to stop.
    To get Kubernetes cluster ID use a [ClusterService.List] request.
    """

    def __init__(self,
        *,
        cluster_id: typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["cluster_id",b"cluster_id"]) -> None: ...
global___StopClusterRequest = StopClusterRequest

class StopClusterMetadata(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    CLUSTER_ID_FIELD_NUMBER: builtins.int
    cluster_id: typing.Text
    """ID of the Kubernetes cluster that is being stopped."""

    def __init__(self,
        *,
        cluster_id: typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["cluster_id",b"cluster_id"]) -> None: ...
global___StopClusterMetadata = StopClusterMetadata

class StartClusterRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    CLUSTER_ID_FIELD_NUMBER: builtins.int
    cluster_id: typing.Text
    """ID of the Kubernetes cluster to start.
    To get Kubernetes cluster ID use a [ClusterService.List] request.
    """

    def __init__(self,
        *,
        cluster_id: typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["cluster_id",b"cluster_id"]) -> None: ...
global___StartClusterRequest = StartClusterRequest

class StartClusterMetadata(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    CLUSTER_ID_FIELD_NUMBER: builtins.int
    cluster_id: typing.Text
    """ID of the Kubernetes cluster that is being started."""

    def __init__(self,
        *,
        cluster_id: typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["cluster_id",b"cluster_id"]) -> None: ...
global___StartClusterMetadata = StartClusterMetadata

class UpdateClusterRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    class LabelsEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor
        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: typing.Text
        value: typing.Text
        def __init__(self,
            *,
            key: typing.Text = ...,
            value: typing.Text = ...,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["key",b"key","value",b"value"]) -> None: ...

    CLUSTER_ID_FIELD_NUMBER: builtins.int
    UPDATE_MASK_FIELD_NUMBER: builtins.int
    NAME_FIELD_NUMBER: builtins.int
    DESCRIPTION_FIELD_NUMBER: builtins.int
    LABELS_FIELD_NUMBER: builtins.int
    GATEWAY_IPV4_ADDRESS_FIELD_NUMBER: builtins.int
    MASTER_SPEC_FIELD_NUMBER: builtins.int
    SERVICE_ACCOUNT_ID_FIELD_NUMBER: builtins.int
    NODE_SERVICE_ACCOUNT_ID_FIELD_NUMBER: builtins.int
    NETWORK_POLICY_FIELD_NUMBER: builtins.int
    IP_ALLOCATION_POLICY_FIELD_NUMBER: builtins.int
    cluster_id: typing.Text
    """ID of the Kubernetes cluster to update.
    To get the Kubernetes cluster ID use a [ClusterService.List] request.
    """

    @property
    def update_mask(self) -> google.protobuf.field_mask_pb2.FieldMask: ...
    name: typing.Text
    """Name of the Kubernetes cluster.
    The name must be unique within the folder.
    """

    description: typing.Text
    """Description of the Kubernetes cluster."""

    @property
    def labels(self) -> google.protobuf.internal.containers.ScalarMap[typing.Text, typing.Text]:
        """Resource labels as `key:value` pairs.

        Existing set of `labels` is completely replaced by the provided set.
        """
        pass
    gateway_ipv4_address: typing.Text
    """Gateway IPv4 address."""

    @property
    def master_spec(self) -> global___MasterUpdateSpec:
        """Specification of the master update."""
        pass
    service_account_id: typing.Text
    """Service account to be used for provisioning Compute Cloud and VPC resources for Kubernetes cluster.
    Selected service account should have `edit` role on the folder where the Kubernetes cluster will be
    located and on the folder where selected network resides.
    """

    node_service_account_id: typing.Text
    """Service account to be used by the worker nodes of the Kubernetes cluster to access Container Registry
    or to push node logs and metrics.
    """

    @property
    def network_policy(self) -> yandex.cloud.k8s.v1.cluster_pb2.NetworkPolicy: ...
    @property
    def ip_allocation_policy(self) -> yandex.cloud.k8s.v1.cluster_pb2.IPAllocationPolicy: ...
    def __init__(self,
        *,
        cluster_id: typing.Text = ...,
        update_mask: typing.Optional[google.protobuf.field_mask_pb2.FieldMask] = ...,
        name: typing.Text = ...,
        description: typing.Text = ...,
        labels: typing.Optional[typing.Mapping[typing.Text, typing.Text]] = ...,
        gateway_ipv4_address: typing.Text = ...,
        master_spec: typing.Optional[global___MasterUpdateSpec] = ...,
        service_account_id: typing.Text = ...,
        node_service_account_id: typing.Text = ...,
        network_policy: typing.Optional[yandex.cloud.k8s.v1.cluster_pb2.NetworkPolicy] = ...,
        ip_allocation_policy: typing.Optional[yandex.cloud.k8s.v1.cluster_pb2.IPAllocationPolicy] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["gateway_ipv4_address",b"gateway_ipv4_address","internet_gateway",b"internet_gateway","ip_allocation_policy",b"ip_allocation_policy","master_spec",b"master_spec","network_policy",b"network_policy","update_mask",b"update_mask"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["cluster_id",b"cluster_id","description",b"description","gateway_ipv4_address",b"gateway_ipv4_address","internet_gateway",b"internet_gateway","ip_allocation_policy",b"ip_allocation_policy","labels",b"labels","master_spec",b"master_spec","name",b"name","network_policy",b"network_policy","node_service_account_id",b"node_service_account_id","service_account_id",b"service_account_id","update_mask",b"update_mask"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["internet_gateway",b"internet_gateway"]) -> typing.Optional[typing_extensions.Literal["gateway_ipv4_address"]]: ...
global___UpdateClusterRequest = UpdateClusterRequest

class MasterUpdateSpec(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    VERSION_FIELD_NUMBER: builtins.int
    MAINTENANCE_POLICY_FIELD_NUMBER: builtins.int
    SECURITY_GROUP_IDS_FIELD_NUMBER: builtins.int
    @property
    def version(self) -> yandex.cloud.k8s.v1.version_pb2.UpdateVersionSpec:
        """Specification of the master update."""
        pass
    @property
    def maintenance_policy(self) -> yandex.cloud.k8s.v1.cluster_pb2.MasterMaintenancePolicy:
        """Maintenance policy of the master."""
        pass
    @property
    def security_group_ids(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """Master security groups."""
        pass
    def __init__(self,
        *,
        version: typing.Optional[yandex.cloud.k8s.v1.version_pb2.UpdateVersionSpec] = ...,
        maintenance_policy: typing.Optional[yandex.cloud.k8s.v1.cluster_pb2.MasterMaintenancePolicy] = ...,
        security_group_ids: typing.Optional[typing.Iterable[typing.Text]] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["maintenance_policy",b"maintenance_policy","version",b"version"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["maintenance_policy",b"maintenance_policy","security_group_ids",b"security_group_ids","version",b"version"]) -> None: ...
global___MasterUpdateSpec = MasterUpdateSpec

class UpdateClusterMetadata(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    CLUSTER_ID_FIELD_NUMBER: builtins.int
    cluster_id: typing.Text
    """ID of the Kubernetes cluster that is being updated."""

    def __init__(self,
        *,
        cluster_id: typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["cluster_id",b"cluster_id"]) -> None: ...
global___UpdateClusterMetadata = UpdateClusterMetadata

class CreateClusterRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    class LabelsEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor
        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: typing.Text
        value: typing.Text
        def __init__(self,
            *,
            key: typing.Text = ...,
            value: typing.Text = ...,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["key",b"key","value",b"value"]) -> None: ...

    FOLDER_ID_FIELD_NUMBER: builtins.int
    NAME_FIELD_NUMBER: builtins.int
    DESCRIPTION_FIELD_NUMBER: builtins.int
    LABELS_FIELD_NUMBER: builtins.int
    NETWORK_ID_FIELD_NUMBER: builtins.int
    MASTER_SPEC_FIELD_NUMBER: builtins.int
    IP_ALLOCATION_POLICY_FIELD_NUMBER: builtins.int
    GATEWAY_IPV4_ADDRESS_FIELD_NUMBER: builtins.int
    SERVICE_ACCOUNT_ID_FIELD_NUMBER: builtins.int
    NODE_SERVICE_ACCOUNT_ID_FIELD_NUMBER: builtins.int
    RELEASE_CHANNEL_FIELD_NUMBER: builtins.int
    NETWORK_POLICY_FIELD_NUMBER: builtins.int
    KMS_PROVIDER_FIELD_NUMBER: builtins.int
    CILIUM_FIELD_NUMBER: builtins.int
    folder_id: typing.Text
    """ID of the folder to create a Kubernetes cluster in.
    To get the folder ID use a [yandex.cloud.resourcemanager.v1.FolderService.List] request.
    """

    name: typing.Text
    """Name of the Kubernetes cluster.
    The name must be unique within the folder.
    """

    description: typing.Text
    """Description of the Kubernetes cluster."""

    @property
    def labels(self) -> google.protobuf.internal.containers.ScalarMap[typing.Text, typing.Text]:
        """Resource labels as `key:value` pairs."""
        pass
    network_id: typing.Text
    """ID of the network."""

    @property
    def master_spec(self) -> global___MasterSpec:
        """Master specification of the Kubernetes cluster."""
        pass
    @property
    def ip_allocation_policy(self) -> yandex.cloud.k8s.v1.cluster_pb2.IPAllocationPolicy:
        """IP allocation policy of the Kubernetes cluster."""
        pass
    gateway_ipv4_address: typing.Text
    """Gateway IPv4 address."""

    service_account_id: typing.Text
    """Service account to be used for provisioning Compute Cloud and VPC resources for Kubernetes cluster.
    Selected service account should have `edit` role on the folder where the Kubernetes cluster will be
    located and on the folder where selected network resides.
    """

    node_service_account_id: typing.Text
    """Service account to be used by the worker nodes of the Kubernetes cluster to access Container Registry or to push node logs and metrics."""

    release_channel: yandex.cloud.k8s.v1.cluster_pb2.ReleaseChannel.ValueType
    """Release channel for the master."""

    @property
    def network_policy(self) -> yandex.cloud.k8s.v1.cluster_pb2.NetworkPolicy: ...
    @property
    def kms_provider(self) -> yandex.cloud.k8s.v1.cluster_pb2.KMSProvider:
        """KMS provider configuration."""
        pass
    @property
    def cilium(self) -> yandex.cloud.k8s.v1.cluster_pb2.Cilium: ...
    def __init__(self,
        *,
        folder_id: typing.Text = ...,
        name: typing.Text = ...,
        description: typing.Text = ...,
        labels: typing.Optional[typing.Mapping[typing.Text, typing.Text]] = ...,
        network_id: typing.Text = ...,
        master_spec: typing.Optional[global___MasterSpec] = ...,
        ip_allocation_policy: typing.Optional[yandex.cloud.k8s.v1.cluster_pb2.IPAllocationPolicy] = ...,
        gateway_ipv4_address: typing.Text = ...,
        service_account_id: typing.Text = ...,
        node_service_account_id: typing.Text = ...,
        release_channel: yandex.cloud.k8s.v1.cluster_pb2.ReleaseChannel.ValueType = ...,
        network_policy: typing.Optional[yandex.cloud.k8s.v1.cluster_pb2.NetworkPolicy] = ...,
        kms_provider: typing.Optional[yandex.cloud.k8s.v1.cluster_pb2.KMSProvider] = ...,
        cilium: typing.Optional[yandex.cloud.k8s.v1.cluster_pb2.Cilium] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["cilium",b"cilium","gateway_ipv4_address",b"gateway_ipv4_address","internet_gateway",b"internet_gateway","ip_allocation_policy",b"ip_allocation_policy","kms_provider",b"kms_provider","master_spec",b"master_spec","network_implementation",b"network_implementation","network_policy",b"network_policy"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["cilium",b"cilium","description",b"description","folder_id",b"folder_id","gateway_ipv4_address",b"gateway_ipv4_address","internet_gateway",b"internet_gateway","ip_allocation_policy",b"ip_allocation_policy","kms_provider",b"kms_provider","labels",b"labels","master_spec",b"master_spec","name",b"name","network_id",b"network_id","network_implementation",b"network_implementation","network_policy",b"network_policy","node_service_account_id",b"node_service_account_id","release_channel",b"release_channel","service_account_id",b"service_account_id"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["internet_gateway",b"internet_gateway"]) -> typing.Optional[typing_extensions.Literal["gateway_ipv4_address"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["network_implementation",b"network_implementation"]) -> typing.Optional[typing_extensions.Literal["cilium"]]: ...
global___CreateClusterRequest = CreateClusterRequest

class CreateClusterMetadata(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    CLUSTER_ID_FIELD_NUMBER: builtins.int
    cluster_id: typing.Text
    """ID of the Kubernetes cluster that is being created."""

    def __init__(self,
        *,
        cluster_id: typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["cluster_id",b"cluster_id"]) -> None: ...
global___CreateClusterMetadata = CreateClusterMetadata

class AutoUpgradeMasterMetadata(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    CLUSTER_ID_FIELD_NUMBER: builtins.int
    cluster_id: typing.Text
    """ID of the Kubernetes cluster that is being auto upgraded."""

    def __init__(self,
        *,
        cluster_id: typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["cluster_id",b"cluster_id"]) -> None: ...
global___AutoUpgradeMasterMetadata = AutoUpgradeMasterMetadata

class ListClusterOperationsRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    CLUSTER_ID_FIELD_NUMBER: builtins.int
    PAGE_SIZE_FIELD_NUMBER: builtins.int
    PAGE_TOKEN_FIELD_NUMBER: builtins.int
    FILTER_FIELD_NUMBER: builtins.int
    cluster_id: typing.Text
    """ID of the Kubernetes cluster to list operations for."""

    page_size: builtins.int
    """The maximum number of results per page that should be returned. If the number of available
    results is larger than [page_size], the service returns a [ListClusterOperationsResponse.next_page_token]
    that can be used to get the next page of results in subsequent list requests.
    Default value: 100.
    """

    page_token: typing.Text
    """Page token. To get the next page of results, set `page_token` to the
    [ListClusterOperationsResponse.next_page_token] returned by a previous list request.
    """

    filter: typing.Text
    """A filter expression that filters resources listed in the response.
    Currently you can use filtering only on [Cluster.name] field.
    """

    def __init__(self,
        *,
        cluster_id: typing.Text = ...,
        page_size: builtins.int = ...,
        page_token: typing.Text = ...,
        filter: typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["cluster_id",b"cluster_id","filter",b"filter","page_size",b"page_size","page_token",b"page_token"]) -> None: ...
global___ListClusterOperationsRequest = ListClusterOperationsRequest

class ListClusterOperationsResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    OPERATIONS_FIELD_NUMBER: builtins.int
    NEXT_PAGE_TOKEN_FIELD_NUMBER: builtins.int
    @property
    def operations(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[yandex.cloud.operation.operation_pb2.Operation]:
        """List of operations for the specified Kubernetes cluster."""
        pass
    next_page_token: typing.Text
    """This token allows you to get the next page of results for list requests. If the number of results
    is larger than [ListClusterOperationsRequest.page_size], use the `next_page_token` as the value
    for the [ListClusterOperationsRequest.page_token] query parameter in the next list request.
    Each subsequent list request will have its own `next_page_token` to continue paging through the results.
    """

    def __init__(self,
        *,
        operations: typing.Optional[typing.Iterable[yandex.cloud.operation.operation_pb2.Operation]] = ...,
        next_page_token: typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["next_page_token",b"next_page_token","operations",b"operations"]) -> None: ...
global___ListClusterOperationsResponse = ListClusterOperationsResponse

class ListClusterNodeGroupsRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    CLUSTER_ID_FIELD_NUMBER: builtins.int
    PAGE_SIZE_FIELD_NUMBER: builtins.int
    PAGE_TOKEN_FIELD_NUMBER: builtins.int
    FILTER_FIELD_NUMBER: builtins.int
    cluster_id: typing.Text
    """ID of the Kubernetes cluster to list node groups in.
    To get the Kubernetes cluster ID use a [ClusterService.List] request.
    """

    page_size: builtins.int
    """The maximum number of results per page to return. If the number of available
    results is larger than [page_size],
    the service returns a [ListClusterNodeGroupsResponse.next_page_token]
    that can be used to get the next page of results in subsequent list requests.
    Default value: 100.
    """

    page_token: typing.Text
    """Page token. To get the next page of results, set `page_token` to the
    [ListClusterNodeGroupsResponse.next_page_token] returned by a previous list request.
    """

    filter: typing.Text
    """A filter expression that filters resources listed in the response.
    Currently you can use filtering only on [Cluster.name] field.
    """

    def __init__(self,
        *,
        cluster_id: typing.Text = ...,
        page_size: builtins.int = ...,
        page_token: typing.Text = ...,
        filter: typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["cluster_id",b"cluster_id","filter",b"filter","page_size",b"page_size","page_token",b"page_token"]) -> None: ...
global___ListClusterNodeGroupsRequest = ListClusterNodeGroupsRequest

class ListClusterNodeGroupsResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    NODE_GROUPS_FIELD_NUMBER: builtins.int
    NEXT_PAGE_TOKEN_FIELD_NUMBER: builtins.int
    @property
    def node_groups(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[yandex.cloud.k8s.v1.node_group_pb2.NodeGroup]:
        """List of node groups for the specified Kubernetes cluster."""
        pass
    next_page_token: typing.Text
    """This token allows you to get the next page of results for list requests. If the number of results
    is larger than [ListClusterNodeGroupsRequest.page_size], use
    the `next_page_token` as the value
    for the [ListClusterNodeGroupsRequest.page_token] query parameter
    in the next list request. Each subsequent list request will have its own
    `next_page_token` to continue paging through the results.
    """

    def __init__(self,
        *,
        node_groups: typing.Optional[typing.Iterable[yandex.cloud.k8s.v1.node_group_pb2.NodeGroup]] = ...,
        next_page_token: typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["next_page_token",b"next_page_token","node_groups",b"node_groups"]) -> None: ...
global___ListClusterNodeGroupsResponse = ListClusterNodeGroupsResponse

class ListClusterNodesRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    CLUSTER_ID_FIELD_NUMBER: builtins.int
    PAGE_SIZE_FIELD_NUMBER: builtins.int
    PAGE_TOKEN_FIELD_NUMBER: builtins.int
    cluster_id: typing.Text
    """ID of the Kubernetes cluster to list nodes in.
    To get the Kubernetes cluster ID use a [ClusterService.List] request.
    """

    page_size: builtins.int
    """The maximum number of results per page to return. If the number of available
    results is larger than [page_size],
    the service returns a [ListClusterNodesResponse.next_page_token]
    that can be used to get the next page of results in subsequent list requests.
    Default value: 100.
    """

    page_token: typing.Text
    """Page token. To get the next page of results, set `page_token` to the
    [ListClusterNodeGroupsResponse.next_page_token] returned by a previous list request.
    """

    def __init__(self,
        *,
        cluster_id: typing.Text = ...,
        page_size: builtins.int = ...,
        page_token: typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["cluster_id",b"cluster_id","page_size",b"page_size","page_token",b"page_token"]) -> None: ...
global___ListClusterNodesRequest = ListClusterNodesRequest

class ListClusterNodesResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    NODES_FIELD_NUMBER: builtins.int
    NEXT_PAGE_TOKEN_FIELD_NUMBER: builtins.int
    @property
    def nodes(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[yandex.cloud.k8s.v1.node_pb2.Node]:
        """List of nodes for the specified Kubernetes cluster."""
        pass
    next_page_token: typing.Text
    """This token allows you to get the next page of results for list requests. If the number of results
    is larger than [ListClusterNodesRequest.page_size], use
    the `next_page_token` as the value
    for the [ListClusterNodesRequest.page_token] query parameter
    in the next list request. Each subsequent list request will have its own
    `next_page_token` to continue paging through the results.
    """

    def __init__(self,
        *,
        nodes: typing.Optional[typing.Iterable[yandex.cloud.k8s.v1.node_pb2.Node]] = ...,
        next_page_token: typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["next_page_token",b"next_page_token","nodes",b"nodes"]) -> None: ...
global___ListClusterNodesResponse = ListClusterNodesResponse

class MasterSpec(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    ZONAL_MASTER_SPEC_FIELD_NUMBER: builtins.int
    REGIONAL_MASTER_SPEC_FIELD_NUMBER: builtins.int
    VERSION_FIELD_NUMBER: builtins.int
    MAINTENANCE_POLICY_FIELD_NUMBER: builtins.int
    SECURITY_GROUP_IDS_FIELD_NUMBER: builtins.int
    @property
    def zonal_master_spec(self) -> global___ZonalMasterSpec:
        """Specification of the zonal master."""
        pass
    @property
    def regional_master_spec(self) -> global___RegionalMasterSpec:
        """Specification of the regional master."""
        pass
    version: typing.Text
    """Version of Kubernetes components that runs on the master."""

    @property
    def maintenance_policy(self) -> yandex.cloud.k8s.v1.cluster_pb2.MasterMaintenancePolicy:
        """Maintenance policy of the master."""
        pass
    @property
    def security_group_ids(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """Master security groups."""
        pass
    def __init__(self,
        *,
        zonal_master_spec: typing.Optional[global___ZonalMasterSpec] = ...,
        regional_master_spec: typing.Optional[global___RegionalMasterSpec] = ...,
        version: typing.Text = ...,
        maintenance_policy: typing.Optional[yandex.cloud.k8s.v1.cluster_pb2.MasterMaintenancePolicy] = ...,
        security_group_ids: typing.Optional[typing.Iterable[typing.Text]] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["maintenance_policy",b"maintenance_policy","master_type",b"master_type","regional_master_spec",b"regional_master_spec","zonal_master_spec",b"zonal_master_spec"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["maintenance_policy",b"maintenance_policy","master_type",b"master_type","regional_master_spec",b"regional_master_spec","security_group_ids",b"security_group_ids","version",b"version","zonal_master_spec",b"zonal_master_spec"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["master_type",b"master_type"]) -> typing.Optional[typing_extensions.Literal["zonal_master_spec","regional_master_spec"]]: ...
global___MasterSpec = MasterSpec

class ZonalMasterSpec(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    ZONE_ID_FIELD_NUMBER: builtins.int
    INTERNAL_V4_ADDRESS_SPEC_FIELD_NUMBER: builtins.int
    EXTERNAL_V4_ADDRESS_SPEC_FIELD_NUMBER: builtins.int
    zone_id: typing.Text
    """ID of the availability zone."""

    @property
    def internal_v4_address_spec(self) -> global___InternalAddressSpec:
        """Specification of parameters for internal IPv4 networking."""
        pass
    @property
    def external_v4_address_spec(self) -> global___ExternalAddressSpec:
        """Specification of parameters for external IPv4 networking."""
        pass
    def __init__(self,
        *,
        zone_id: typing.Text = ...,
        internal_v4_address_spec: typing.Optional[global___InternalAddressSpec] = ...,
        external_v4_address_spec: typing.Optional[global___ExternalAddressSpec] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["external_v4_address_spec",b"external_v4_address_spec","internal_v4_address_spec",b"internal_v4_address_spec"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["external_v4_address_spec",b"external_v4_address_spec","internal_v4_address_spec",b"internal_v4_address_spec","zone_id",b"zone_id"]) -> None: ...
global___ZonalMasterSpec = ZonalMasterSpec

class RegionalMasterSpec(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    REGION_ID_FIELD_NUMBER: builtins.int
    LOCATIONS_FIELD_NUMBER: builtins.int
    EXTERNAL_V4_ADDRESS_SPEC_FIELD_NUMBER: builtins.int
    EXTERNAL_V6_ADDRESS_SPEC_FIELD_NUMBER: builtins.int
    region_id: typing.Text
    """ID of the availability zone where the master resides."""

    @property
    def locations(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___MasterLocation]:
        """List of locations where the master will be allocated."""
        pass
    @property
    def external_v4_address_spec(self) -> global___ExternalAddressSpec:
        """Specify to allocate a static public IP for the master."""
        pass
    @property
    def external_v6_address_spec(self) -> global___ExternalAddressSpec:
        """Specification of parameters for external IPv6 networking."""
        pass
    def __init__(self,
        *,
        region_id: typing.Text = ...,
        locations: typing.Optional[typing.Iterable[global___MasterLocation]] = ...,
        external_v4_address_spec: typing.Optional[global___ExternalAddressSpec] = ...,
        external_v6_address_spec: typing.Optional[global___ExternalAddressSpec] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["external_v4_address_spec",b"external_v4_address_spec","external_v6_address_spec",b"external_v6_address_spec"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["external_v4_address_spec",b"external_v4_address_spec","external_v6_address_spec",b"external_v6_address_spec","locations",b"locations","region_id",b"region_id"]) -> None: ...
global___RegionalMasterSpec = RegionalMasterSpec

class InternalAddressSpec(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    SUBNET_ID_FIELD_NUMBER: builtins.int
    subnet_id: typing.Text
    """ID of the subnet. If no ID is specified, and there only one subnet in specified zone, an address in this subnet will be allocated."""

    def __init__(self,
        *,
        subnet_id: typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["subnet_id",b"subnet_id"]) -> None: ...
global___InternalAddressSpec = InternalAddressSpec

class ExternalAddressSpec(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    ADDRESS_FIELD_NUMBER: builtins.int
    address: typing.Text
    """IP address."""

    def __init__(self,
        *,
        address: typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["address",b"address"]) -> None: ...
global___ExternalAddressSpec = ExternalAddressSpec

class MasterLocation(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    ZONE_ID_FIELD_NUMBER: builtins.int
    INTERNAL_V4_ADDRESS_SPEC_FIELD_NUMBER: builtins.int
    zone_id: typing.Text
    """ID of the availability zone."""

    @property
    def internal_v4_address_spec(self) -> global___InternalAddressSpec:
        """If not specified and there is a single subnet in specified zone, address
        in this subnet will be allocated.
        """
        pass
    def __init__(self,
        *,
        zone_id: typing.Text = ...,
        internal_v4_address_spec: typing.Optional[global___InternalAddressSpec] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["internal_v4_address_spec",b"internal_v4_address_spec"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["internal_v4_address_spec",b"internal_v4_address_spec","zone_id",b"zone_id"]) -> None: ...
global___MasterLocation = MasterLocation
